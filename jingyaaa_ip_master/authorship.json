[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"# duke project template","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyaaa":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class Duke {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"        FileProcessor fileProcessor \u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"            fileProcessor \u003d new FileProcessor(taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        ui.greet();","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"        String input \u003d ui.getUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        while (input.compareTo(\"bye\") !\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"            String[] parsedInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"                parsedInput \u003d parser.parseInput(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"Oops, I\u0027m sorry, I don\u0027t know what that means :(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"                input \u003d ui.getUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"                continue;","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"Oops, \" + input + \" cannot have an empty description\");","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"                input \u003d ui.getUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"                continue;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"                String[] getCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"Oops, \" + getCommand[0] + \" is in the wrong format\");","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"                input \u003d ui.getUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"                continue;","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"                case (\"todo\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"                    taskList.add(new ToDo(parsedInput[1]));","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"                case (\"deadline\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"                        taskList.add(new Deadline(parsedInput[1], parsedInput[2]));","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, deadline input has the wrong format\");","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, deadline task number does not exist\");","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"                case (\"event\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"                    taskList.add(new Event(parsedInput[1], parsedInput[2], parsedInput[3]));","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"                case (\"mark\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"jingyaaa"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"                        taskList.get(Integer.parseInt(parsedInput[1]) - 1).setDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"jingyaaa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, mark task description should be an integer\");","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"jingyaaa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, mark task number does not exist\");","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"jingyaaa"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jingyaaa"},"content":"                case (\"unmark\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"jingyaaa"},"content":"                    try {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"jingyaaa"},"content":"                        taskList.get(Integer.parseInt(parsedInput[1]) - 1).setUndone();","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"jingyaaa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, unmark task description should be an integer\");","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"jingyaaa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, unmark task number does not exist\");","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"jingyaaa"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"jingyaaa"},"content":"                case (\"list\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"jingyaaa"},"content":"                    ui.printList(taskList);","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"jingyaaa"},"content":"                case (\"delete\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"jingyaaa"},"content":"                    try {","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"jingyaaa"},"content":"                        Task removeTask \u003d taskList.get(Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"jingyaaa"},"content":"                        taskList.remove(Integer.parseInt(parsedInput[1]) - 1);","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"jingyaaa"},"content":"                        removeTask.delete(taskList);","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"jingyaaa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, delete task description should be an integer\");","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"jingyaaa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"jingyaaa"},"content":"                        System.out.println(\"Oops, delete task number does not exist\");","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"jingyaaa"},"content":"                    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jingyaaa"},"content":"            ui.showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"jingyaaa"},"content":"            input \u003d ui.getUserInput();","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"jingyaaa"},"content":"        fileProcessor.writeFile(taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"jingyaaa"},"content":"        ui.farewell();","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jingyaaa":99,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":4}},{"path":"src/main/java/duke/FileProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"import java.io.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class FileProcessor {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public File dukeTextFile;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public FileProcessor(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"        this.dukeTextFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"            if (dukeTextFile.createNewFile()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"File created: \" + dukeTextFile.getName());","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(\"duke.txt\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"                String line \u003d reader.readLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"                while (line !\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"                    String[] splitLine \u003d line.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"                    addToList(taskList, splitLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"                    line \u003d reader.readLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"    public void addToList(ArrayList\u003cTask\u003e taskList, String[] parameters) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(parameters[0]);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"            case (\"[T]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"                taskList.add(new ToDo(parameters[2]));","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"Added to list\");","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"            case (\"[D]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"                taskList.add(new Deadline(parameters[2], parameters[3]));","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"            case (\"[E]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"                taskList.add(new Event(parameters[2], parameters[3], parameters[4]));","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"    public void writeFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(\"duke.txt\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"            for (int x \u003d 0; x \u003c taskList.size(); x +\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"                Task currentTask \u003d taskList.get(x);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"                switch (currentTask.taskChar) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"                    case (\"[T]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"                        bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status + \"/\" + currentTask.taskDescription + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"                    case (\"[D]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"                        bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status + \"/\" + currentTask.taskDescription + \"/\" + ((Deadline) currentTask).by + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"jingyaaa"},"content":"                        break;","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"                    case (\"[E]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"jingyaaa"},"content":"                        bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status + \"/\" + currentTask.taskDescription + \"/\" + ((Event) currentTask).from + \"/\" + ((Event) currentTask).to + \"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"jingyaaa"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"jingyaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"jingyaaa"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"jingyaaa":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"public class Parser {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"    public String[] parseInput(String userInput) {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"        String[] intermediateInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"        String[] parsedInput \u003d new String[4];","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"        parsedInput[0] \u003d intermediateInput[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"        switch (parsedInput[0]) {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"            case(\"list\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"                if (intermediateInput.length \u003e 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"                    throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"            case(\"deadline\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"                int byIndex \u003d intermediateInput[1].indexOf(\"/by \");","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"                parsedInput[1] \u003d intermediateInput[1].substring(0, byIndex - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"                parsedInput[2] \u003d intermediateInput[1].substring(byIndex + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"            case(\"event\"):","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"               int fromIndex \u003d intermediateInput[1].indexOf(\"/from \");","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"               int toIndex \u003d intermediateInput[1].indexOf(\"/to \");","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"               parsedInput[1] \u003d intermediateInput[1].substring(0, fromIndex - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"               parsedInput[2] \u003d intermediateInput[1].substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"               parsedInput[3] \u003d intermediateInput[1].substring(toIndex + 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"            case(\"todo\"): case(\"mark\"): case(\"unmark\"): case(\"delete\"):","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"                parsedInput[1] \u003d intermediateInput[1];","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"                break;","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"                throw new DukeException();","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        return parsedInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"public class Ui {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"    static final String divider \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public void greet() {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        String greeting \u003d divider","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"                + \"\\nHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"                + divider;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(\"Hello from\\n\" + logo + greeting);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"    public void farewell() {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"        return userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"    public void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        for (int x \u003d 0; x \u003c taskList.size(); x +\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"            System.out.print((x + 1) + \". \");","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"            taskList.get(x).print();","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":45}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"    public String by;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"        this.taskChar \u003d \"[D]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"        print();","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public void print() {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(formattedTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"    public String from;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"    public String to;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"    public Event(String taskDescription, String from, String to) {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"        taskChar \u003d \"[E]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"        print();","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public void print() {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(formattedTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":21}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"    public String taskDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"    public String status;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"    public String taskChar;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"    public String formattedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"        this.status \u003d \"[ ]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"        System.out.print(\"Added: \");","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        status \u003d \"[X]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        print();","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    public void setUndone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"        status \u003d \"[ ]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        print();","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"    public void print() {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(formattedTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"    public void delete(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        String taskWord;","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"            taskWord \u003d \"task\";","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"        } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"            taskWord \u003d \"tasks\";","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\\n    \" + formattedTask + \"\\nNow you have \" + taskList.size() + \" \" + taskWord + \" in your list.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jingyaaa":42}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"        this.taskChar \u003d \"[T]\";","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"        print();","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyaaa":1,"-":20}}]
