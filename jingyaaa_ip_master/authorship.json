[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"# duke project template","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyaaa":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"# **User Guide**","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"Project Duke is a Personal Assistant Chatbot in the form of a Command Line Interface (CLI) Application. It helps you keep track of all your tasks with ease. Hope you enjoy using it!","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"## Getting Started","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"To run the application, you need to have Java 11 installed on your device. ","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"1. Download the `\"ip.jar\"` file.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"2. Locate the file in your computer and copy its `absolute path`.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"3. Open a terminal and key in the following command, replace the `\u003cabsolute_path\u003e` with the `absolute path` which you have copied in the previous step:","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"java -jar \u003cabsolute_path\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"When you have successfully setup, you should see something like this:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"File created: duke.txt","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"Hello from","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":" ____        _        ","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"What can I do for you?","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"### Add Task","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"There are 3 different types of tasks that you can add: `todo`, `deadline`, and `event`. Tasks are shown in the form:","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"`\u003ctask_character\u003e\u003ctask_status\u003e \u003ctask_description + details\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"Example:","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"[X][X] this is my task (these are the task details)","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"`NOTE:` task description and details should not contain the character `\"/\"`","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"#### Todo","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"A todo task is marked with the `\u003ctask_character\u003e: \"[T]\"` and contains a task description.","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"`todo \u003ctask_description\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"todo read book","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"Added todo: [T][ ] read book","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"#### Deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"A deadline task is marked with the `\u003ctask_character\u003e: \"[D]\"` and contains a task description and the time/date that it should be completed by.","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"Command Format: `deadline \u003ctask_description\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"jingyaaa"},"content":"deadline book review /by tues 2359","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"jingyaaa"},"content":"Added deadline: [D][ ] book review (by: tues 2359)","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"jingyaaa"},"content":"#### Event","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"jingyaaa"},"content":"An event task is marked with the `\u003ctask character\u003e: \"[E]\"` and contains a task description, the time/date that it starts and the time/date it ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"jingyaaa"},"content":"`event \u003ctask_description\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"jingyaaa"},"content":"event book fair /from fri 3pm /to fri 5pm","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"jingyaaa"},"content":"Added event: [E][ ] book fair (from: fri 3pm to: fri 5pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"jingyaaa"},"content":"### List Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"jingyaaa"},"content":"This command allows you to list all tasks in your task-list.","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"jingyaaa"},"content":"list","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"jingyaaa"},"content":"1. [T][ ] read book","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"jingyaaa"},"content":"2. [D][ ] book review (by: tues 2359)","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"jingyaaa"},"content":"3. [E][ ] book fair (from: fri 3pm to: fri 5pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"jingyaaa"},"content":"all tasks listed!","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"jingyaaa"},"content":"### Delete Task","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"jingyaaa"},"content":"This command allows you to delete a task that is specified by a task number.","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"jingyaaa"},"content":"`delete \u003ctask_number\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"jingyaaa"},"content":"delete 1","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"jingyaaa"},"content":"Deleted Task: [T][ ] read book","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"jingyaaa"},"content":"### Change Task Status","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"jingyaaa"},"content":"There are two commands that can help you change the status of your task.","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"jingyaaa"},"content":"#### Mark Task","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"jingyaaa"},"content":"This command allows you to mark a task as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"jingyaaa"},"content":"`mark \u003ctask_number\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"jingyaaa"},"content":"mark 1","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"jingyaaa"},"content":"Marked Task: [E][X] book fair (from: fri 3pm to: fri 5pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"jingyaaa"},"content":"#### Unmark Task","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"jingyaaa"},"content":"This command allows you to mark a task as not done.","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"jingyaaa"},"content":"`unmark \u003ctask_number\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"jingyaaa"},"content":"unmark 1","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"jingyaaa"},"content":"Unmarked Task: [E][ ] book fair (from: fri 3pm to: fri 5pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"jingyaaa"},"content":"### Find Task By Keyword","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"jingyaaa"},"content":"This command allows you to search your task-list for tasks containing a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"jingyaaa"},"content":"Command Format:","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"jingyaaa"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"jingyaaa"},"content":"find review","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"jingyaaa"},"content":"Expected Outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"jingyaaa"},"content":"[D][ ] book review (by: tues 2359)","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"jingyaaa"},"content":"All matching tasks have been listed!","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"jingyaaa"},"content":"### Exit","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"jingyaaa"},"content":"This commands allows you to exit the application. Your task-list will be automatically saved in a file named `\"duke.txt\"` and auto-loaded the next time you run the duke application.","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"jingyaaa"},"content":"Command:","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"jingyaaa"},"content":"bye","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"jingyaaa"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"jingyaaa"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"jingyaaa"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"jingyaaa"},"content":"## Summary of Commands","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"jingyaaa"},"content":"| Command | Format | Example | ","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"jingyaaa"},"content":"| ------- | ------ | ------- | ","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"jingyaaa"},"content":"| `todo` | todo \u003ctask_description\u003e | todo read book |","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"jingyaaa"},"content":"| `deadline` | deadline \u003ctask_description\u003e /by \u003cdate/time\u003e | deadline book review /by tues 2359 |","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"jingyaaa"},"content":"| `event` | event \u003ctask_description\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e | event book fair /from fri 3pm /to fri 5pm","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"jingyaaa"},"content":"| `list` | list | list |","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"jingyaaa"},"content":"| `delete` | delete \u003ctask_number\u003e | delete 1|","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"jingyaaa"},"content":"| `mark` | mark \u003ctask_number\u003e | mark 1 |","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"jingyaaa"},"content":"| `unmark` | unmark \u003ctask_number\u003e | unmark 1|","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"jingyaaa"},"content":"| `find` | find \u003ckeyword\u003e | find review |","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"jingyaaa"},"content":"| `bye` | bye | bye |","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"jingyaaa"},"content":"### Credits","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"jingyaaa"},"content":"This project was completed with reference to [nus-cs2113-AY2223S2/personbook](https://github.com/nus-cs2113-AY2223S2/personbook)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"jingyaaa":175,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" * Adapted from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"public class Duke {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    private FileProcessor fileProcessor;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    public static void main(String args[]) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        new Duke().run();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    public void run() {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        start();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        runLoopTillExit();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        exit();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"    private void start() {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        this.fileProcessor \u003d new FileProcessor(taskList.getListOfTasks());","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        ui.greet();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    private void exit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"        ui.farewell();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        fileProcessor.writeFile(taskList.getListOfTasks());","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"    private void runLoopTillExit() {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"        Command command;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        String userCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"        userCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"        while (!userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"            command \u003d new Parser().parseCommand(userCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"            ui.showResultToUser(result);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"            userCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"            command.setData(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"            CommandResult result \u003d command.execute();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"            return result;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jingyaaa":59,"-":1}},{"path":"src/main/java/duke/FileProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.ToDo;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"import java.io.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":" * Handles the reading, writing and creation of the \"duke.txt\" file which contains user data.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"public class FileProcessor {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public File dukeTextFile;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"     * Read from an existing file the user data and adds each task to the task list provided","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"     * Creates a file if file does not exist","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"     * @param taskList task list to be operated on if file exists and is not empty","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"    public FileProcessor(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        this.dukeTextFile \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"            if (dukeTextFile.createNewFile()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"                System.out.println(\"File created: \" + dukeTextFile.getName());","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(\"duke.txt\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"                String line \u003d reader.readLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"                while (line !\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"                    String[] splitLine \u003d line.split(\"/\");","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"                    addToList(taskList, splitLine);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"                    line \u003d reader.readLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"     * Adds a task specified by the parameters to the task list provided","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"     * @param taskList task list to be operated on","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"     * @param parameters contains task details","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"    public void addToList(ArrayList\u003cTask\u003e taskList, String[] parameters) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"        Task toAdd;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"        case (\"[T]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"            toAdd \u003d new ToDo(parameters[2], parameters[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"            taskList.add(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"        case (\"[D]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"            toAdd \u003d new Deadline(parameters[2], parameters[1], parameters[3]);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"            taskList.add(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"        case (\"[E]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"            toAdd \u003d new Event(parameters[2], parameters[1], parameters[3], parameters[4]);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"jingyaaa"},"content":"            taskList.add(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"jingyaaa"},"content":"     * Writes all task in the task list provided in a standardised format into the open file \"duke.txt\"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"jingyaaa"},"content":"     * @param taskList contains the tasks to be written","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"jingyaaa"},"content":"    public void writeFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"jingyaaa"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(\"duke.txt\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"jingyaaa"},"content":"            for (int x \u003d 0; x \u003c taskList.size(); x +\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"jingyaaa"},"content":"                Task currentTask \u003d taskList.get(x);","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"jingyaaa"},"content":"                switch (currentTask.taskChar) {","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"jingyaaa"},"content":"                case (\"[T]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"jingyaaa"},"content":"                    bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + currentTask.taskDescription + \"\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"jingyaaa"},"content":"                case (\"[D]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"jingyaaa"},"content":"                    bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + currentTask.taskDescription","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + ((Deadline) currentTask).by + \"\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"jingyaaa"},"content":"                case (\"[E]\"):","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"jingyaaa"},"content":"                    bufferedWriter.write(currentTask.taskChar + \"/\" + currentTask.status","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + currentTask.taskDescription","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + ((Event) currentTask).from","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"jingyaaa"},"content":"                            + \"/\" + ((Event) currentTask).to + \"\\n\");","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"jingyaaa"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"jingyaaa"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"jingyaaa"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"jingyaaa"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"jingyaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"jingyaaa"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"jingyaaa":102}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"import static duke.Ui.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" * Processes user inputs.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":" * Adapted from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"public class Parser {","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"     * Processes input and returns the correct command to be executed","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"     * @param userInput string containing user input","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"     * @return command","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        String[] intermediateInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        String commandWord \u003d intermediateInput[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        if (intermediateInput.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        if ((intermediateInput.length \u003d\u003d 1) \u0026\u0026 (!commandWord.equals(\"list\"))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(2);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        case DeleteCommand.COMMAND_WORD: case UnmarkCommand.COMMAND_WORD: case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            return prepareCommand(commandWord, intermediateInput[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"        case ToDo.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"            return prepareToDo(intermediateInput[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        case Deadline.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"            return prepareDeadline(intermediateInput[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"        case Event.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"            return prepareEvent(intermediateInput[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"            return new FindCommand(intermediateInput[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"        default:","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"     * Processes a string containing an expected index","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"     * @param arguments contains the string form of an expected index","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"     * @return an integer containing the index or -1 if invalid input","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"    private int getIndexFromCommand(String arguments) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"        int taskIndex;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"            return taskIndex \u003d Integer.parseInt(arguments);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"            return -1;","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"jingyaaa"},"content":"     * Processes the index argument needed for the commands and returns the correct command","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"     * @param command identifier for the right command","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"jingyaaa"},"content":"     * @param arguments contains the string form of an expected index","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"     * @return command","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"jingyaaa"},"content":"    private Command prepareCommand(String command, String arguments) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"jingyaaa"},"content":"        int taskIndex \u003d getIndexFromCommand(arguments) - DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"jingyaaa"},"content":"        switch (command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"jingyaaa"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"jingyaaa"},"content":"                return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"jingyaaa"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"jingyaaa"},"content":"                return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"jingyaaa"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"jingyaaa"},"content":"                return new MarkCommand(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"jingyaaa"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"jingyaaa"},"content":"                return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"jingyaaa"},"content":"    private Command prepareToDo(String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"jingyaaa"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(1);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"jingyaaa"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"jingyaaa"},"content":"            return new ToDo(arguments, \"[ ]\");","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"jingyaaa"},"content":"     * Processes a string expected to contain the task description","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"jingyaaa"},"content":"     * and \"from\" and \"to\" information of a event task","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"jingyaaa"},"content":"     * @param arguments contains task details","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"jingyaaa"},"content":"     * @return command","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"jingyaaa"},"content":"    private Command prepareEvent(String arguments) {","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"jingyaaa"},"content":"        int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"jingyaaa"},"content":"        int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"jingyaaa"},"content":"            String taskDescriptor \u003d arguments.substring(0, fromIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"jingyaaa"},"content":"            String taskFrom \u003d arguments.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"jingyaaa"},"content":"            String taskTo \u003d arguments.substring(toIndex + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"jingyaaa"},"content":"            return new Event(taskDescriptor, \"[ ]\", taskFrom, taskTo);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"jingyaaa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(1);","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"jingyaaa"},"content":"     * Processes a string expected to contain the task description","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"jingyaaa"},"content":"     * and the \"by\" information of a deadline task","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"jingyaaa"},"content":"     * @param arguments contains task details","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"jingyaaa"},"content":"     * @return command","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"jingyaaa"},"content":"    private Command prepareDeadline(String arguments) {","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"jingyaaa"},"content":"        int byIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"jingyaaa"},"content":"            String taskDescriptor \u003d arguments.substring(0, byIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"jingyaaa"},"content":"            String taskBy \u003d arguments.substring(byIndex + 4);","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"jingyaaa"},"content":"            return new Deadline(taskDescriptor, \"[ ]\", taskBy);","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"jingyaaa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"jingyaaa"},"content":"            return new IncorrectCommand(1);","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":128}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":" * Taken from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"        listOfTasks.add(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        listOfTasks.remove(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        return listOfTasks.get(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    public int getSizeOfList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        return listOfTasks.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"        return listOfTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":33}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" * Handles the interactions with the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" * Adapted from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class Ui {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"     * Formats the feedback message to the user","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"     * @param message contains feedback messages of execution","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"     * Taken from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"        for (String m : message) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"            System.out.println(m.replace(\"\\n\", LS));","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"    public void greet() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        String greeting \u003d DIVIDER","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"                + \"\\nHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"                + DIVIDER;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(\"Hello from\\n\" + logo + greeting);","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"    public void farewell() {","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"        showLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"        return userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"     * Formats output message to the user","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"     * Taken from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"     * @param result contains result of the execution of a command","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"jingyaaa"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"jingyaaa"},"content":"        showToUser(result.outputToUser, DIVIDER);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"jingyaaa":66}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":" * Represents a Command.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" * Adapted from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"public class Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public int targetIndex \u003d -1;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"     * Supplies the task list that the command will operate on","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"     * @param taskList","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"    public Command(int targetIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"    protected Command() {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"     * Executes command and return results","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"     * Ensures that execute() is not implemented by Command class","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        throw new UnsupportedOperationException(\"method to be implemented by child classes\");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"    };","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":37}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" * Represent the result of an executed command.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" * Adapted from nus-cs2113-AY2223S2/personbook","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"public class CommandResult {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public final String outputToUser;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult(String outputToUser) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        this.outputToUser \u003d outputToUser;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        taskList \u003d null;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult(String outputToUser, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        this.outputToUser \u003d outputToUser;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":27}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import static duke.Ui.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_DELETE_FAIL \u003d \"Task number %1$d does not exist!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public DeleteCommand(int targetIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        super(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"     * Deletes a task if index given is valid","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback message","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        int taskNumber \u003d targetIndex + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            Task target \u003d taskList.getTask(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"            taskList.deleteTask(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SUCCESS, target.formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_FAIL, taskNumber));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":36}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_FIND_SUCCESS \u003d \"All matching tasks have been listed!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_FIND_FAIL \u003d \"There are no matching tasks!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"    public String keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public boolean isFound \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        for (int x \u003d 0; x \u003c taskList.getSizeOfList(); x++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"            containsKeyword(taskList.getTask(x), keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"        if (isFound) {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"            isFound \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(MESSAGE_FIND_SUCCESS);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(MESSAGE_FIND_FAIL);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"    public void containsKeyword(Task task, String keyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"        if (task.taskDescription.contains(keyword)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"            task.print();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"            isFound \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":37}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":" * Handles invalid commands.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_INCORRECT_COMMAND \u003d \"Oops I don\u0027t understand this command!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_MISSING_ARGUMENTS \u003d \"Oops, command is missing arguments!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"            \"Oops, command is invalid or might be missing arguments!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    int error_num;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public IncorrectCommand(int error_num) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"        this.error_num \u003d error_num;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"     * Gives the corresponding message specified by the error number provided","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing message on feedback of invalid command given","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"        switch(error_num) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"        case 1:","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        case 2:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        default:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"             return new CommandResult(MESSAGE_INCORRECT_COMMAND);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":35}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":" * Lists all tasks in the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_LIST_SUCCESS \u003d \"all tasks listed!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"     * Prints all tasks in the task list","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback of execution","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        for (int x \u003d 0; x \u003c taskList.getSizeOfList(); x++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"            System.out.print(x + 1 + \". \");","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"            taskList.getTask(x).print();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        return new CommandResult(MESSAGE_LIST_SUCCESS);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":24}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import static duke.Ui.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" * Changes the status of a task in the task list to completed.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_MARK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_MARK_FAIL \u003d \"Task number %1$d does not exist!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public MarkCommand(int targetIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        super(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"     * Changes the status of a task in the task list specified by its task number to completed","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback of execution","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        int taskNumber \u003d targetIndex + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            Task target \u003d taskList.getTask(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"            target.setDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_MARK_SUCCESS, target.formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_MARK_FAIL, taskNumber));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":37}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"import static duke.Ui.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" * Changes the status of a task in the task list to uncompleted.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_UNMARK_FAIL \u003d \"Task number %1$d does not exist!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public UnmarkCommand(int targetIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        super(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"     * Changes the status of a task in the task list specified by its task number to uncompleted","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback of execution","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        int taskNumber \u003d targetIndex + DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"            Task target \u003d taskList.getTask(targetIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"            target.setUndone();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_UNMARK_SUCCESS, target.formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"            return new CommandResult(String.format(MESSAGE_UNMARK_FAIL, taskNumber));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":37}},{"path":"src/main/java/duke/commands/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":" * Represents a deadline task in the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_ADD_DEADLINE_SUCCESS \u003d \"Added deadline: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public Deadline addDeadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public String by;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"    public Deadline(String taskDescription, String taskStatus, String by) {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription, taskStatus);","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        this.taskChar \u003d \"[D]\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        setFormattedTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     * Sets and updates any changes to the string representing the deadline task when called","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"    public void setFormattedTask() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"                + \" (by: \" + by + \")\";","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"     * Adds a deadline task into the task list","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback message","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"        addDeadline \u003d this;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"        taskList.addTask(addDeadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_DEADLINE_SUCCESS, formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":43}},{"path":"src/main/java/duke/commands/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":" * Represents an event task in the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"Added event: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public Event addEvent;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"    public String from;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public String to;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"    public Event(String taskDescription, String taskStatus, String from, String to) {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription, taskStatus);","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"        taskChar \u003d \"[E]\";","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"        setFormattedTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"     * Sets and updates any changes to the string representing the event task when called","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"    public void setFormattedTask() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"                + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"     * Adds an event task in to the task list","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback message","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"        addEvent \u003d this;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"        taskList.addTask(addEvent);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_EVENT_SUCCESS, formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":44}},{"path":"src/main/java/duke/commands/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" * Represents a task in the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"public class Task extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"    public String taskDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public String status;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public String taskChar \u003d \"[ ]\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public String formattedTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"    public Task(String taskDescription, String taskStatus) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"        this.status \u003d taskStatus;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     * Changes the status of the task to a string representing a completed task","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"    public void setDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"        this.status \u003d \"[X]\";","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"        setFormattedTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"     * Changes the status of the task to a string representing an uncompleted task","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"    public void setUndone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"        this.status \u003d \"[ ]\";","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"        setFormattedTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"jingyaaa"},"content":"     * Sets and updates any changes to the string representing the task when called","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"jingyaaa"},"content":"    public void setFormattedTask() {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"jingyaaa"},"content":"    public void print() {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"jingyaaa"},"content":"        System.out.println(formattedTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"jingyaaa"},"content":"     * Executes command and return results","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"jingyaaa"},"content":"     * Ensures that execute() is not implemented by Task class","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"jingyaaa"},"content":"        throw new UnsupportedOperationException(\"method implemented by child classes\");","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"jingyaaa":62}},{"path":"src/main/java/duke/commands/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jingyaaa"},"content":"package duke.commands.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"jingyaaa"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"jingyaaa"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jingyaaa"},"content":" * Represents a to-do task in the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jingyaaa"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jingyaaa"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jingyaaa"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jingyaaa"},"content":"    public static final String MESSAGE_ADD_TODO_SUCCESS \u003d \"Added todo: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jingyaaa"},"content":"    public ToDo addToDo;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jingyaaa"},"content":"    public ToDo(String taskDescription, String taskStatus) {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"jingyaaa"},"content":"        super(taskDescription, taskStatus);","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"jingyaaa"},"content":"        this.taskChar \u003d \"[T]\";","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"        setFormattedTask();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"jingyaaa"},"content":"     * Sets and updates any changes to the string representing the to-do task when called","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"jingyaaa"},"content":"    public void setFormattedTask() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"jingyaaa"},"content":"        formattedTask \u003d taskChar + status + \" \" + taskDescription;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"jingyaaa"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"jingyaaa"},"content":"     * Adds a to-do task into the task list","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"jingyaaa"},"content":"     * @return CommandResult object containing feedback message","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"jingyaaa"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"jingyaaa"},"content":"    public CommandResult execute() {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jingyaaa"},"content":"        addToDo \u003d this;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"jingyaaa"},"content":"        taskList.addTask(addToDo);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"jingyaaa"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TODO_SUCCESS, formattedTask));","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"jingyaaa"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"jingyaaa"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"jingyaaa"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"jingyaaa":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jingyaaa"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jingyaaa":1,"-":20}}]
