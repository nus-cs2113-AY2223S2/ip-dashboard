[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Good day. YodaBot, I am.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Assistance, you need?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cString\u003e fileList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"                Scanner fileScanner \u003d new Scanner(new File(\"duke.txt\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"                    fileList.add(fileScanner.nextLine());","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"                for (int i \u003d 0; i \u003c fileList.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"                    taskIndex++;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"                    String listedTask \u003d fileList.get(i).substring(3, 6); //listedTask \u003d\u003d [T] or [D] or [E]","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"                    String listDone \u003d fileList.get(i).substring(7, 10); //listDone \u003d\u003d [ ] or [X]","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"                    switch (listedTask) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"                    case \"[T]\":","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription \u003d fileList.get(i).substring(11);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"                        Task listTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"                            listTask \u003d new ToDo(listedDescription, false, \"[T]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"                            listTask \u003d new ToDo(listedDescription, true, \"[T]\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                        taskArray.add(listTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"                    case \"[D]\":","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"                        int index1 \u003d fileList.get(i).indexOf(\"(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription1 \u003d fileList.get(i).substring(11, index1 - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"                        String listedDate \u003d fileList.get(i).substring(index1 + 1, fileList.get(i).length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"                        Task listTask1;","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"                            listTask1 \u003d new Deadline(listedDescription1, false, \"[D]\", listedDate);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"                            listTask1 \u003d new Deadline(listedDescription1, true, \"[D]\", listedDate);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"                        taskArray.add(listTask1);","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                    case \"[E]\":","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"                        int index2 \u003d fileList.get(i).indexOf(\"(\");","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription2 \u003d fileList.get(i).substring(11, index2 - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"                        String listedDate1 \u003d fileList.get(i).substring(index2 + 1, fileList.get(i).length() - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                        Task listTask2;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"                            listTask2 \u003d new Event(listedDescription2, false, \"[E]\", listedDate1);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                            listTask2 \u003d new Event(listedDescription2, true, \"[E]\", listedDate1);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                        taskArray.add(listTask2);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"            String command \u003d scanner.nextLine(); //reads in input","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"            //if command is bye, end program","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"                System.out.println(\"See you soon, I hope. Goodbye.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"            String firstWord;","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"            String remainingWords;","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"            if (command.contains(\" \")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"                int firstSpaceIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"                firstWord \u003d command.substring(0, firstSpaceIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"                remainingWords \u003d command.substring(firstSpaceIndex + 1, command.length());","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"                firstWord \u003d command;","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"                remainingWords \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"            //if command is list, either display empty or display list","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"            case \"List\":","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Empty, list is.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"As shown, list is:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"                    for (int j \u003d 0; j \u003c taskIndex; ++j) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray.get(j) instanceof ToDo) {","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((ToDo) taskArray.get(j)).getToDo() + \" \" + taskArray.get(j).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"                                    + \" \" + taskArray.get(j).getDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray.get(j) instanceof Deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((Deadline) taskArray.get(j)).getDeadline() + \" \" + taskArray.get(j).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"                                    + \" \" + taskArray.get(j).getDescription() + \" (\" + ((Deadline) taskArray.get(j)).getDate() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray.get(j) instanceof Event) {","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((Event) taskArray.get(j)).getEvent() + \" \" + taskArray.get(j).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"khooyourun"},"content":"                                    + \" \" + taskArray.get(j).getDescription() + \" (\" + ((Event) taskArray.get(j)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"khooyourun"},"content":"            //if command is mark, mark the appropriate entry in the list","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"khooyourun"},"content":"            case \"Mark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"khooyourun"},"content":"                int indexToMark \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToMark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"khooyourun"},"content":"                    taskArray.get(indexToMark).isDone \u003d true;","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Marked it, I have:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToMark) instanceof ToDo) {","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((ToDo) taskArray.get(indexToMark)).getToDo() + \" \" + taskArray.get(indexToMark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToMark).getDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToMark) instanceof Deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((Deadline) taskArray.get(indexToMark)).getDeadline() + \" \" + taskArray.get(indexToMark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToMark).getDescription() + \"(\" + ((Deadline) taskArray.get(indexToMark)).getDate() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToMark) instanceof Event) {","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((Event) taskArray.get(indexToMark)).getEvent() + \" \" + taskArray.get(indexToMark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToMark).getDescription() + \" (\" + ((Event) taskArray.get(indexToMark)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"khooyourun"},"content":"            //if command is unmark, unmark the appropriate entry in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"khooyourun"},"content":"            case \"Unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"khooyourun"},"content":"                int indexToUnmark \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToUnmark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"khooyourun"},"content":"                    taskArray.get(indexToUnmark).isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Unmarked it, I have:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToUnmark) instanceof ToDo) {","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((ToDo) taskArray.get(indexToUnmark)).getToDo() + \" \" + taskArray.get(indexToUnmark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToUnmark).getDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToUnmark) instanceof Deadline) {","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((Deadline) taskArray.get(indexToUnmark)).getDeadline() + \" \" + taskArray.get(indexToUnmark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToUnmark).getDescription() + \" (\" + ((Deadline) taskArray.get(indexToUnmark)).getDate() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(indexToUnmark) instanceof Event) {","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((Event) taskArray.get(indexToUnmark)).getEvent() + \" \" + taskArray.get(indexToUnmark).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"khooyourun"},"content":"                                + \" \" + taskArray.get(indexToUnmark).getDescription() + \" (\" + ((Event) taskArray.get(indexToUnmark)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"khooyourun"},"content":"            //if command is todo, prompt for task and add into list","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"khooyourun"},"content":"            case \"Todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"khooyourun"},"content":"                    if (remainingWords \u003d\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"khooyourun"},"content":"                        throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"khooyourun"},"content":"                    Task newTask \u003d new ToDo(remainingWords, false, \"[T]\");","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"khooyourun"},"content":"                    taskArray.add(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(taskIndex + \". \" + ((ToDo) taskArray.get(taskIndex)).getToDo() + \" \" + taskArray.get(taskIndex).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"khooyourun"},"content":"                            + \" \" + taskArray.get(taskIndex).getDescription() + \" - Added, I have\");","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"khooyourun"},"content":"                    ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Error: To do what, I ask?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"khooyourun"},"content":"            //if command is Deadline, prompt for task then deadline and add into list","lastModifiedDate":"2023-02-02"},{"lineNumber":179,"author":{"gitId":"khooyourun"},"content":"            case \"Deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"khooyourun"},"content":"                int demarcator \u003d remainingWords.indexOf(\"/\");","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"khooyourun"},"content":"                String work \u003d remainingWords.substring(0, demarcator - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"khooyourun"},"content":"                String date \u003d remainingWords.substring(demarcator + 1, remainingWords.length());","lastModifiedDate":"2023-02-06"},{"lineNumber":183,"author":{"gitId":"khooyourun"},"content":"                Task newTask \u003d new Deadline(work, false, \"[D]\", date);","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"khooyourun"},"content":"                taskArray.add(newTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"khooyourun"},"content":"                System.out.println(taskIndex + \". \" + ((Deadline) taskArray.get(taskIndex)).getDeadline() + \" \" + taskArray.get(taskIndex).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"khooyourun"},"content":"                        + \" \" + taskArray.get(taskIndex).getDescription() + \" \" + ((Deadline) taskArray.get(taskIndex)).getDate() + \" - Added, I have\");","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"khooyourun"},"content":"            //if command is Event, prompt for event, then prompt for start and end date","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"khooyourun"},"content":"            case \"Event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":191,"author":{"gitId":"khooyourun"},"content":"                demarcator \u003d remainingWords.indexOf(\"/\");","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"khooyourun"},"content":"                work \u003d remainingWords.substring(0, demarcator - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"khooyourun"},"content":"                date \u003d remainingWords.substring(demarcator + 1, remainingWords.length());","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"khooyourun"},"content":"                Task newTask1 \u003d new Event(work, false, \"[E]\", date);","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"khooyourun"},"content":"                taskArray.add(newTask1);","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"khooyourun"},"content":"                System.out.println(taskIndex + \". \" + ((Event) taskArray.get(taskIndex)).getEvent() + \" \" + taskArray.get(taskIndex).getDoneStatus()","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"khooyourun"},"content":"                        + \" \" + taskArray.get(taskIndex).getDescription() + \" \" + ((Event) taskArray.get(taskIndex)).getStartAndEnd() + \" - Added, I have\");","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":200,"author":{"gitId":"khooyourun"},"content":"            case \"Delete\":","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"khooyourun"},"content":"                int indexToDelete \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToDelete \u003e taskIndex) {","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"khooyourun"},"content":"                    taskArray.remove(indexToDelete);","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"khooyourun"},"content":"                    taskIndex -\u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Deleted, I have\");","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"khooyourun"},"content":"            //throws IllegalCommandException if the input is not one of the above cases","lastModifiedDate":"2023-02-09"},{"lineNumber":211,"author":{"gitId":"khooyourun"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":212,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":213,"author":{"gitId":"khooyourun"},"content":"                    throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":214,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":215,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Error: Understand, I do not.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":216,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":217,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"khooyourun"},"content":"            File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":222,"author":{"gitId":"khooyourun"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"khooyourun"},"content":"                file.delete();","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":225,"author":{"gitId":"khooyourun"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"khooyourun"},"content":"            PrintWriter printWriter \u003d new PrintWriter(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"khooyourun"},"content":"            if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"khooyourun"},"content":"                printWriter.println(\"Empty, list is.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":229,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":230,"author":{"gitId":"khooyourun"},"content":"                for (int j \u003d 0; j \u003c taskIndex; ++j) {","lastModifiedDate":"2023-02-16"},{"lineNumber":231,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(j) instanceof ToDo) {","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((ToDo) taskArray.get(j)).getToDo() + \" \" + taskArray.get(j).getDoneStatus() + \" \" + taskArray.get(j).getDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":234,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(j) instanceof Deadline) {","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((Deadline) taskArray.get(j)).getDeadline() + \" \" + taskArray.get(j).getDoneStatus() + \" \" + taskArray.get(j).getDescription() + \" (\" + ((Deadline) taskArray.get(j)).getDate() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":237,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray.get(j) instanceof Event) {","lastModifiedDate":"2023-02-17"},{"lineNumber":238,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((Event) taskArray.get(j)).getEvent() + \" \" + taskArray.get(j).getDoneStatus() + \" \" + taskArray.get(j).getDescription() + \" (\" + ((Event) taskArray.get(j)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-17"},{"lineNumber":239,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":240,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":241,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"khooyourun"},"content":"            printWriter.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"khooyourun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"khooyourun"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-16"},{"lineNumber":245,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":246,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"khooyourun":244,"-":4}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"khooyourun":4}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"    protected String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[X]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        else {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[ ]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        return doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    public void setDoneStatus(String doneStatus) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        this.doneStatus \u003d doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"khooyourun":43}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    protected String date;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public Deadline(String description, boolean isDone, String deadline, String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        return deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        return date;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public void setDate(String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":33}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String event;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    protected String startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public Event(String description, boolean isDone, String event, String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public String getEvent() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        return event;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public void setEvent(String event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public String getStartAndEnd() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        return startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public void setStartAndEnd(String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":32}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    public ToDo(String description, boolean isDone, String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        return toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    public void setToDo(String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":20}}]
