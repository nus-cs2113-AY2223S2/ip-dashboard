[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"### Listing of Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"User is able to add tasks for Duke to keep track of","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"### Editing of Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"User is able to mark Tasks as done/undone, delete and find Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"### List Storage","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"User is able to obtain a text file of the Task list that can be transferred to another device","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"### `Todo` - Adds a Task without a timing associated with it","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"**Input:** `Todo eat dinner`","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"**Output:** `[T] [ ] eat dinner - Added, I have`","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"`[T]` represents the Task as a Todo task","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"### `Deadline` - Adds a Task that has a corresponding deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"**Input:** `Deadline study for test /by monday`","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"**Output:** `[D] [ ] study for test (by monday) - Added, I have`","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"`[D]` represents the Task as a Deadline task","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"### `Event` - Adds a Task that has a start and end time","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"**Input:** `Event wedding /monday 2pm to 6pm`","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"**Output:** `[E] [ ] wedding (monday 2pm to 6pm) - Added, I have`","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"`[E]` represents the Task as a Event task","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"### `List` - Lists out all the Tasks previously added","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"**Input:** `Deadline study for test /by monday`","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"**Input:** `Event wedding /monday 2pm to 6pm`","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"**Input:** `List`","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"**Output:** `As shown, list is:`","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"`1. [D] [ ] study for test (by monday)`","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"`2. [E] [ ] wedding (monday 2pm to 6pm)`","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"### `Mark` `Unmark` - Marks or unmarks Tasks in the list as done","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"**Input:** `Mark 1`","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"**Output:** `[E] [X] wedding (monday 2pm to 6pm) - Marked it, I have`","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"`[X]` indicates that the Task is done","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"`1` is the index of the task to be marked","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"### `Delete` - Delete the Task from the list","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"**Input:** `Delete 1`","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"**Output:** `Deleted, I have`","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"`1` is the index of the task to be deleted","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"---","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"### `Find` - Lists out all Tasks in the list with the keyword","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"**Input:** `Find study`","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"**Output:** `2. [D] [ ] study for test (by monday)`","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"`study` is the keyword","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"khooyourun":86,"-":19}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"1. [T] [X] run","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"2. [E] [X] idek lol (tues to thurs)","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"khooyourun":2}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Command class that executes the command dictated by the user","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"public class Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    protected String command;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    protected String details;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    UI ui \u003d new UI();","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    public Command(String command, String details) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public String getCommand(String command) {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        return command;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public String getDetails(String details) {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        return details;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    public void setDetails(String details) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"     * Changes the status of the Task to [X]","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"     * If Task is not in the taskList, notifies user","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    public void marking(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"            int indexToMark \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"            if (indexToMark \u003e\u003d 0 \u0026\u0026 indexToMark \u003c taskList.getList().size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                taskList.getTask(indexToMark).setStatus(\"[X]\");","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"                ui.printMarked(taskList, indexToMark);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"                ui.printNotInList();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"            ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"     * Changes the status of the Task to [ ]","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"     * If Task is not in the taskList, notifies user","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"    public void unmarking(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"            int indexToUnmark \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"            if (indexToUnmark \u003e\u003d 0 \u0026\u0026 indexToUnmark \u003c taskList.getList().size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                taskList.getTask(indexToUnmark).setStatus(\"[ ]\");","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                ui.printUnmarked(taskList, indexToUnmark);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                ui.printNotInList();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"            ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"     * Deletes the Task based on its index from the list","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"     * If Task is not in the taskList, notifies user","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"    public void deleting(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"            int indexToDelete \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"            if (indexToDelete \u003e\u003d 0 \u0026\u0026 indexToDelete \u003c taskList.getList().size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"                taskList.getList().remove(indexToDelete);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"                ui.printDeleted();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"                ui.printEntireList(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"                ui.printNotInList();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"            ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"     * Iterates through list to find all the Tasks with a word named wordToFind","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"     * If no Tasks contain wordToFind, notifies user","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"    public void finding(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"        String wordToFind \u003d details;","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"        boolean inList \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"            if (taskList.getTask(i).getDescription().contains(wordToFind)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                ui.printTaskWithIndex(taskList, i);","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"                inList \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"        if (!inList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"            ui.printNotInList();","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"khooyourun"},"content":"     * Executes code based on what the command is for the desired output","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"khooyourun"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"khooyourun"},"content":"        switch (command) {","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"khooyourun"},"content":"        case \"Todo\":","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"khooyourun"},"content":"            ToDo toDo \u003d new ToDo(\"[T]\", \"[ ]\", details);","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"khooyourun"},"content":"            taskList.adder(toDo);","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"khooyourun"},"content":"            ui.printAdded(taskList, taskList.getIndex(toDo));","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"khooyourun"},"content":"        case \"Deadline\":","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"khooyourun"},"content":"            try {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"khooyourun"},"content":"                Deadline deadline \u003d new Deadline(\"[D]\", \"[ ]\", details);","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"khooyourun"},"content":"                taskList.adder(deadline);","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"khooyourun"},"content":"                ui.printAdded(taskList, taskList.getIndex(deadline));","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"khooyourun"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"khooyourun"},"content":"                ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"khooyourun"},"content":"        case \"Event\":","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"khooyourun"},"content":"            try {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"khooyourun"},"content":"                Event event \u003d new Event(\"[E]\", \"[ ]\", details);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"khooyourun"},"content":"                taskList.adder(event);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"khooyourun"},"content":"                ui.printAdded(taskList, taskList.getIndex(event));","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"khooyourun"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"khooyourun"},"content":"                ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"khooyourun"},"content":"        case \"List\":","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"khooyourun"},"content":"            if (taskList.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"khooyourun"},"content":"                ui.printNoList();","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"khooyourun"},"content":"                ui.printEntireList(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"khooyourun"},"content":"        case \"Mark\":","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"khooyourun"},"content":"            marking(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"khooyourun"},"content":"        case \"Unmark\":","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"khooyourun"},"content":"            unmarking(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"khooyourun"},"content":"        case \"Delete\":","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"khooyourun"},"content":"            deleting(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"khooyourun"},"content":"        case \"Find\":","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"khooyourun"},"content":"            finding(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"khooyourun"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"khooyourun":161}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"public class Duke {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"     * Checks if the first word of the user input is in the correct format","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"     * Throws exception if not","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"     * @param firstWord the first word in the user input","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public static void inputChecker(String firstWord) {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        if (!(firstWord.equals(\"Todo\") || firstWord.equals(\"Deadline\") || firstWord.equals(\"Event\")","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"                || firstWord.equals(\"Bye\") || firstWord.equals(\"Mark\")","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"                || firstWord.equals(\"Unmark\") || firstWord.equals(\"Find\") || firstWord.equals(\"Delete\")","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"                || firstWord.equals(\"List\"))) {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"     * Main contains a While loop that keeps taking in user input and executes code accordingly","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"     * Will only exit when the user inputs \"Bye\"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        Storage.fillTaskList(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"            Parser parser \u003d new Parser(userInput);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"            String firstWord \u003d parser.getFirstWord(userInput);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"            String remainingWords \u003d parser.getRemainingWords(userInput);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                inputChecker(firstWord);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"            } catch (IllegalArgumentException e){","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"                ui.printInputError();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"                command \u003d new Command(firstWord, remainingWords);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"                command.setCommand(firstWord);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"                command.setDetails(remainingWords);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"            command.executeCommand(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"            if (userInput.equals(\"Bye\")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                ui.printBye();","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"        Storage.writeToFile(taskList);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"khooyourun":62,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * Takes in userInput and breaks it down","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * Splits it into two parts, firstWord and remainingWord","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    protected String userInput;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    protected String firstWord;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    protected String remainingWords;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"     * This method is used to call the first word from the input","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"     * @param  userInput String obtained from user","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"     * @return firstWord","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public String getFirstWord(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        if (userInput.contains(\" \")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            return userInput.substring(0,userInput.indexOf(\" \"));","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            return userInput;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"     * This method is used to call all the words after the first from input","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"     * @param userInput String obtained from user","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"     * @return remainingWords","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    public String getRemainingWords(String userInput) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"        if (userInput.contains(\" \")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"            return userInput.substring(userInput.indexOf(\" \") + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"            return null;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Class that handles the reading and writing of duke.txt file","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * The file contains the TaskList","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"import java.io.*;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"     * Creates duke.txt file if it does not exist","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"     * Reads from duke.txt and stores its lines in a ArrayList","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"     * @return lines which is the ArrayList","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    protected static ArrayList\u003cString\u003e readFile() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"                file.createNewFile();","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            String line;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"                lines.add(line);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            reader.close();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Error reading file\");","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        return lines;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"     * Change the String description into the same format that is expected of user input","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"     * @param description with file read formatting","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"     * @return description with user input formatting","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"    protected static String formatFileRead(String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"        String toDoDeadline \u003d description.substring(0, description.indexOf(\"(\") - 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        String dueDate \u003d description.substring(description.indexOf(\"(\") + 1, description.indexOf(\")\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"        description \u003d toDoDeadline + \" /\" + dueDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        return description;","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"    public static void fillTaskList(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cString\u003e linesToStore \u003d readFile();","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        int numberOfLines \u003d linesToStore.size();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"        for (String currentLine : linesToStore) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            String typeOfTask \u003d currentLine.substring(3, 6);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"            String statusOfTask \u003d currentLine.substring(7, 10);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"            String description \u003d currentLine.substring(11);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"            switch (typeOfTask) {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"            case \"[T]\":","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"                ToDo todo \u003d new ToDo(typeOfTask, statusOfTask, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"                taskList.adder(todo);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            case \"[D]\":","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                description \u003d formatFileRead(description);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"                Deadline deadline \u003d new Deadline(typeOfTask, statusOfTask, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                taskList.adder(deadline);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"            case \"[E]\":","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                description \u003d formatFileRead(description);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                Event event \u003d new Event(typeOfTask, statusOfTask, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"                taskList.adder(event);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"            default:","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"     * Writes the TaskList to the text file","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"     * @param taskList which contains ArrayList of Task","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"    public static void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"        File fileToDelete \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"        fileToDelete.delete();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"        File fileToCreate \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"            FileWriter writer \u003d new FileWriter(fileToCreate);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"            for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"                writer.write((i + 1) + \". \" + taskList.getTask(i).getPrintFormat() + \"\\n\");","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"            writer.close();","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":94}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * UI class that handles output. Prints out text based on method called.","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.*;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"public class UI {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Good day, Duke I am. Asistance, you need?\");","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    public void printBye() {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"See you soon, I hope.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    public void printInputError() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Input format is wrong, I say.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public void printAdded(TaskList taskList, int index) {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        System.out.println(taskList.getTask(index).getPrintFormat() + \" - Added I have.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public void printTaskWithIndex(TaskList taskList, int index) {","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        System.out.println((index + 1) + \". \" + taskList.getTask(index).getPrintFormat());","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    public void printNotInList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"It is not in list.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    public void printNoList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"List is empty, I say.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"     * prints all the Tasks in the List according to index.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"     * @param taskList that contains the ArrayList\u003cTask\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    public void printEntireList(TaskList taskList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"As shown, list is:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"        for (int i \u003d 0; i \u003c taskList.getList().size(); i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"            System.out.println((i + 1) + \". \" + taskList.getTask(i).getPrintFormat());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"    public void printMarked(TaskList taskList, int index) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"        System.out.println(taskList.getTask(index).getPrintFormat() + \" - Marked it, I have.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"    public void printUnmarked(TaskList taskList, int index) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"        System.out.println(taskList.getTask(index).getPrintFormat() + \" - Unmarked it, I have.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"    public void printDeleted() {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Deleted, I have.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":54}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Deadline class that contains type, status, dueDate, and thingToDo that describe the task","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"package duke.Tasks;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    protected String dueDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    protected String thingToDo;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public Deadline(String type, String status, String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        super(type, status, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        dueDate \u003d description.substring(index + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        thingToDo \u003d description.substring(0, index - 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    public String getDueDate() {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        return dueDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"     * Returns a string displaying the Deadline task details","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"     * @return printFormat in the form of [D] [ ] task (by dueDate)","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    public String getPrintFormat() {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        return type + \" \" + status + \" \" + thingToDo + \" (\" + dueDate + \")\";","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":36}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Event class that contains type, status, timeFrame and thingToDo that describe the task","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"package duke.Tasks;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    protected String timeFrame;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    protected String thingToDo;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    public Event(String type, String status, String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        super(type, status, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        int index \u003d description.indexOf(\"/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        timeFrame \u003d description.substring(index + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        thingToDo \u003d description.substring(0, index - 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    public String getTimeFrame() {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        return timeFrame;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"     * Returns a string displaying the Event task details","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"     * @return printFormat in the form of [E] [ ] task (time frame)","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public String getPrintFormat() {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        return type + \" \" + status + \" \" + thingToDo + \" (\" + timeFrame + \")\";","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":31}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.Tasks;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class Task {","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"    protected String status;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    protected String type;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    protected String description;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    public Task (String type, String status, String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"     * Returns a string displaying the Task details","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"     * @return printFormat eg: [T] [ ] toDo","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public String getPrintFormat() {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        return type + \" \" + status + \" \" + description;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        return status;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    public String getType() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        return type;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    public void setType(String type) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        return description;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"khooyourun":45}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * TaskList class that contains an ArrayList of Task objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"package duke.Tasks;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"public class TaskList {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        return list;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    public void setList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        return list.get(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    public int getIndex (Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        return list.indexOf(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public void adder(Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        list.add(task);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"khooyourun":30}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.Tasks;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    public ToDo (String type, String status, String description) {","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"        super(type, status, description);","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":9}}]
