[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"### Listing of Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"User is able to add tasks for Duke to keep track of","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"### Editing of Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"User is able to mark Tasks as done/undone, delete and find Tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"### List Storage","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"User is able to obtain a text file of the Task list that can be transferred to another device","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"### `Todo` - Adds a Task without a timing associated with it","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"`input: Todo eat dinner`","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"`output: [T] [ ] eat dinner - Added, I have`","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"`[T]` represents the Task as a Todo task","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"### `Deadline` - Adds a Task that has a corresponding deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"`input: Deadline study for test /by monday`","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"`output: [D] [ ] study for test (by monday) - Added, I have`","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"`[D]` represents the Task as a Deadline task","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"### `Event` - Adds a Task that has a start and end time","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"`input: Event wedding /monday 2pm to 6pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"`output: [E] [ ] wedding (monday 2pm to 6pm) - Added, I have`","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"`[E]` represents the Task as a Event task","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"### `List` - Lists out all the Tasks previously added","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"`input: Deadline study for test /by monday`","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"`input: Event wedding /monday 2pm to 6pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"`input: List`","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"`output: As shown, list is:`","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"`0. [D] [ ] study for test (by monday)`","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"`1. [E] [ ] wedding (monday 2pm to 6pm)`","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"### `Mark` `Unmark` - Marks or unmarks Tasks in the list as done","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"`input: Mark 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"`output: [E] [X] wedding (monday 2pm to 6pm) - Marked it, I have`","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"`[X]` indicates that the Task is done","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"`1` is the index of the task to be marked","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"### `Delete` - Delete the Task from the list","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"`input Delete 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"`output: Deleted, I have`","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"`1` is the index of the task to be deleted","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"### `find` - Lists out all Tasks in the list with the keyword","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"`input: find study`","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"`output: [D] [ ] study for test (by monday)`","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"`study` is the keyword","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"khooyourun":80,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"import static duke.Storage.fileWrite;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"public class Duke {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        String[] wordList;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        ArrayList\u003cString\u003e fileList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        int Index \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        Storage.store(fileList, taskList, Index);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        int taskIndex \u003d taskList.getIndex();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        UI.printer(\"welcome\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            String command \u003d scanner.nextLine(); //reads in input","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            wordList \u003d Parser.parser(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            if (wordList[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"                UI.printer(\"bye\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"            switch (wordList[0]) {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            case \"List\":","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"empty\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"list\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"            case \"Mark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"                int indexToMark \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToMark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"notInList\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"                    taskList.getTaskArray().get(indexToMark).isDone \u003d true;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                    UI.taskPrinter(taskList.getTaskArray(), indexToMark);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"            case \"Unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"                int indexToUnmark \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToUnmark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"                    taskList.getTaskArray().get(indexToUnmark).isDone \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"                    UI.taskPrinter(taskList.getTaskArray(), indexToUnmark);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"            case \"Todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"                    if (wordList[1] \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                        throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                    Task newTask \u003d new ToDo(wordList[1], false, \"[T]\");","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                    taskList.getTaskArray().add(newTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"addTask\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                    ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"wrongTodo\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"            case \"Deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"                int demarcator \u003d wordList[1].indexOf(\"/\");","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"                String work \u003d wordList[1].substring(0, demarcator - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"                String date \u003d wordList[1].substring(demarcator + 1, wordList[1].length());","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"                Task newTask \u003d new Deadline(work, false, \"[D]\", date);","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"                taskList.getTaskArray().add(newTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"                UI.printer(\"addTask\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"            case \"Event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"                demarcator \u003d wordList[1].indexOf(\"/\");","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"                work \u003d wordList[1].substring(0, demarcator - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"                date \u003d wordList[1].substring(demarcator + 1, wordList[1].length());","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"                Task newTask1 \u003d new Event(work, false, \"[E]\", date);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"                taskList.getTaskArray().add(newTask1);","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"                UI.printer(\"addTask\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"            case \"Delete\":","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"                int indexToDelete \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToDelete \u003e taskIndex) {","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"notInList\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"                    taskList.getTaskArray().remove(indexToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"                    taskIndex -\u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"delete\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"            case \"find\":","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                String keyWord \u003d wordList[1];","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"                int checker \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"                for(int i \u003d 0; i \u003c taskIndex; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"                    String description \u003d taskList.getTaskArray().get(i).getDescription();","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"                    if (description.contains(keyWord)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"                        UI.taskPrinter(taskList.getTaskArray(), i);","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"                        checker++;","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"khooyourun"},"content":"                if (checker \u003d\u003d 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"notInList\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"khooyourun"},"content":"            //throws IllegalCommandException if the input is not one of the above cases","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"khooyourun"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"khooyourun"},"content":"                    throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"khooyourun"},"content":"                    UI.printer(\"generalError\", taskList.getTaskArray(), taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"khooyourun"},"content":"        fileWrite(taskList, taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"khooyourun":122,"-":2}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"khooyourun":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Splits user input into two parts, firstWord and remainingWord","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * Returns String array wordList that contains the two parts","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param command A string input from the user","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    public String command;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public Parser(String command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public static String[] parser(String command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        String firstWord;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        String remainingWords;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        String[] wordList \u003d new String[2];","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        if (command.contains(\" \")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"            int firstSpaceIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            firstWord \u003d command.substring(0, firstSpaceIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            remainingWords \u003d command.substring(firstSpaceIndex + 1, command.length());","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            wordList[0] \u003d firstWord;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"            wordList[1] \u003d remainingWords;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"            firstWord \u003d command;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"            wordList[0] \u003d firstWord;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        return wordList;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":35}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Reads and writes list of Tasks to and from a text file called Duke.","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * If Duke text file does not exist, storageList remains an empty ArrayList","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param fileList an ArrayList used to store lines of strings read from Duke","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param storageList an ArrayList that is filled up with Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"import java.io.File;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    public static void store(ArrayList\u003cString\u003e fileList, TaskList storageList, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"                Scanner fileScanner \u003d new Scanner(new File(\"duke.txt\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"                while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"                    fileList.add(fileScanner.nextLine());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"                for (int i \u003d 0; i \u003c fileList.size(); i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"                    taskIndex++;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"                    String listedTask \u003d fileList.get(i).substring(3, 6); //listedTask \u003d\u003d [T] or [D] or [E]","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"                    String listDone \u003d fileList.get(i).substring(7, 10); //listDone \u003d\u003d [ ] or [X]","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"                    switch (listedTask) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"                    case \"[T]\":","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription \u003d fileList.get(i).substring(11);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"                        Task listTask;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"                            listTask \u003d new ToDo(listedDescription, false, \"[T]\");","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"                            listTask \u003d new ToDo(listedDescription, true, \"[T]\");","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                        storageList.addTask(listTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"                    case \"[D]\":","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"                        int index1 \u003d fileList.get(i).indexOf(\"(\");","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription1 \u003d fileList.get(i).substring(11, index1 - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"                        String listedDate \u003d fileList.get(i).substring(index1 + 1, fileList.get(i).length() - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"                        Task listTask1;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"                            listTask1 \u003d new Deadline(listedDescription1, false, \"[D]\", listedDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"                            listTask1 \u003d new Deadline(listedDescription1, true, \"[D]\", listedDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"                        storageList.addTask(listTask1);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                    case \"[E]\":","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"                        int index2 \u003d fileList.get(i).indexOf(\"(\");","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                        String listedDescription2 \u003d fileList.get(i).substring(11, index2 - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"                        String listedDate1 \u003d fileList.get(i).substring(index2 + 1, fileList.get(i).length() - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                        Task listTask2;","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                        if (listDone.equals(\"[ ]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"                            listTask2 \u003d new Event(listedDescription2, false, \"[E]\", listedDate1);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                            listTask2 \u003d new Event(listedDescription2, true, \"[E]\", listedDate1);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                        storageList.addTask(listTask2);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"                        break;","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"        } catch (","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"                IOException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"    public static void fileWrite (TaskList taskList, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"            File file \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"                file.delete();","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"            file.createNewFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"            PrintWriter printWriter \u003d new PrintWriter(file);","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"            if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"                printWriter.println(\"Empty, list is.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"                for (int j \u003d 0; j \u003c taskIndex; ++j) {","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"                    if (taskList.getTaskArray().get(j) instanceof ToDo) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((ToDo) taskList.getTaskArray().get(j)).getToDo() + \" \" + taskList.getTaskArray().get(j).getDoneStatus() + \" \" + taskList.getTaskArray().get(j).getDescription());","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"                    if (taskList.getTaskArray().get(j) instanceof Deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((Deadline) taskList.getTaskArray().get(j)).getDeadline() + \" \" + taskList.getTaskArray().get(j).getDoneStatus() + \" \" + taskList.getTaskArray().get(j).getDescription() + \" (\" + ((Deadline) taskList.getTaskArray().get(j)).getDate() + \")\");","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"                    if (taskList.getTaskArray().get(j) instanceof Event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"                        printWriter.println(j + \". \" + ((Event) taskList.getTaskArray().get(j)).getEvent() + \" \" + taskList.getTaskArray().get(j).getDoneStatus() + \" \" + taskList.getTaskArray().get(j).getDescription() + \" (\" + ((Event) taskList.getTaskArray().get(j)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"            printWriter.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":108}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"    protected String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[X]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        else {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[ ]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        return doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    public void setDoneStatus(String doneStatus) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        this.doneStatus \u003d doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"khooyourun":43}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Contains a TaskList that is an ArrayList of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" * addTask adds a task to TaskList","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * getTaskArray returns entire TaskList","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * getIndex returns the size of TaskList","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param taskArray An ArrayList that contains Tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    private ArrayList\u003cTask\u003e taskArray;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        taskArray.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public ArrayList\u003cTask\u003e getTaskArray() {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        return taskArray;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    public int getIndex() {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"        return taskArray.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":35}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"public class UI {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    protected String ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    public UI(String ui) {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public static void taskPrinter(ArrayList\u003cTask\u003e taskArray, int index) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        if (taskArray.get(index) instanceof ToDo) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"            System.out.println(index + \". \" + ((ToDo) taskArray.get(index)).getToDo() + \" \" + taskArray.get(index).getDoneStatus()","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"                    + \" \" + taskArray.get(index).getDescription());","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        if (taskArray.get(index) instanceof Deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"            System.out.println(index + \". \" + ((Deadline) taskArray.get(index)).getDeadline() + \" \" + taskArray.get(index).getDoneStatus()","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"                    + \" \" + taskArray.get(index).getDescription() + \" (\" + ((Deadline) taskArray.get(index)).getDate() + \")\");","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        if (taskArray.get(index) instanceof Event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            System.out.println(index + \". \" + ((Event) taskArray.get(index)).getEvent() + \" \" + taskArray.get(index).getDoneStatus()","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"                    + \" \" + taskArray.get(index).getDescription() + \" (\" + ((Event) taskArray.get(index)).getStartAndEnd() + \")\");","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    public static void listPrinter(ArrayList\u003cTask\u003e taskArray, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        for (int j \u003d 0; j \u003c taskIndex; ++j) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"            taskPrinter(taskArray, j);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"    public static void printer(String ui, ArrayList\u003cTask\u003e taskArray, int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        switch (ui) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"        case \"welcome\":","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Good day. YodaBot, I am.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Assistance, you need?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"        case \"bye\":","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"See you soon, I hope. Goodbye.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"        case \"empty\":","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Empty, list is.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"        case \"list\":","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"As shown, list is:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"            listPrinter(taskArray, taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"        case \"marked\":","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Marked it, I have:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"            taskPrinter(taskArray, taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"        case \"unmarked\":","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Unmarked it, I have:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"            taskPrinter(taskArray, taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"        case \"notInList\":","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"        case \"addTask\":","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Added, I have:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"            taskPrinter(taskArray, taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"        case \"delete\":","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Deleted, I have\");","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"        case \"wrongTodo\":","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Error: To do what, I ask?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"        case \"generalError\":","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"            System.out.println(\"Understand, I do not.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"        default:","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"khooyourun":81}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Contains methods to build up a complete Task","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * @param description A string that details the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param isDone boolean variable that identifies whether the task is completed","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param deadline A string that identifies the Task as a Deadline task","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param date A string that represents the deadline date","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    protected String date;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    public Deadline(String description, boolean isDone, String deadline, String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        return deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        return date;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"    public void setDate(String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":42}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Contains methods to build up a complete Task","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * @param description A string that details the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param isDone boolean variable that identifies whether the task is completed","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param event A string that identifies the Task as an event task","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" * @param startAndEnd A string that represents the duration of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    protected String event;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    protected String startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    public Event(String description, boolean isDone, String event, String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    public String getEvent() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        return event;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"    public void setEvent(String event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"    public String getStartAndEnd() {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"        return startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"    public void setStartAndEnd(String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":41}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":" * Contains methods to build up a complete Task","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":" * @param description A string that details the description of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":" * @param isDone boolean variable that identifies whether the task is completed","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":" * @param toDo A string that identifies the Task as a Todo task","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public ToDo(String description, boolean isDone, String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"        return toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"    public void setToDo(String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":28}}]
