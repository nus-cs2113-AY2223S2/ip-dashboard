[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Good day. YodaBot, I am.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        System.out.println(\"Assistance, you need?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"        Task[] taskArray \u003d new Task[100];","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        while (true) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"            String command \u003d scanner.nextLine(); //reads in input","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"            //if command is bye, end program","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"                System.out.println(\"See you soon, I hope. Goodbye.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"            String firstWord;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"            String remainingWords;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"            if (command.contains(\" \")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"                int firstSpaceIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"                firstWord \u003d command.substring(0, firstSpaceIndex);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"                remainingWords \u003d command.substring(firstSpaceIndex + 1, command.length());","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"                firstWord \u003d command;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"                remainingWords \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"            //if command is list, either display empty or display list","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"            case \"List\":","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Empty, list is.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"As shown, list is:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"                    for (int j \u003d 0; j \u003c taskIndex; ++j) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray[j] instanceof ToDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((ToDo) taskArray[j]).getToDo() + \" \" + taskArray[j].getDoneStatus() + \" \" + taskArray[j].getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray[j] instanceof Deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((Deadline) taskArray[j]).getDeadline() + \" \" + taskArray[j].getDoneStatus() + \" \" + taskArray[j].getDescription() + \" (\" + ((Deadline) taskArray[j]).getDate() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"khooyourun"},"content":"                        if (taskArray[j] instanceof Event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"khooyourun"},"content":"                            System.out.println(j + \". \" + ((Event) taskArray[j]).getEvent() + \" \" + taskArray[j].getDoneStatus() + \" \" + taskArray[j].getDescription() + \" (\" + ((Event) taskArray[j]).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"khooyourun"},"content":"                        }","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"khooyourun"},"content":"            //if command is mark, mark the appropriate entry in the list","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"khooyourun"},"content":"            case \"Mark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"khooyourun"},"content":"                int indexToMark \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToMark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"khooyourun"},"content":"                    taskArray[indexToMark].isDone \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Marked it, I have:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToMark] instanceof ToDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((ToDo) taskArray[indexToMark]).getToDo() + \" \" + taskArray[indexToMark].getDoneStatus() + \" \" + taskArray[indexToMark].getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToMark] instanceof Deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((Deadline) taskArray[indexToMark]).getDeadline() + \" \" + taskArray[indexToMark].getDoneStatus() + \" \" + taskArray[indexToMark].getDescription() + \"(\" + ((Deadline) taskArray[indexToMark]).getDate() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToMark] instanceof Event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToMark + \". \" + ((Event) taskArray[indexToMark]).getEvent() + \" \" + taskArray[indexToMark].getDoneStatus() + \" \" + taskArray[indexToMark].getDescription() + \" (\" + ((Event) taskArray[indexToMark]).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"khooyourun"},"content":"            //if command is unmark, unmark the appropriate entry in the list","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"khooyourun"},"content":"            case \"Unmark\":","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"khooyourun"},"content":"                int indexToUnmark \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"khooyourun"},"content":"                if (taskIndex \u003d\u003d 0 || indexToUnmark \u003e taskIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"In list, it is not.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"khooyourun"},"content":"                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"khooyourun"},"content":"                    taskArray[indexToUnmark].isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Unmarked it, I have:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToUnmark] instanceof ToDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((ToDo) taskArray[indexToUnmark]).getToDo() + \" \" + taskArray[indexToUnmark].getDoneStatus() + \" \" + taskArray[indexToUnmark].getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToUnmark] instanceof Deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((Deadline) taskArray[indexToUnmark]).getDeadline() + \" \" + taskArray[indexToUnmark].getDoneStatus() + \" \" + taskArray[indexToUnmark].getDescription() + \" (\" + ((Deadline) taskArray[indexToUnmark]).getDate() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"khooyourun"},"content":"                    if (taskArray[indexToUnmark] instanceof Event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"khooyourun"},"content":"                        System.out.println(indexToUnmark + \". \" + ((Event) taskArray[indexToUnmark]).getEvent() + \" \" + taskArray[indexToUnmark].getDoneStatus() + \" \" + taskArray[indexToUnmark].getDescription() + \" (\" + ((Event) taskArray[indexToUnmark]).getStartAndEnd() + \")\");","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"khooyourun"},"content":"            //if command is todo, prompt for task and add into list","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"khooyourun"},"content":"            case \"Todo\":","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"khooyourun"},"content":"                    if (remainingWords \u003d\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"khooyourun"},"content":"                        throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"khooyourun"},"content":"                    }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"khooyourun"},"content":"                    taskArray[taskIndex] \u003d new ToDo(remainingWords, false, \"[T]\");","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(taskIndex + \". \" + ((ToDo) taskArray[taskIndex]).getToDo() + \" \" + taskArray[taskIndex].getDoneStatus() + \" \" + taskArray[taskIndex].getDescription() + \" - Added, I have\");","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"khooyourun"},"content":"                    ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Error: To do what, I ask?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"khooyourun"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"khooyourun"},"content":"            //if command is Deadline, prompt for task then deadline and add into list","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"khooyourun"},"content":"            case \"Deadline\":","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"khooyourun"},"content":"                int demarcator \u003d remainingWords.indexOf(\"/\");","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"khooyourun"},"content":"                String work \u003d remainingWords.substring(0, demarcator - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"khooyourun"},"content":"                String date \u003d remainingWords.substring(demarcator + 1, remainingWords.length());","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"khooyourun"},"content":"                taskArray[taskIndex] \u003d new Deadline(work, false, \"[D]\", date);","lastModifiedDate":"2023-02-06"},{"lineNumber":114,"author":{"gitId":"khooyourun"},"content":"                System.out.println(taskIndex + \". \" + ((Deadline) taskArray[taskIndex]).getDeadline() + \" \" + taskArray[taskIndex].getDoneStatus() + \" \" + taskArray[taskIndex].getDescription() + \" \" + ((Deadline) taskArray[taskIndex]).getDate() + \" - Added, I have\");","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"khooyourun"},"content":"            //if command is Event, prompt for event, then prompt for start and end date","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"khooyourun"},"content":"            case \"Event\":","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"khooyourun"},"content":"                demarcator \u003d remainingWords.indexOf(\"/\");","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"khooyourun"},"content":"                work \u003d remainingWords.substring(0, demarcator - 1);","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"khooyourun"},"content":"                date \u003d remainingWords.substring(demarcator + 1, remainingWords.length());","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"khooyourun"},"content":"                taskArray[taskIndex] \u003d new Event(work, false, \"[E]\", date);","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"khooyourun"},"content":"                System.out.println(taskIndex + \". \" + ((Event) taskArray[taskIndex]).getEvent() + \" \" + taskArray[taskIndex].getDoneStatus() + \" \" + taskArray[taskIndex].getDescription() + \" \" + ((Event) taskArray[taskIndex]).getStartAndEnd() + \" - Added, I have\");","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"khooyourun"},"content":"                ++taskIndex;","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"khooyourun"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"khooyourun"},"content":"            //throws IllegalCommandException if the input is not one of the above cases","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"khooyourun"},"content":"            default:","lastModifiedDate":"2023-02-09"},{"lineNumber":128,"author":{"gitId":"khooyourun"},"content":"                try {","lastModifiedDate":"2023-02-09"},{"lineNumber":129,"author":{"gitId":"khooyourun"},"content":"                    throw new IllegalCommandException();","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"khooyourun"},"content":"                } catch (IllegalCommandException e1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":131,"author":{"gitId":"khooyourun"},"content":"                    System.out.println(\"Error: Understand, I do not.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":132,"author":{"gitId":"khooyourun"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"khooyourun"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"khooyourun":132,"-":4}},{"path":"src/main/java/duke/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"khooyourun":4}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"    protected String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"        return description;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"        return isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    public String getDoneStatus() {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[X]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"        else {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"            doneStatus \u003d \"[ ]\";","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"        return doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"khooyourun"},"content":"    public void setDoneStatus(String doneStatus) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"khooyourun"},"content":"        this.doneStatus \u003d doneStatus;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"khooyourun"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"khooyourun"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"khooyourun":43}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"    protected String date;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public Deadline(String description, boolean isDone, String deadline, String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        return deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public String getDate() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        return date;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public void setDate(String date) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":33}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"    protected String event;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    protected String startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"    public Event(String description, boolean isDone, String event, String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"    public String getEvent() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"        return event;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"    public void setEvent(String event) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"khooyourun"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"khooyourun"},"content":"    public String getStartAndEnd() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"khooyourun"},"content":"        return startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"khooyourun"},"content":"    public void setStartAndEnd(String startAndEnd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"khooyourun"},"content":"        this.startAndEnd \u003d startAndEnd;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":32}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khooyourun"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"khooyourun"},"content":"import duke.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"khooyourun"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"khooyourun"},"content":"    protected String toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"khooyourun"},"content":"    public ToDo(String description, boolean isDone, String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"khooyourun"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"khooyourun"},"content":"    public String getToDo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"khooyourun"},"content":"        return toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"khooyourun"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"khooyourun"},"content":"    public void setToDo(String toDo) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"khooyourun"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"khooyourun"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"khooyourun"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"khooyourun":20}}]
