[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"# \u003cspan style\u003d\"color:DarkMagenta\"\u003eUser Guide\u003c/span\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"██████╗░██╗░░░██╗██╗░░██╗███████╗","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"██╔══██╗██║░░░██║██║░██╔╝██╔════╝","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"██║░░██║██║░░░██║█████═╝░█████╗░░","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"██║░░██║██║░░░██║██╔═██╗░██╔══╝░░","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"██████╔╝╚██████╔╝██║░╚██╗███████╗","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"Duke is a Command Line Interface (CLI) based application for keeping track of your tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"___","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"\u003c!-- Table of Contents --\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"## \u003cspan style\u003d\"color:DarkMagenta\"\u003eTable of Contents\u003c/span\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"    + [Adding a Task](#adding-a-task)","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        1. [Todo: `todo`](#1-todo-todo)","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"        2. [Event: `event`](#2-event-event)","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        3. [Deadline: `deadline`](#3-deadline-deadline)","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    + [List all tasks: `list`](#list-all-tasks-list)","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    + [Mark a task: `mark`](#mark-a-task-mark)","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    + [Unmark a task: `unmark`](#unmark-a-task-unmark)","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"    + [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    + [Find a task: `find`](#find-a-task-find)","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"    + [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"    + [Saving the data](#saving-the-data)","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"    + [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"___","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"\u003c!-- Quick Start guide --\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"## \u003cspan style\u003d\"color:DarkMagenta\"\u003eQuick Start\u003c/span\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"2. Download the latest `duke.jar` from here.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar duke.jar command to run the application.","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"    \u003cbr/\u003eSome example commands you can try:","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"    - `list`: Lists all tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"    - `todo read book`: Adds a Todo task named `read book` to the Task List.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"    - `delete 1`: Deletes the 1st task in the current list.","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"    - `bye`: Exits the app.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"6. Refer to the [Features](#features) below for details of each command","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"___","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"\u003c!-- Feature List --\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"## \u003cspan style\u003d\"color:DarkMagenta\"\u003eFeatures\u003c/span\u003e ","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"### Adding a Task:","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"_3 types of tasks suppoted - Todo, Event and Deadline:_","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"### 1. Todo: `todo`","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"Adds a todo task to the task list.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"- `TASK_NAME` accepts a String of multiple words","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"- `TASK_NAME` is compulsory","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"```js","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"todo complete CS2113 ip level","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"todo read","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"### 2. Event: `event`","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"Adds an event task to the task list.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"Format: `event TASK_NAME /by BY_DATE`","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"- `TASK_NAME` accepts a String of multiple words and is **compulsory**.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"- `/by` is **compulsory**.","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"- `BY_DATE` accepts a string in the format of YYYY-MM-DD HHmm.","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"    - `YYYY` represents the year (eg. `2023`)","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"    - `MM` represents the month (eg. `04` for April)","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"    - `DD` represents the day (eg. `08`)","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"    - `HHmm` represents the time in 24-hour format (eg. `0530` or `1830`)","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"- `BY_DATE` **must** be entered in the correct format.","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"```js","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"deadline CS2113 homework /by 2023-06-26 2359","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"deadline apply BTO /by 2025-08-01 1200","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"### 3. Deadline: `deadline`","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"Adds a deadline task to the task list. \u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"Format: `deadline TASK_NAME /from FROM_DATE /to TO_DATE`","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"- `TASK_NAME` accepts a String of multiple words and is **compulsory**.","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"- `FROM_DATE` and `TO_DATE` accepts a string in the format of YYYY-MM-DD HHmm.","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"    - `YYYY` represents the year (eg. `2023`)","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"    - `MM` represents the month (eg. `04` for April)","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"    - `DD` represents the day (eg. `08`)","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"    - `HHmm` represents the time in 24-hour format (eg. `0530` or `1830`)","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"- `FROM_DATE` and `TO_DATE` **must** be entered in the correct format.","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"```js","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"event NUS open day /from 2023-07-01 1000 /to 2023-07-01 1600","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"event valorant comp /from 2025-04-01 0800 /to 2025-04-10 1600","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"### List all tasks: `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"Shows a list of all tasks in the task list.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"Format: `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"### Mark a task: `mark`","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"Marks a specific task as done.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"- `TASK_NUMBER` accepts positive integer from 1 to N (the number of tasks in the list)","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"- The task number refers to the index number shown in the displayed `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bentohset"},"content":"- `list` followed by `mark 1` marks the 1st task in the list as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bentohset"},"content":"### Unmark a task: `unmark`","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bentohset"},"content":"Unmarks a specific task as not done.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"bentohset"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bentohset"},"content":"- `TASK_NUMBER` accepts positive integer from 1 to N (the number of tasks in the list)","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bentohset"},"content":"- The task number refers to the index number shown in the displayed `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bentohset"},"content":"- `list` followed by `mark 3` unmarks the 3rd task in the list as undone.","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"bentohset"},"content":"### Delete a task: `delete`","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"bentohset"},"content":"Deletes a specific task in the task list.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"bentohset"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"bentohset"},"content":"- `TASK_NUMBER` accepts positive integer from 1 to N (the number of tasks in the list)","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bentohset"},"content":"- The task number refers to the index number shown in the displayed `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"bentohset"},"content":"- `list` followed by `delete 2` deletes the 2nd task in the list","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"bentohset"},"content":"### Find a task: `find`","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"bentohset"},"content":"Searches the task list for all tasks containing the entered keyword.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"bentohset"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"bentohset"},"content":"- `KEYWORD` accepts a snlge `String` or multiple `Strings`","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bentohset"},"content":"- `KEYWORD` is not case-sensitive","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bentohset"},"content":"- Only exact matches will be found","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"bentohset"},"content":"- If no matches are found `Duke Error: No tasks fit the filter KEYWORD` is returned","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"bentohset"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"bentohset"},"content":"```js","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"bentohset"},"content":"find Book","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"bentohset"},"content":"find event","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":163,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"bentohset"},"content":"### Exit the program: `bye`","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"bentohset"},"content":"Exits the program.\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"bentohset"},"content":"Format: `bye`","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"bentohset"},"content":"### Saving the data","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"bentohset"},"content":"Duke data are saved in the hard disk automatically after exiting the program. \u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"bentohset"},"content":"There is no need to save manually.","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"bentohset"},"content":"### Editing the data file","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"bentohset"},"content":"Duke data are saved as a .txt file in `[JAR file location]","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"bentohset"},"content":"/data/duke.txt`. \u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"bentohset"},"content":"Edits must be made according to the formatting of the data.","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"bentohset"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"bentohset"},"content":"___","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"bentohset"},"content":"\u003c!-- FAQs --\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"bentohset"},"content":"## \u003cspan style\u003d\"color:DarkMagenta\"\u003eFAQ\u003c/span\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"bentohset"},"content":"\u003e Q: How do I transfer my data to another Computer?","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"bentohset"},"content":"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"bentohset"},"content":"\u003e A: In your new application folder in the new Computer, paste the copied `/data/duke.txt` file from your old Computer into the same folder as the new `duke.jar`.","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"bentohset"},"content":"___","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"bentohset"},"content":"\u003c!-- Summary of Commands --\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"bentohset"},"content":"## \u003cspan style\u003d\"color:DarkMagenta\"\u003eCommand Summary\u003c/span\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":196,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"bentohset"},"content":"| Command      | Format                                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"bentohset"},"content":"|--------------|-----------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"bentohset"},"content":"| **todo**     | `todo TASK_NAME`                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"bentohset"},"content":"| **deadline** | `deadline TASK_NAME /by BY_DATE`              |","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"bentohset"},"content":"| **event**    | `event TASK_NAME /from FROM_DATE /to TO_DATE` |","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"bentohset"},"content":"| **list**     | `list`                                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"bentohset"},"content":"| **mark**     | `mark TASK_NUMBER`                            |","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"bentohset"},"content":"| **unmark**   | `unmark TASK_NUMBER`                          |","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"bentohset"},"content":"| **delete**   | `delete TASK_NUMBER`                          |","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"bentohset"},"content":"| **find**     | `find KEYWORD`                                |","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"bentohset"},"content":"| **exit**     | `bye`                                         |","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":183,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.storage.FileManager;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.parser.CommandParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        FileManager fileManager \u003d new FileManager();","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        TaskList taskList \u003d new TaskList(fileManager.retrieve());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        CommandParser parser \u003d new CommandParser(taskList);","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        Ui.printWelcome();","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"            parser.getInput();","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"            fileManager.save(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"            Ui.printExit();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bentohset":26,"-":3}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public AddCommand(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        this.toAdd \u003d task;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        taskList.addTask(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":19}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.NoTasksException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    public abstract void handleCommand() throws NoTasksException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bentohset":7}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    private final int index;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public DeleteCommand(TaskList taskList, int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":18}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.NoTasksException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public FindCommand(TaskList taskList, String prompt) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        this.keyword \u003d prompt;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() throws NoTasksException {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        taskList.printFilteredTasks(keyword);","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":19}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    public ListCommand(TaskList taskList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        taskList.printTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":16}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    private final int index;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public MarkCommand(int index, TaskList taskList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        taskList.markTask(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":18}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    private final int index;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public UnmarkCommand(int index, TaskList taskList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":18}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":" * Parent class for all exceptions in Duke","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":" *","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"        super(\"\\tDuke Error: \" + message);","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":11}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":" * An exception representing an input string which is not a valid Command","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    private static final String MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means\";","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        super(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":16}},{"path":"src/main/java/duke/exceptions/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":" * An exception representing an input string which cannot","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":" * be parsed into a valid DateTime object","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    private static final String MESSAGE \u003d \"Invalid date or time, Please use the correct format: \\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"            + \"\\t\\t\" + DateTimeParser.getFormat() + \" in 24-hour format\"; ","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":16}},{"path":"src/main/java/duke/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":" * An exception representing an input string which is","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":" * given in the wrong format and missing required props of /by or /from or /to","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":" * ","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    private static final String MESSAGE \u003d \"Wrong format! Please try again.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    public InvalidFormatException(String... missing) {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        super(\"Wrong format! Please include \" + String.join(\" and \", missing));","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        super(MESSAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":18}},{"path":"src/main/java/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":" * An exception representing an input string which cannot","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":" * be parsed into a valid Task","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    public InvalidTaskException(String task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"        super(\"The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":11}},{"path":"src/main/java/duke/exceptions/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":" * An exception representing an empty filtered list when filtered by keyword","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"public class NoTasksException extends DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    public NoTasksException(String filter) {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"        super(String.format(\"No tasks fit the filter \u0027%s\u0027\", filter));","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":10}},{"path":"src/main/java/duke/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidFormatException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.NoTasksException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"public class CommandParser {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    private static final String EXIT \u003d \"bye\";","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"    public CommandParser(TaskList tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"     * Validates an index if it is within boundaries of the task list and returns the index","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"     * @param inputArr the input array being parsed","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"     * @return a valid index","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidCommandException the input string does not match any valid command","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidTaskException the input string does not match any valid task","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"    private int getValidIndex(String[] inputArr, String command) throws InvalidTaskException, InvalidCommandException {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"        if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"            throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"        //1-based index","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"        int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"        if (index \u003c\u003d 0 || index \u003e this.taskList.size()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            throw new InvalidCommandException(\"No such task exists! Please try again\");","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"        return index;","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"     * Parses and returns a `Command` object from a given input string","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"     * @param inputArray the input array to be parsed, consisting of all the command arguments","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidCommandException the input string does not match any valid command","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidTaskException the input string does not match any valid task","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidFormatException the input string is not in the correct format","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidDateTimeException the date and time of the input string is in the wrong format","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"     * @throws NoTasksException no tasks resulting from the filter is found","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"    public Command parseCommand(String[] inputArray) throws InvalidCommandException, InvalidTaskException, InvalidFormatException, InvalidDateTimeException, NoTasksException {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"        switch (command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"        case TODO:","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"        case EVENT:","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"            Task toAdd \u003d TaskParser.getTaskFromCommand(inputArray);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"            return new AddCommand(toAdd, taskList);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"        case LIST:","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"            return new ListCommand(taskList);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"        case MARK:","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"            boolean isMark \u003d command.equals(MARK);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"            int taskNum \u003d getValidIndex(inputArray, command);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"            return isMark ? new MarkCommand(taskNum, taskList): new UnmarkCommand(taskNum, taskList);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"            ","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"        case DELETE:","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"            int deleteIndex \u003d getValidIndex(inputArray, command);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"            return new DeleteCommand(taskList, deleteIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"        case FIND:","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bentohset"},"content":"            String keyword \u003d inputArray[1];","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"            return new FindCommand(taskList, keyword);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"            ","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"     * Gets lines of input strings from the Scanner and passes it to the handler in an array","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidCommandException the input string does not match any valid command","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidTaskException the input string does not match any valid task","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidFormatException the input string is not in the correct format","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidDateTimeException the date and time of the input string is in the wrong format","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"     * @throws NoTasksException no tasks resulting from the filter is found","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"    public void getInput() throws InvalidCommandException, InvalidTaskException, InvalidFormatException, InvalidDateTimeException , NoTasksException {","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"bentohset"},"content":"        do {","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bentohset"},"content":"            String inputString \u003d input.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bentohset"},"content":"            String[] inputArray \u003d inputString.split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"bentohset"},"content":"            if (inputArray[0].equals(EXIT)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bentohset"},"content":"                isRunning \u003d false;","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bentohset"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bentohset"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bentohset"},"content":"                    Command cmd \u003d parseCommand(inputArray);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bentohset"},"content":"                    cmd.handleCommand();","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidTaskException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bentohset"},"content":"                } catch (NoTasksException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidDateTimeException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"bentohset"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"bentohset"},"content":"        } while (isRunning);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bentohset"},"content":"        input.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":144}},{"path":"src/main/java/duke/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    private static final String FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(FORMAT);","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"     * Parses a string and converts it into a datetime object according to the formatter","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"     * @param input the input string to be converted to a date time object","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidDateTimeException the date and time of the input string is in the wrong format","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    public static LocalDateTime parseDate(String input) throws InvalidDateTimeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"            dateTime \u003d LocalDateTime.parse(input.trim(), FORMATTER);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"        return dateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"    public static String getFormat() {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"        return FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"        return FORMATTER;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":38}},{"path":"src/main/java/duke/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidFormatException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidDateTimeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"public class TaskParser {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"     * Parses a task command as a string array and returns the respective task object","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"     * @param inputArray the input array to be parsed, consisting of all the command arguments","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"     * @return the Task object according to the string array","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidCommandException the input string does not match any valid command","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidTaskException the input string does not match any valid task","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidFormatException the input string is not in the correct format","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"     * @throws InvalidDateTimeException the date and time of the input string is in the wrong format","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    public static Task getTaskFromCommand(String[] inputArray) throws InvalidFormatException, InvalidCommandException, InvalidDateTimeException, InvalidTaskException {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"        Task task;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"        switch (command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"            if (!inputArray[1].contains(\"/by\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"                throw new InvalidFormatException(\"/by\");","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"            String[] deadlineDetails \u003d inputArray[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"            if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"            LocalDateTime by \u003d DateTimeParser.parseDate(deadlineDetails[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"            task \u003d new Deadline(deadlineDetails[0], by);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"        case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"            if (!inputArray[1].contains(\"/from\") \u0026\u0026 !inputArray[1].contains(\"/to\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"                throw new InvalidFormatException(\"/from\", \"/to\");","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"            //splits input according to eventDescription, /from, /to","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"            String[] eventDetails \u003d inputArray[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"            ","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"            if (eventDetails.length \u003c 3) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"            LocalDateTime from \u003d DateTimeParser.parseDate(eventDetails[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            LocalDateTime to \u003d DateTimeParser.parseDate(eventDetails[2]);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"            task \u003d new Event(eventDetails[0], from, to);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"            String todoDetails \u003d inputArray[1];","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"            task \u003d new Todo(todoDetails);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"        default:","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"        return task;","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bentohset":73}},{"path":"src/main/java/duke/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"public class FileManager {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    private File file;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    private String filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"    private String dataDirectory;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"     * Constructor for the File Manager object.","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"     * Creates a File object according to the relative path /data/duke.txt to store the data","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"     * Initializes a /data/ folder and duke.txt if it does not exist","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"    public FileManager() {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"        this.dataDirectory \u003d \"./data/\";","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"        this.filePath \u003d this.dataDirectory + \"duke.txt\";","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"        this.file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"        File directory \u003d new File(this.dataDirectory);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"     * Saves the current taskList accumulated over the program\u0027s life and stores it in /data/duke.txt","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"     * @param taskList the taskList containing all the user\u0027s tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"                writer.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"            writer.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"     * Retrieves any tasks saved in /data/duke.txt if the directory exists.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"     * Decodes the contents of duke.txt into a taskList object. ","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"     * Called upon initialisation of Duke.java","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"     * @return taskList the taskList containing all the user\u0027s tasks saved in storage","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"    public List\u003cTask\u003e retrieve() {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"            scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"                String encoded \u003d scanner.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"                taskList.add(this.decodeTask(encoded));","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"        } finally {","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"            scanner.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"        return taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"     * Decoder method to read each line of duke.txt storage and converts into a Task object","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"     * @param task the string corresponding to the lines of duke.txt","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"     * @return decoded Task object","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"    private Task decodeTask(String task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"        String[] components \u003d task.split(\" ### \");","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"        String command \u003d components[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"        String mark \u003d components[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"        String description \u003d components[2];","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"bentohset"},"content":"        Task decoded \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"        switch (command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Todo(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"bentohset"},"content":"        case \"event\":","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bentohset"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(components[4]);","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Event(description, from, to);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"bentohset"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(components[3]);","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"bentohset"},"content":"        if (mark.equals(\"true\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"bentohset"},"content":"            decoded.markDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"bentohset"},"content":"        return decoded;","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bentohset":125}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public String getType() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        return \"deadline\";","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        return \"[D]\" + super.toString() ","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"                + \" (by: \" + by.format(DateTimeParser.getFormatter()) + \")\";","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"     * Encodes the task into a string to be stored in duke.txt storage","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"     * @return string in the format of \"deadline ### isDone ### description ### by\"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s ### %s\", \"deadline\", super.encode(), this.by);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":34}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.parser.DateTimeParser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    public String getType() {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"        return \"event\";","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        return \"[E]\" + super.toString() ","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"                + \" (from: \" + from.format(DateTimeParser.getFormatter()) ","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"                + \" to: \" + to.format(DateTimeParser.getFormatter()) + \")\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"     * Encodes the task into a string to be stored in duke.txt storage","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"     * @return string in the format of \"event ### isDone ### description ### from ### to\"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s ### %s ### %s\", \"event\", super.encode(), this.from, this.to);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":37}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        return (isDone ? \"X\" : \" \");    ","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d true;     ","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d false;    ","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;    ","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"     * Encodes the task into a string to be stored in duke.txt storage","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"     * @return string in the format of \"isDone ### description\"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s\", this.isDone, this.description);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    public abstract String getType();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bentohset":37}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.NoTasksException;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"public class TaskList {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"     * Overloaded constructor for the creation of a TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"     * Constructor for the creation of a TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"     * @param tasks List of tasks to be included in TaskList after creation.","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"     * Returns the number of tasks in the task list","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"     * @return the number of tasks in the task list","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"    public int size() {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    ","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"     * @return List of tasks inline separated by commas","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"     * Gets a task from the task list by index","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"     * @param index the index of the task","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"     * @return the task with index `index`","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"     * Adds a given task to the TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"        String addedMessage \u003d \"\\tGot it. I\u0027ve added this task:\\n\" + \"\\t  \" + task;","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d printSize();","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {addedMessage, sizeMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"     * Deletes the task identified by its order in the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"    public void deleteTask(int deleteIndex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"        Task taskToDelete \u003d this.tasks.get(deleteIndex-1);","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"        this.tasks.remove(taskToDelete);","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"        String removeMessage \u003d \"\\tNoted. I\u0027ve removed this task:\\n\" + \"\\t  \" + taskToDelete;","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d printSize();","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {removeMessage, sizeMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"     * Gets the number of tasks in the list as a message.","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"     * @return sizeMessage The message indicating how many tasks are in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"    public String printSize() {","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d \"\\tNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"        return sizeMessage;","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"     * Marks the task, identified by its order, as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be marked as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"    public void markTask(int taskNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"        Task currentTask \u003d this.tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"bentohset"},"content":"        currentTask.markDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"        String markMessage \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\" + \"\\t  \" + currentTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {markMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"bentohset"},"content":"     * Unmarks the task, identified by its order, as incomplete.","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be unmarked.","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"    public void unmarkTask(int taskNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"        Task currentTask \u003d this.tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"bentohset"},"content":"        currentTask.markUndone();","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"bentohset"},"content":"        String unmarkMessage \u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"bentohset"},"content":"                \"\\tOK, I\u0027ve marked this task as not done yet:\\n\" + \"\\t  \" + currentTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {unmarkMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"bentohset"},"content":"     * Displays information about all the tasks tracked by the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"bentohset"},"content":"    public void printTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d new String[this.tasks.size() + 1];","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"bentohset"},"content":"        messagePacket[0] \u003d \"\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"bentohset"},"content":"        int messageCount \u003d 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"bentohset"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"bentohset"},"content":"            String line \u003d \"\\t\" + (i + 1) + \". \" + this.tasks.get(i);","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"bentohset"},"content":"            messagePacket[messageCount++] \u003d line;","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"bentohset"},"content":"     * Displays all tasks filtered by a keyword","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"bentohset"},"content":"     * ","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"bentohset"},"content":"     * @param filter the keyword to filter the tasks by","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bentohset"},"content":"    public void printFilteredTasks(String filter) throws NoTasksException {","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"bentohset"},"content":"        List\u003cTask\u003e taskList \u003d getTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"bentohset"},"content":"        ArrayList\u003cString\u003e messagePacket \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"bentohset"},"content":"        messagePacket.add(String.format(\"\\tHere are the tasks matching %s:\", filter));","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bentohset"},"content":"        //convert list of tasks to list of strings","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"bentohset"},"content":"        List\u003cString\u003e stringList \u003d taskList.stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"bentohset"},"content":"                .map(task -\u003e \"\\t  \" + task.toString())","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"bentohset"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"bentohset"},"content":"        //filter tasks by keyword","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"bentohset"},"content":"        List\u003cString\u003e filteredTasks \u003d stringList.stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"bentohset"},"content":"                .filter(task -\u003e task.toLowerCase().contains(filter.toLowerCase()))","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"bentohset"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"bentohset"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"bentohset"},"content":"            throw new NoTasksException(filter);","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"bentohset"},"content":"        messagePacket.addAll(filteredTasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket.toArray(String[] ::new));","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bentohset":174}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    public String getType() {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"        return \"todo\";","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"     * Encodes the task into a string to be stored in duke.txt storage","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"     * @return string in the format of \"todo ### isDone ### description\"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s\", \"todo\", super.encode());","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"    public static final String LOGO \u003d \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"            + \"\\t██████╗░██╗░░░██╗██╗░░██╗███████╗\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"            + \"\\t██╔══██╗██║░░░██║██║░██╔╝██╔════╝\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"            + \"\\t██║░░██║██║░░░██║█████═╝░█████╗░░\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"            + \"\\t██║░░██║██║░░░██║██╔═██╗░██╔══╝░░\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"            + \"\\t██████╔╝╚██████╔╝██║░╚██╗███████╗\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"            + \"\\t╚═════╝░░╚═════╝░╚═╝░░╚═╝╚══════╝\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    public static void printDivider() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\t____________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"                + \"\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    public static void printExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\tSaving tasks... Hope to see you again soon!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"     * Prints the message passed as an array onto the terminal line by line","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"     * @input messages string array","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"    public static void printMessage(String[] messages) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"            System.out.println(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bentohset":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"todo read a book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"event project meeting","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"event project meeting /from Monday 4pm /to Monday 6pm","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"mark 4","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"mark 1","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"unmark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"delete 2","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"delete 5","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bentohset":2,"-":19}}]
