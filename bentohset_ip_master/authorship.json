[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.storage.FileManager;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        FileManager fileManager \u003d new FileManager();","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        TaskList taskList \u003d new TaskList(fileManager.retrieve());","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        Command commands \u003d new Command(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        Ui.printWelcome();","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"            commands.getInput();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"            fileManager.save(taskList);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"            Ui.printExit();","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bentohset":26,"-":3}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidFormatException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"public class Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    public Command(TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    public void handleCommand(String[] inputArray) throws InvalidCommandException, InvalidTaskException, InvalidFormatException {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        switch (command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"            String todoDetails \u003d inputArray[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"            Task todo \u003d new Todo(todoDetails);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"            taskList.addTask(todo);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"            if (!inputArray[1].contains(\"/by\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"                throw new InvalidFormatException(\"/by\");","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"            //splits input according to deadlineDescription, /by","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"            String[] deadlineDetails \u003d inputArray[1].split(\" /by \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"            Task deadline \u003d new Deadline(deadlineDetails[0],deadlineDetails[1]);","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"        case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"            if (!inputArray[1].contains(\"/from\") \u0026\u0026 !inputArray[1].contains(\"/to\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"                throw new InvalidFormatException(\"/from\", \"/to\");","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"            //splits input according to eventDescription, /from, /to","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"            String[] eventDetails \u003d inputArray[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"            Task event \u003d new Event(eventDetails[0],eventDetails[1],eventDetails[2]);","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"            taskList.addTask(event);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"        case \"list\":","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"            taskList.printTasks();","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"            int taskNum \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"            taskList.markTask(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"            int unmarkTaskNum \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"            taskList.unmarkTask(unmarkTaskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"            ","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"                throw new InvalidTaskException(command);","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"            int deleteIndex \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"            taskList.deleteTask(deleteIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"            ","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"    public void getInput() throws InvalidCommandException, InvalidTaskException, InvalidFormatException {","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"bentohset"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"        do {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"            String inputString \u003d input.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"            String[] inputArray \u003d inputString.split(\" \", 2);","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"            if (inputArray[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"bentohset"},"content":"                isRunning \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"bentohset"},"content":"            } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"                try {","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"bentohset"},"content":"                    this.handleCommand(inputArray);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidTaskException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":112,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"                } catch (InvalidFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"bentohset"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"        } while (isRunning);","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"        input.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bentohset":120}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"        super(\"\\tDuke Error: \" + message);","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":6}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    private static final String exceptionMessage \u003d \"I\u0027m sorry, but I don\u0027t know what that means\";","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"        super(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        super(exceptionMessage);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":12}},{"path":"src/main/java/duke/exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    private static final String exceptionMessage \u003d \"Wrong format! Please try again.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    public InvalidFormatException(String... missing) {","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"        super(\"Wrong format! Please include \" + missing);","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"        super(exceptionMessage);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":12}},{"path":"src/main/java/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    public InvalidTaskException(String task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"        super(\"The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"bentohset":6}},{"path":"src/main/java/duke/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"public class FileManager {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    private File file;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    private String filePath;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    private String dataDirectory;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    public FileManager() {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"        this.dataDirectory \u003d \"./data/\";","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        this.filePath \u003d this.dataDirectory + \"duke.txt\";","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        this.file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        File directory \u003d new File(this.dataDirectory);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"                writer.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"            writer.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"    public List\u003cTask\u003e retrieve() {","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"                String encoded \u003d scanner.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"                taskList.add(this.decodeTask(encoded));","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"        } finally {","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"            scanner.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"        ","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"        return taskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"    private Task decodeTask(String task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"        String[] components \u003d task.split(\" ### \");","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"        String command \u003d components[0];","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"        String mark \u003d components[1];","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"        String description \u003d components[2];","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"        Task decoded \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"        switch (command) {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Todo(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"        case \"event\":","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Event(description, components[3], components[4]);","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"            decoded \u003d new Deadline(description, components[3]);","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"        default:","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"        if (mark.equals(\"true\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"            decoded.markDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"        return decoded;","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bentohset":93}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    protected String by;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s ### %s\", \"deadline\", super.encode(), this.by);","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":19}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    protected String from;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"    protected String to;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s ### %s ### %s\", \"event\", super.encode(), this.from, this.to);","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":21}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    protected String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"    //check task with X or tick","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"        return (isDone ? \"X\" : \" \");    ","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"    //mark task as done","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d true;     ","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    //mark as undone","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        this.isDone \u003d false;    ","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    //string of status and description","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;    ","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"    //for file saving purposes","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s\", this.isDone, this.description);","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"bentohset":35}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"public class TaskList {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"     * Overloaded constructor for the creation of a TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"     * Constructor for the creation of a TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"     * @param tasks List of tasks to be included in TaskList after creation.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"    ","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"     * Adds a given task to the TaskList object.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"bentohset"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"bentohset"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"bentohset"},"content":"        String addedMessage \u003d \"\\tGot it. I\u0027ve added this task:\\n\" + \"\\t  \" + task;","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d printSize();","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {addedMessage, sizeMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"bentohset"},"content":"     * Deletes the task identified by its order in the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"bentohset"},"content":"    public void deleteTask(int deleteIndex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"bentohset"},"content":"        if (deleteIndex \u003e this.tasks.size() || deleteIndex \u003c\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"bentohset"},"content":"            System.out.println(\"\\tNo such task exists! Please try again\");","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"bentohset"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"bentohset"},"content":"        Task taskToDelete \u003d this.tasks.get(deleteIndex-1);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"bentohset"},"content":"        this.tasks.remove(taskToDelete);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"bentohset"},"content":"        String removeMessage \u003d \"\\tNoted. I\u0027ve removed this task:\\n\" + \"\\t  \" + taskToDelete;","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d printSize();","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {removeMessage, sizeMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"bentohset"},"content":"     * Gets the number of tasks in the list as a message.","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"bentohset"},"content":"     * @return sizeMessage The message indicating how many tasks are in the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"bentohset"},"content":"    public String printSize() {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"bentohset"},"content":"        String sizeMessage \u003d \"\\tNow you have \" + this.tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"bentohset"},"content":"        return sizeMessage;","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"bentohset"},"content":"     * Marks the task, identified by its order, as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be marked as completed.","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"bentohset"},"content":"    public void markTask(int taskNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"bentohset"},"content":"        if (taskNum \u003e this.tasks.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"bentohset"},"content":"            System.out.println(\"\\tNo such task exists! Please try again\");","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"bentohset"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"bentohset"},"content":"        Task currentTask \u003d this.tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"bentohset"},"content":"        currentTask.markDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"bentohset"},"content":"        String markMessage \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\" + \"\\t  \" + currentTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {markMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"bentohset"},"content":"     * Unmarks the task, identified by its order, as incomplete.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"bentohset"},"content":"     * @param taskNum The number corresponding to the task to be unmarked.","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"bentohset"},"content":"    public void unmarkTask(int taskNum) {","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"bentohset"},"content":"        if (taskNum \u003e this.tasks.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"bentohset"},"content":"            System.out.println(\"\\tNo such task exists! Please try again\");","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"bentohset"},"content":"            return;","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"bentohset"},"content":"        Task currentTask \u003d this.tasks.get(taskNum - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"bentohset"},"content":"        currentTask.markUndone();","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"bentohset"},"content":"        String unmarkMessage \u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"bentohset"},"content":"                \"\\tOK, I\u0027ve marked this task as not done yet:\\n\" + \"\\t  \" + currentTask;","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d {unmarkMessage};","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"bentohset"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"bentohset"},"content":"     * Displays information about all the tasks tracked by the TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"bentohset"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"bentohset"},"content":"    public void printTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"bentohset"},"content":"        String[] messagePacket \u003d new String[this.tasks.size() + 1];","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"bentohset"},"content":"        messagePacket[0] \u003d \"\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"bentohset"},"content":"        int messageCount \u003d 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"bentohset"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"bentohset"},"content":"            String line \u003d \"\\t\" + (i + 1) + \". \" + this.tasks.get(i);","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"bentohset"},"content":"            messagePacket[messageCount++] \u003d line;","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"bentohset"},"content":"        Ui.printMessage(messagePacket);","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"bentohset":128}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"    public String encode() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"        return String.format(\"%s ### %s\", \"todo\", super.encode());","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":16}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"package duke.ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"    public static final String LOGO \u003d \"\\t ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"            + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"            + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"            + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"            + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"    public static void printDivider() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\t____________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"bentohset"},"content":"    public static void printWelcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"bentohset"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"                + \"\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"bentohset"},"content":"    public static void printExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"bentohset"},"content":"        System.out.println(\"\\tSaving tasks... Hope to see you again soon!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"bentohset"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"bentohset"},"content":"    public static void printMessage(String[] messages) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"bentohset"},"content":"        for (String message : messages) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"bentohset"},"content":"            System.out.println(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"bentohset"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"bentohset"},"content":"        printDivider();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"bentohset"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"bentohset"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"bentohset":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentohset"},"content":"todo read a book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"bentohset"},"content":"deadline return book /by Monday","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"bentohset"},"content":"event project meeting","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"bentohset"},"content":"event project meeting /from Monday 4pm /to Monday 6pm","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"bentohset"},"content":"mark 4","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"bentohset"},"content":"mark 1","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"bentohset"},"content":"mark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"bentohset"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"bentohset"},"content":"unmark 2","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"bentohset"},"content":"delete 2","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"bentohset"},"content":"delete 5","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"bentohset"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"bentohset":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bentohset"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bentohset"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bentohset":2,"-":19}}]
