[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    private String by;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[D][%s] %s (by: %s)\\n\", this.getDone(), this.getTaskName(), this.by);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"        return this.by;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.InsufficientInputException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.UnkownCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"import java.io.*;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    public static String HorizontalLine \u003d \"__________________________\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"    private static String path \u003d System.getProperty(\"user.dir\") + File.separator + \"data.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"    public static void main(String[] args) throws UnkownCommandException {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"        try{","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"            createTasklistFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"            readData(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"            System.out.println(\"No file exists\");","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"        };","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"        System.out.println(HorizontalLine + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-15"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"                + HorizontalLine);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"                String[] inputWords \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"                switch (inputWords[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"                case \"list\":","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"GohJW"},"content":"                    displayList();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"GohJW"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"GohJW"},"content":"                    markTask(inputWords);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"GohJW"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"GohJW"},"content":"                    unmarkTask(inputWords);","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"GohJW"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"GohJW"},"content":"                    createTodo(inputWords);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"GohJW"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"GohJW"},"content":"                    createDeadline(inputWords);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"GohJW"},"content":"                case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"GohJW"},"content":"                    createEvent(inputWords);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"GohJW"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"GohJW"},"content":"                    deleteTask(inputWords);","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"GohJW"},"content":"                default:","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"GohJW"},"content":"                    throw new UnkownCommandException(\"Unknown command, please try again.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"GohJW"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"GohJW"},"content":"                saveTasklist(path, taskList);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"GohJW"},"content":"            } catch (InsufficientInputException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"GohJW"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"GohJW"},"content":"            } catch (UnkownCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"GohJW"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"GohJW"},"content":"//            } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"GohJW"},"content":"//                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"GohJW"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"GohJW"},"content":"                System.out.println(\"Invalid task number\");","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"GohJW"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"GohJW"},"content":"                System.out.println(\"Error occurred while saving file\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"GohJW"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"GohJW"},"content":"        System.out.println(HorizontalLine + \"Goodbye!\" + \"\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"GohJW"},"content":"    private static void readData(File f) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"GohJW"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"GohJW"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"GohJW"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"GohJW"},"content":"            String[] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"GohJW"},"content":"            switch(data[0].trim()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"GohJW"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"GohJW"},"content":"                taskList.add(new ToDo(data[2].trim()));","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"GohJW"},"content":"                taskList.get(Task.maxTaskNumber).setTaskType(\"todo\");","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"GohJW"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"GohJW"},"content":"                taskList.add(new Deadline(data[2].trim(), data[3].trim()));","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"GohJW"},"content":"                taskList.get(Task.maxTaskNumber).setTaskType(\"deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"GohJW"},"content":"            case \"event\":","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"GohJW"},"content":"                taskList.add(new Event(data[2].trim(), data[3].trim(), data[4].trim()));","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"GohJW"},"content":"                taskList.get(Task.maxTaskNumber).setTaskType(\"event\");","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"GohJW"},"content":"            if(data[1].trim().equals(\"X\")) {","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"GohJW"},"content":"                taskList.get(Task.maxTaskNumber).setDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"GohJW"},"content":"            Task.maxTaskNumber++;","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"GohJW"},"content":"            //System.out.println(input);","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"GohJW"},"content":"    private static void createTasklistFile() throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"GohJW"},"content":"        File tasklistFile \u003d new File(\"./data.txt\");","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"GohJW"},"content":"        if (!tasklistFile.createNewFile()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"GohJW"},"content":"            System.out.println(\"File already exists\");","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"GohJW"},"content":"    private static void saveTasklist(String path, ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"GohJW"},"content":"        FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"GohJW"},"content":"        for (Task i : taskList) {","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"GohJW"},"content":"            String taskType \u003d i.getTaskType();","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"GohJW"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"GohJW"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \" | \" + i.getDone() + \" | \" + i.getTaskName() + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"GohJW"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"GohJW"},"content":"                Deadline d \u003d (Deadline) i;","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \" | \" + i.getDone() + \" | \" + i.getTaskName() + \" | \" + d.getBy() + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"GohJW"},"content":"            case \"event\":","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"GohJW"},"content":"                Event e \u003d (Event) i;","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \"|\" + i.getDone()+ \"|\" + i.getTaskName() + \"|\" + e.getStartDate() + \"|\"","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"GohJW"},"content":"                        + e.getEndDate()  + System.lineSeparator());","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"GohJW"},"content":"        fw.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"GohJW"},"content":"    private static void createEvent(String[] inputWords) throws InsufficientInputException {","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Event command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":140,"author":{"gitId":"GohJW"},"content":"        String[] event \u003d inputWords[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"GohJW"},"content":"        if (event.length \u003c 3 || event[0].trim().equals(\"\") || event[1].trim().equals(\"\") || event[2].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Event command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":143,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":144,"author":{"gitId":"GohJW"},"content":"        taskList.add(new Event(event[0], event[1], event[2]));","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"GohJW"},"content":"        taskList.get(Task.maxTaskNumber).setTaskType(\"event\");","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"GohJW"},"content":"        System.out.printf(HorizontalLine + \"Event added: %s (from: %s to: %s)\\n\" + HorizontalLine, event[0], event[1], event[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"GohJW"},"content":"    private static void createDeadline(String[] inputWords) throws InsufficientInputException {","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2023-02-04"},{"lineNumber":152,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Deadline command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"GohJW"},"content":"        String[] deadline \u003d inputWords[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"GohJW"},"content":"        if (deadline.length \u003c 2 || deadline[0].trim().equals(\"\") || deadline[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Deadline command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"GohJW"},"content":"        taskList.add(new Deadline(deadline[0], deadline[1]));","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"GohJW"},"content":"        taskList.get(Task.maxTaskNumber).setTaskType(\"deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"GohJW"},"content":"        System.out.printf(HorizontalLine + \"Deadline added: %s (by: %s)\\n\" + HorizontalLine, deadline[0], deadline[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"GohJW"},"content":"    private static void createTodo(String[] inputWords) throws InsufficientInputException {","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2 || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Todo command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"GohJW"},"content":"        taskList.add(new ToDo(inputWords[1].trim()));","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"GohJW"},"content":"        taskList.get(Task.maxTaskNumber).setTaskType(\"todo\");","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"GohJW"},"content":"        System.out.println(HorizontalLine + \"To do added: \" + inputWords[1] + \"\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"GohJW"},"content":"    private static void unmarkTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException {","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2 || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"GohJW"},"content":"        int unmarkTaskNumber \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"GohJW"},"content":"        if (unmarkTaskNumber \u003e\u003d Task.maxTaskNumber || unmarkTaskNumber \u003c 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"GohJW"},"content":"            //throw new InvalidTaskNumberException(\"Task number not found, please try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"GohJW"},"content":"            // System.out.println(\"No such task found\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"GohJW"},"content":"            taskList.get(unmarkTaskNumber).unsetDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"GohJW"},"content":"            System.out.println(HorizontalLine + \"Task set as undone: \" + taskList.get(unmarkTaskNumber).getTaskName() +","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"GohJW"},"content":"                    \"\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"GohJW"},"content":"    private static void markTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException {","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2 || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"GohJW"},"content":"        int markTaskNumber \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"GohJW"},"content":"        if (markTaskNumber \u003e\u003d Task.maxTaskNumber || markTaskNumber \u003c 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"GohJW"},"content":"            //throw new InvalidTaskNumberException(\"Task number not found, please try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"GohJW"},"content":"            //System.out.println(\"No such task found\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":200,"author":{"gitId":"GohJW"},"content":"            taskList.get(markTaskNumber).setDone();","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"GohJW"},"content":"            System.out.println(HorizontalLine + \"Task set as done: \" + taskList.get(markTaskNumber).getTaskName() + \"\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"GohJW"},"content":"                    + HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":205,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":206,"author":{"gitId":"GohJW"},"content":"    private static void displayList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"GohJW"},"content":"        if (taskList.size() !\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"GohJW"},"content":"            System.out.println(HorizontalLine + \"List of Tasks: \\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"GohJW"},"content":"            for (int i \u003d 0; i \u003c Task.maxTaskNumber; i++) {","lastModifiedDate":"2023-02-12"},{"lineNumber":210,"author":{"gitId":"GohJW"},"content":"                System.out.printf(\"%d.\", i + 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"GohJW"},"content":"                taskList.get(i).getTaskStatus();","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":213,"author":{"gitId":"GohJW"},"content":"            System.out.println(HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":214,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":215,"author":{"gitId":"GohJW"},"content":"            System.out.println(HorizontalLine + \"no task added yet\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":218,"author":{"gitId":"GohJW"},"content":"    private static void deleteTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException{","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c 2 || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":222,"author":{"gitId":"GohJW"},"content":"        int taskIndex \u003d Integer.valueOf(inputWords[1])-1;","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"GohJW"},"content":"        if(taskIndex \u003e\u003d Task.maxTaskNumber || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"GohJW"},"content":"            //throw new InvalidTaskNumberException(\"Task number not found, please try again.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":225,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-16"},{"lineNumber":226,"author":{"gitId":"GohJW"},"content":"        }else{","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"GohJW"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"GohJW"},"content":"            Task.maxTaskNumber--;","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"GohJW"},"content":"            System.out.printf(HorizontalLine + \"Task %d has been deleted\\n\" + HorizontalLine, taskIndex+1);","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":233,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"GohJW":231,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    private String startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    private String endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[E][%s] %s (from: %s to: %s)\\n\", this.getDone(), this.getTaskName(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"        return this.startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"        return this.endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":24}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    public static int maxTaskNumber \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    private String taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    private String taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    public String getDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"        return taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"    public void unsetDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"GohJW":37}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[T][%s] %s\\n\", this.getDone(), this.getTaskName());","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":14}},{"path":"src/main/java/duke/exceptions/InsufficientInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class InsufficientInputException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public InsufficientInputException(String exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"GohJW":7}},{"path":"src/main/java/duke/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public InvalidTaskNumberException(String exception) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"GohJW":7}},{"path":"src/main/java/duke/exceptions/UnkownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class UnkownCommandException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public UnkownCommandException(String exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"GohJW":7}}]
