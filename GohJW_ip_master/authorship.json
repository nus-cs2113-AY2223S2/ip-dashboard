[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"# User Guide for Duke","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"### Add and manage your own tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"Manage your list of tasks easily by adding them to Duke.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"### Keep track of task statuses","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"Easily mark and unmark your list of tasks in order to keep track of what tasks you have compeleted.","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"### `todo` - Add a todo task.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"Adds a todo task into the list of tasks.","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"`todo read book`","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"To do added: read book","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"### `deadline` - Add a deadline task.","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"Adds a deadline task into the list of tasks. Specify the deadline with `/by` of format ```yyyy-mm-dd```.","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"`deadline return book /by 2021-06-05`","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"GohJW"},"content":"Deadline added: return book (by: Jun 05 2021)","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"GohJW"},"content":"### `event` - Add an event task.","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"GohJW"},"content":"Adds an event task into the list of tasks. Specify the start and end of the event with `/from` and `/to` respectively.","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"GohJW"},"content":"`event project meeting /from Sun 4pm /to 6pm`","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"GohJW"},"content":"Event added: project meeting (from: Sun 4pm to: 6pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"GohJW"},"content":"### `list` - List all current tasks.","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"GohJW"},"content":"Lists out all current tasks and their information.","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"GohJW"},"content":"`list`","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"GohJW"},"content":"List of Tasks: ","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"GohJW"},"content":"1.[T][ ] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"GohJW"},"content":"2.[D][ ] return book (by: Jun 05 2021)","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"GohJW"},"content":"3.[E][ ] project meeting (from: Sun 4pm to: 6pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"GohJW"},"content":"### `mark` and `unmark` - Mark or unmark a task.","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"GohJW"},"content":"Marks or unmarks a task based on a given task number.","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"GohJW"},"content":"`mark 1`","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"GohJW"},"content":"`list`","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"GohJW"},"content":"Task set as done: read book","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"GohJW"},"content":"List of Tasks: ","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"GohJW"},"content":"1.[T][X] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"GohJW"},"content":"2.[D][ ] return book (by: Jun 05 2021)","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"GohJW"},"content":"3.[E][ ] project meeting (from: Sun 4pm to: 6pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"GohJW"},"content":"### `find` - Find tasks.","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"GohJW"},"content":"Finds all tasks which contains the specified keyword in its task name and prints its respective tasknumber and information.","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"GohJW"},"content":"`find book`","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"GohJW"},"content":"Tasks with matching keywords:","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"GohJW"},"content":"1.[T][X] read book","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"GohJW"},"content":"2.[D][ ] return book (by: Jun 05 2021)","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":127,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"GohJW"},"content":"### `delete` - Delete a task.","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"GohJW"},"content":"Deletes the task of the specified task number. Deleting a task shifts the task numbers of subsequent tasks up.","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"GohJW"},"content":"Example of usage: ","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"GohJW"},"content":"`delete 1`","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"GohJW"},"content":"`list`","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"GohJW"},"content":"Expected outcome:","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"GohJW"},"content":"Task 1 has been deleted","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"GohJW"},"content":"List of Tasks: ","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"GohJW"},"content":"1.[D][ ] return book (by: Jun 05 2021)","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"GohJW"},"content":"2.[E][ ] project meeting (from: Sun 4pm to: 6pm)","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"GohJW"},"content":"__________________________","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"GohJW"},"content":"```","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"GohJW":133,"-":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    public Deadline(String taskName, LocalDate by) {","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[D][%s] %s (by: %s)\\n\", this.getDone(), this.getTaskName(),","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"        return this.by;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.InsufficientInputException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.UnkownCommandException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"import java.io.File;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"public class Duke {","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    private String path \u003d System.getProperty(\"user.dir\") + File.separator + \"data.txt\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"    private UI ui;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    /** Creates and initializes an instance of Duke by looking for saved data in the listed path**/","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    public Duke() {","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"        storage.setTaskList(taskList, taskList.getTaskListArray());","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"        storage.initializeFile(path);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"    /** Runs the Duke program, checks and executes the first word of the input string as a command**/","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"    public void run() {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"        String input \u003d parser.readInput();","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"                String[] inputWords \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"                switch (inputWords[0]) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"                case \"list\":","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"                    taskList.displayList();","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"                    taskList.markTask(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"GohJW"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"GohJW"},"content":"                    taskList.unmarkTask(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"GohJW"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"GohJW"},"content":"                    taskList.createTodo(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"GohJW"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"GohJW"},"content":"                    taskList.createDeadline(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"GohJW"},"content":"                case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"GohJW"},"content":"                    taskList.createEvent(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"GohJW"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"GohJW"},"content":"                    taskList.deleteTask(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"GohJW"},"content":"                case \"find\":","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"GohJW"},"content":"                    taskList.findTask(inputWords);","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"GohJW"},"content":"                    break;","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"GohJW"},"content":"                default:","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"GohJW"},"content":"                    throw new UnkownCommandException(\"Unknown command, please try again.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"GohJW"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"GohJW"},"content":"                storage.saveTasklist(path);","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"GohJW"},"content":"            } catch (InsufficientInputException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"GohJW"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"GohJW"},"content":"            } catch (UnkownCommandException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"GohJW"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"GohJW"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"GohJW"},"content":"                System.out.println(\"Invalid task number\");","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"GohJW"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"GohJW"},"content":"                System.out.println(\"Error occurred while saving file\\n\");","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"GohJW"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"GohJW"},"content":"                System.out.println(\"Please input date of format yyyy-mm-dd\");","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"GohJW"},"content":"            input \u003d parser.readInput();","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"GohJW"},"content":"        ui.printGoodbye();","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"GohJW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"GohJW"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"GohJW":80}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    private String startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    private String endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    public Event(String taskName, String startDate, String endDate) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[E][%s] %s (from: %s to: %s)\\n\", this.getDone(), this.getTaskName(),","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"                this.startDate, this.endDate);","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"    public String getStartDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"        return this.startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"    public String getEndDate() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"        return this.endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"public class Parser {","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    /** reads the next string input into the console **/","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"    public String readInput() {","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"        return in.nextLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"GohJW":11}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import java.io.File;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"public class Storage {","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    private ArrayList\u003cTask\u003e taskListArray;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    public void setTaskList(TaskList taskList, ArrayList\u003cTask\u003e taskListArray) {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"        this.taskListArray \u003d taskListArray;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    /** Creates a new file in the target path and checks for an existing save file **/","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    public void initializeFile(String path) {","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"            File f \u003d new File(path);","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"            taskList.readData(f);","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"            System.out.println(\"No current save file exists\");","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"    /** Writes the current stored data in the ArrayList to the file specified in the path **/","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"    public void saveTasklist(String path) throws IOException {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"        FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"        for (Task i : taskListArray) {","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"            String taskType \u003d i.getTaskType();","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \" | \" + i.getDone() + \" | \" + i.getTaskName() + System.lineSeparator());","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"                Deadline d \u003d (Deadline) i;","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \" | \" + i.getDone() + \" | \" + i.getTaskName() + \" | \" + d.getBy() + System.lineSeparator());","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"GohJW"},"content":"            case \"event\":","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"GohJW"},"content":"                Event e \u003d (Event) i;","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"GohJW"},"content":"                fw.write(taskType + \"|\" + i.getDone()+ \"|\" + i.getTaskName() + \"|\" + e.getStartDate() + \"|\"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"GohJW"},"content":"                        + e.getEndDate()  + System.lineSeparator());","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"GohJW"},"content":"        fw.close();","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"GohJW":48}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    public static int maxTaskNumber \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    private String taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    private String taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    public String getDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"        return taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"    public void unsetDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"        return this.taskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"    /** Gets the stored information of a task depending on its task type **/","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"GohJW":38}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"import duke.exceptions.InsufficientInputException;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"import java.io.File;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"public class TaskList {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"    private static final int EVENT_COMMAND_LENGTH \u003d 3;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"GohJW"},"content":"    private static final int INPUT_LENGTH \u003d 2;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"GohJW"},"content":"    private static final int DEADLINE_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"GohJW"},"content":"    private ArrayList\u003cTask\u003e taskListArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"GohJW"},"content":"    /** Prints the currently stored list of tasks in ascending order **/","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"GohJW"},"content":"    public void displayList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"GohJW"},"content":"        if (taskListArray.size() !\u003d 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"GohJW"},"content":"            System.out.println(UI.HorizontalLine + \"List of Tasks: \\n\");","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"GohJW"},"content":"            for (int i \u003d 0; i \u003c Task.maxTaskNumber; i++) {","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"GohJW"},"content":"                System.out.printf(\"%d.\", i + 1);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(i).getTaskStatus();","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"GohJW"},"content":"            System.out.println(UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"GohJW"},"content":"            System.out.println(UI.HorizontalLine + \"no task added yet\\n\" + UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"GohJW"},"content":"    /** Creates a new event task, stores the name of the task and the start and end timings **/","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"GohJW"},"content":"    public void createEvent(String[] inputWords) throws InsufficientInputException {","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH) {","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Event command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"GohJW"},"content":"        String[] event \u003d inputWords[1].split(\" /from | /to \", 3);","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"GohJW"},"content":"        if (event.length \u003c EVENT_COMMAND_LENGTH || event[0].trim().equals(\"\") || event[1].trim().equals(\"\") || event[2].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Event command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"GohJW"},"content":"        taskListArray.add(new Event(event[0].trim(), event[1].trim(), event[2].trim()));","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"GohJW"},"content":"        taskListArray.get(Task.maxTaskNumber).setTaskType(\"event\");","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"GohJW"},"content":"        System.out.printf(UI.HorizontalLine + \"Event added: %s (from: %s to: %s)\\n\" + UI.HorizontalLine, event[0], event[1], event[2]);","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"GohJW"},"content":"    /** Creates a new deadline task, stores the name of the task and the deadline date **/","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"GohJW"},"content":"    public void createDeadline(String[] inputWords) throws InsufficientInputException, DateTimeParseException {","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH) {","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Deadline command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"GohJW"},"content":"        String[] deadline \u003d inputWords[1].split(\" /by \", 2);","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"GohJW"},"content":"        if (deadline.length \u003c DEADLINE_COMMAND_LENGTH || deadline[0].trim().equals(\"\") || deadline[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Deadline command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"GohJW"},"content":"        taskListArray.add(new Deadline(deadline[0], LocalDate.parse(deadline[1].trim())));","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"GohJW"},"content":"        taskListArray.get(Task.maxTaskNumber).setTaskType(\"deadline\");","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"GohJW"},"content":"        System.out.printf(UI.HorizontalLine + \"Deadline added: %s (by: %s)\\n\" + UI.HorizontalLine, deadline[0],","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"GohJW"},"content":"                LocalDate.parse(deadline[1]).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"GohJW"},"content":"    /** Creates a new todo task, stores the name of the task**/","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"GohJW"},"content":"    public void createTodo(String[] inputWords) throws InsufficientInputException {","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Todo command has insufficient input, please try again.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"GohJW"},"content":"        taskListArray.add(new ToDo(inputWords[1].trim()));","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"GohJW"},"content":"        taskListArray.get(Task.maxTaskNumber).setTaskType(\"todo\");","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"GohJW"},"content":"        Task.maxTaskNumber++;","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"GohJW"},"content":"        System.out.println(UI.HorizontalLine + \"To do added: \" + inputWords[1] + \"\\n\" + UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"GohJW"},"content":"    /** Unmarks the task of the task number specified **/","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"GohJW"},"content":"    public void unmarkTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException {","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"GohJW"},"content":"        int unmarkTaskNumber \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"GohJW"},"content":"        if (unmarkTaskNumber \u003e\u003d Task.maxTaskNumber || unmarkTaskNumber \u003c 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"GohJW"},"content":"            taskListArray.get(unmarkTaskNumber).unsetDone();","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"GohJW"},"content":"            System.out.println(UI.HorizontalLine + \"Task set as undone: \" + taskListArray.get(unmarkTaskNumber).getTaskName() +","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"GohJW"},"content":"                    \"\\n\" + UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"GohJW"},"content":"    /** Marks the task of the task number specified **/","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"GohJW"},"content":"    public void markTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException {","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"GohJW"},"content":"        int markTaskNumber \u003d Integer.valueOf(inputWords[1]) - 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"GohJW"},"content":"        if (markTaskNumber \u003e\u003d Task.maxTaskNumber || markTaskNumber \u003c 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"GohJW"},"content":"        } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"GohJW"},"content":"            taskListArray.get(markTaskNumber).setDone();","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"GohJW"},"content":"            System.out.println(UI.HorizontalLine + \"Task set as done: \" + taskListArray.get(markTaskNumber).getTaskName() + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"GohJW"},"content":"                    + UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"GohJW"},"content":"    /** Deletes the task of the task number specified from the list **/","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"GohJW"},"content":"    public void deleteTask(String[] inputWords) throws ArrayIndexOutOfBoundsException, InsufficientInputException{","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Task number not specified, please try again\");","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"GohJW"},"content":"        int taskIndex \u003d Integer.valueOf(inputWords[1])-1;","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"GohJW"},"content":"        if(taskIndex \u003e\u003d Task.maxTaskNumber || taskIndex \u003c 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"GohJW"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"GohJW"},"content":"        }else{","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"GohJW"},"content":"            taskListArray.remove(taskIndex);","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"GohJW"},"content":"            Task.maxTaskNumber--;","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"GohJW"},"content":"            System.out.printf(UI.HorizontalLine + \"Task %d has been deleted\\n\" + UI.HorizontalLine, taskIndex+1);","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"GohJW"},"content":"    /** Searches for tasks which contain the keyword specified in the task name and returns the list of tasks **/","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"GohJW"},"content":"    public void findTask(String[] inputWords) throws InsufficientInputException{","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"GohJW"},"content":"        if (inputWords.length \u003c INPUT_LENGTH || inputWords[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"GohJW"},"content":"            throw new InsufficientInputException(\"Please specify a keyword\");","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"GohJW"},"content":"        System.out.println(UI.HorizontalLine + \"Tasks with matching keywords:\\n\");","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"GohJW"},"content":"        String keyword \u003d inputWords[1].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"GohJW"},"content":"        for(int i \u003d 0; i \u003c Task.maxTaskNumber; i ++) {","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"GohJW"},"content":"            String taskName \u003d taskListArray.get(i).getTaskName();","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"GohJW"},"content":"            if(taskName.contains(keyword)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"GohJW"},"content":"                System.out.printf(\"%d.\", i + 1);","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(i).getTaskStatus();","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"GohJW"},"content":"        System.out.println(UI.HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"GohJW"},"content":"    /** Reads and adds each task saved in the file into the current list **/","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"GohJW"},"content":"    public void readData(File f) throws IOException {","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"GohJW"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"GohJW"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"GohJW"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"GohJW"},"content":"            String[] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"GohJW"},"content":"            switch (data[0].trim()) {","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"GohJW"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"GohJW"},"content":"                taskListArray.add(new ToDo(data[2].trim()));","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(Task.maxTaskNumber).setTaskType(\"todo\");","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"GohJW"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"GohJW"},"content":"                taskListArray.add(new Deadline(data[2].trim(), LocalDate.parse(data[3].trim())));","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(Task.maxTaskNumber).setTaskType(\"deadline\");","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"GohJW"},"content":"            case \"event\":","lastModifiedDate":"2023-02-21"},{"lineNumber":147,"author":{"gitId":"GohJW"},"content":"                taskListArray.add(new Event(data[2].trim(), data[3].trim(), data[4].trim()));","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(Task.maxTaskNumber).setTaskType(\"event\");","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"GohJW"},"content":"                break;","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"GohJW"},"content":"            if (data[1].trim().equals(\"X\")) {","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"GohJW"},"content":"                taskListArray.get(Task.maxTaskNumber).setDone();","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"GohJW"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":154,"author":{"gitId":"GohJW"},"content":"            Task.maxTaskNumber++;","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"GohJW"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":156,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"GohJW"},"content":"    public ArrayList\u003cTask\u003e getTaskListArray() {","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"GohJW"},"content":"        return taskListArray;","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-21"},{"lineNumber":162,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":163,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"GohJW":164}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"        super(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"    public void getTaskStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"        System.out.printf(\"[T][%s] %s\\n\", this.getDone(), this.getTaskName());","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"GohJW":14}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class UI {","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public static String HorizontalLine \u003d \"__________________________\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"        System.out.println(HorizontalLine + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"                + HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"GohJW"},"content":"    public void printGoodbye() {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"GohJW"},"content":"        System.out.println(HorizontalLine + \"Goodbye!\" + \"\\n\" + HorizontalLine);","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"GohJW":13}},{"path":"src/main/java/duke/exceptions/InsufficientInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class InsufficientInputException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public InsufficientInputException(String exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"GohJW":7}},{"path":"src/main/java/duke/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class InvalidTaskNumberException extends Exception {","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public InvalidTaskNumberException(String exception) {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"GohJW":7}},{"path":"src/main/java/duke/exceptions/UnkownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GohJW"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"GohJW"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"GohJW"},"content":"public class UnkownCommandException extends Exception{","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"GohJW"},"content":"    public UnkownCommandException(String exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"GohJW"},"content":"        super(exception);","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"GohJW"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"GohJW"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"GohJW":7}}]
