[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kaceycsn":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"import duke.exceptions.EmptyTaskException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kaceycsn"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"kaceycsn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"kaceycsn"},"content":"    public static void printBorder() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"kaceycsn"},"content":"        String border \u003d \"____________________________________________________________ \\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(border);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"kaceycsn"},"content":"    public static void printGreeting(){","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"kaceycsn"},"content":"        String border \u003d \"____________________________________________________________ \\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"kaceycsn"},"content":"        String greeting \u003d \"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(logo + border+ greeting);","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"kaceycsn"},"content":"    //prints exit statement","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kaceycsn"},"content":"    public static void printExit(){","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"kaceycsn"},"content":"        String exit \u003d \"Bye. Hope to see you again soon! \\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(exit);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kaceycsn"},"content":"    //add a new to do","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kaceycsn"},"content":"    public static void addTodo(Task[] tasks, int listCount, String name) throws EmptyTaskException {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"kaceycsn"},"content":"        if(name.equals(\" \")){","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"kaceycsn"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"kaceycsn"},"content":"        tasks[listCount] \u003d new Todo(name);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"added: \" + name + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kaceycsn"},"content":"    //add a new deadline task","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kaceycsn"},"content":"    public static void addDeadline(Task[] tasks, int listCount, String name, String deadline){","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"kaceycsn"},"content":"        tasks[listCount] \u003d new Deadline(name, deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"added: \" + name + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kaceycsn"},"content":"    //add a new event","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"kaceycsn"},"content":"    public static void addEvent(Task[] tasks, int listCount, String name, String start, String end){","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kaceycsn"},"content":"        tasks[listCount] \u003d new Event(name, start, end);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"added: \" + name + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"kaceycsn"},"content":"    //print list of duke.tasks","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"kaceycsn"},"content":"    public static void printList(Task[] tasks){","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"kaceycsn"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"kaceycsn"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"kaceycsn"},"content":"            if (t \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"kaceycsn"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"kaceycsn"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"kaceycsn"},"content":"                System.out.println(counter + \". \" + t);","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"kaceycsn"},"content":"                counter++;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"kaceycsn"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"kaceycsn"},"content":"    //mark task as done","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"kaceycsn"},"content":"    public static void markTask(Task[] tasks, int taskIndex){","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"kaceycsn"},"content":"        tasks[taskIndex].setStatus(\"mark\");","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(tasks[taskIndex] + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"kaceycsn"},"content":"    //mark task as undone","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"kaceycsn"},"content":"    public static void unmarkTask(Task[] tasks, int taskIndex){","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"kaceycsn"},"content":"        tasks[taskIndex].setStatus(\"unmark\");","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(tasks[taskIndex] + \"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"kaceycsn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"kaceycsn"},"content":"        Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"kaceycsn"},"content":"        Integer listCount \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"kaceycsn"},"content":"        printGreeting();","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"kaceycsn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"kaceycsn"},"content":"        String entry \u003d input.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"kaceycsn"},"content":"        do {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"kaceycsn"},"content":"            String[] userInput \u003d entry.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"kaceycsn"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"kaceycsn"},"content":"                switch (userInput[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"kaceycsn"},"content":"                    case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"kaceycsn"},"content":"                        printList(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"kaceycsn"},"content":"                    case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"kaceycsn"},"content":"                        Integer index \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"kaceycsn"},"content":"                        try{","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"kaceycsn"},"content":"                            markTask(tasks, index - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"kaceycsn"},"content":"                        } catch(NullPointerException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"kaceycsn"},"content":"                            System.out.println(\"Error! Specify a valid task index!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"kaceycsn"},"content":"                        }","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"kaceycsn"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"kaceycsn"},"content":"                        Integer index_um \u003d Integer.parseInt(userInput[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"kaceycsn"},"content":"                        try{","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"kaceycsn"},"content":"                            unmarkTask(tasks, index_um - 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"kaceycsn"},"content":"                        } catch(NullPointerException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"kaceycsn"},"content":"                            System.out.println(\"Error! Specify a valid task index!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"kaceycsn"},"content":"                        }","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":146,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"kaceycsn"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"kaceycsn"},"content":"                        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"kaceycsn"},"content":"                            String[] info \u003d userInput[1].split(\"/by\", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"kaceycsn"},"content":"                            addDeadline(tasks, listCount, info[0], info[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"kaceycsn"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"kaceycsn"},"content":"                            System.out.println(\"OOPS! The description of task cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"kaceycsn"},"content":"                        }","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"kaceycsn"},"content":"                        listCount++;","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"kaceycsn"},"content":"                    case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"kaceycsn"},"content":"                        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"kaceycsn"},"content":"                            addTodo(tasks, listCount, userInput[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"kaceycsn"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"kaceycsn"},"content":"                            System.out.println(\"OOPS! The description of task cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":166,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"kaceycsn"},"content":"                        } catch (EmptyTaskException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":168,"author":{"gitId":"kaceycsn"},"content":"                            e.printErrorMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":170,"author":{"gitId":"kaceycsn"},"content":"                        }","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"kaceycsn"},"content":"                        listCount++;","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"kaceycsn"},"content":"                    case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"kaceycsn"},"content":"                        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":177,"author":{"gitId":"kaceycsn"},"content":"                            String[] info_e \u003d userInput[1].split(\"/\", 3);","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"kaceycsn"},"content":"                            addEvent(tasks, listCount, info_e[0], info_e[1], info_e[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"kaceycsn"},"content":"                        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"kaceycsn"},"content":"                            System.out.println(\"OOPS! The description of task cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":181,"author":{"gitId":"kaceycsn"},"content":"                            printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"kaceycsn"},"content":"                        }","lastModifiedDate":"2023-02-07"},{"lineNumber":183,"author":{"gitId":"kaceycsn"},"content":"                        listCount++;","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"kaceycsn"},"content":"                        entry \u003d input.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"kaceycsn"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"kaceycsn"},"content":"                    default:","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"kaceycsn"},"content":"                        throw new InvalidCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":189,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":190,"author":{"gitId":"kaceycsn"},"content":"                }","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"kaceycsn"},"content":"            } catch(InvalidCommandException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":192,"author":{"gitId":"kaceycsn"},"content":"                e.printErrorMessage();","lastModifiedDate":"2023-02-07"},{"lineNumber":193,"author":{"gitId":"kaceycsn"},"content":"                printBorder();","lastModifiedDate":"2023-02-07"},{"lineNumber":194,"author":{"gitId":"kaceycsn"},"content":"                entry \u003d input.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":195,"author":{"gitId":"kaceycsn"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"kaceycsn"},"content":"        }while(!entry.equals(\"bye\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":197,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":199,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-01-31"},{"lineNumber":200,"author":{"gitId":"kaceycsn"},"content":"        printExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":201,"author":{"gitId":"kaceycsn"},"content":"        printBorder();","lastModifiedDate":"2023-01-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kaceycsn":195,"-":8}},{"path":"src/main/java/duke/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"    public void printErrorMessage(){","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"OOPS! The description of task cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kaceycsn":7}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"    public void printErrorMessage(){","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"        System.out.println(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"kaceycsn":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"    public String deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"        super(name);","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kaceycsn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kaceycsn"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kaceycsn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kaceycsn"},"content":"        String checkbox \u003d \"[ ]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kaceycsn"},"content":"        String typeIndicator \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kaceycsn"},"content":"        if(status){","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kaceycsn"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kaceycsn"},"content":"        return \"[D]\" + checkbox + \" \" + name + \" (by:\" + deadline + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kaceycsn":19}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"    public String start;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"    public String end;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"        super(name);","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kaceycsn"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kaceycsn"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kaceycsn"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kaceycsn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kaceycsn"},"content":"        String checkbox \u003d \"[ ]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kaceycsn"},"content":"        if(status){","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kaceycsn"},"content":"        return \"[E]\" + checkbox + \" \" + name + \"(\" + start  + end + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kaceycsn":20}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"    public String name;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    public Boolean status;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"kaceycsn"},"content":"    public Task(String name){","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"kaceycsn"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"kaceycsn"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"kaceycsn"},"content":"    public void setStatus(String action){","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"        if (action.equals(\"mark\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"kaceycsn"},"content":"            this.status \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"kaceycsn"},"content":"        } else if (action.equals(\"unmark\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"kaceycsn"},"content":"            this.status \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"kaceycsn"},"content":"    public String toString(){","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"kaceycsn"},"content":"        String checkbox \u003d \"[ ]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"kaceycsn"},"content":"        String typeIndicator \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kaceycsn"},"content":"        if(status){","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"kaceycsn"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kaceycsn"},"content":"        return  checkbox + \" \" + name;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"kaceycsn":33}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaceycsn"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"kaceycsn"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"kaceycsn"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"kaceycsn"},"content":"        super(name);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kaceycsn"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kaceycsn"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kaceycsn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kaceycsn"},"content":"        String checkbox \u003d \"[ ]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kaceycsn"},"content":"        String typeIndicator \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kaceycsn"},"content":"        if(status){","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kaceycsn"},"content":"            checkbox \u003d \"[X]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kaceycsn"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kaceycsn"},"content":"        return \"[T]\" + checkbox + \" \" + name;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kaceycsn"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kaceycsn"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kaceycsn":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kaceycsn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kaceycsn":1,"-":20}}]
