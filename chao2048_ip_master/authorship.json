[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"[T][X] duke","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"[T][ ] hello","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"[D][ ] ne (by: nt) ","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"chao2048":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \") \";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.io.*;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    static String FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    static ArrayList \u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        taskCount++;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    public static void deleteTask(String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException{","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        final int deleteId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"        if (deleteId \u003c 0 || deleteId \u003e\u003d taskCount) {","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"I\u0027ve deleted this task ∪･ω･∪:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"        System.out.println(tasks.get(deleteId));","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"        tasks.remove(deleteId);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"        taskCount--;","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"            printFileContents(FILEPATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"No previous file, Duke will try to create a file to store your data.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"                new File(FILEPATH).createNewFile();","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"                throw new RuntimeException(\"Creation of file failed.\", ioe);","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello! I\u0027m Duke  U ´ᴥ` U\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"    private static void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        BufferedWriter outputWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"        outputWriter \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"        for (int i \u003d 0; i \u003c taskCount; i +\u003d 1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"            outputWriter.write(tasks.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"        outputWriter.flush();","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"        outputWriter.close();","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"    public static void goodBye() {","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"            writeToFile(FILEPATH);","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Bye. Hope to see you again soon!ﾉ~\");","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"    public static void info() {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"This command is not valid, please read through the info and try again :)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [todo] [something], and the system will add a new todo item to your list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [event] [something] from: [when] to: [when], and the system will add an event and the timing\");","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [deadline] [something] by: [when], and the system will add a deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [mark] [number], and the system will mark the item of the number as done\");","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [unmark] [number], and the system will unmark the item of the number.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: bye, to say goodbye to Duke!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope it helps!! woof a nice day ੯•໒꒱❤︎\");","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"chao2048"},"content":"    private static void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"chao2048"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"chao2048"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"These are the task from your file: \");","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"chao2048"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"chao2048"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"chao2048"},"content":"            System.out.println(task);","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"chao2048"},"content":"            String type \u003d task.substring(1,2);","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"chao2048"},"content":"            final int descriptionId \u003d task.lastIndexOf(\"]\");","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"chao2048"},"content":"            String taskDescription \u003d task.substring(descriptionId+1).trim().replace(\"(\", \"\").replace(\")\", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"chao2048"},"content":"            final int doneId \u003d task.indexOf(\"[X]\");","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"chao2048"},"content":"            switch(type) {","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"chao2048"},"content":"            case \"T\":","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"chao2048"},"content":"                    addTodo(taskDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"chao2048"},"content":"                        tasks.get(taskCount-1).markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"chao2048"},"content":"            case \"E\":","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"chao2048"},"content":"                    addEvent(taskDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"chao2048"},"content":"                        tasks.get(taskCount-1).markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException | FormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"chao2048"},"content":"            case \"D\":","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"chao2048"},"content":"                    addDeadline(taskDescription);","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"chao2048"},"content":"                        tasks.get(taskCount-1).markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException | FormatException e) {","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"chao2048"},"content":"    public static void process(String s) throws InvalidCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":140,"author":{"gitId":"chao2048"},"content":"        final String[] split \u003d s.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"chao2048"},"content":"        final String[] commandTypeAndParams \u003d split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"chao2048"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"chao2048"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"chao2048"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"chao2048"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"chao2048"},"content":"            printListOfTasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":147,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"chao2048"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"chao2048"},"content":"                addTodo(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":151,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(taskCount-1));","lastModifiedDate":"2023-02-14"},{"lineNumber":153,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Now you have \" + taskCount + \" tasks in your list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add todo again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"chao2048"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"chao2048"},"content":"                addDeadline(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":164,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(taskCount-1));","lastModifiedDate":"2023-02-14"},{"lineNumber":166,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Now you have \" + taskCount + \" tasks in your list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":169,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add deadline again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-05"},{"lineNumber":171,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":172,"author":{"gitId":"chao2048"},"content":"            } catch (FormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":173,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The format of entering deadline is incorrect.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add deadline again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-05"},{"lineNumber":175,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":176,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":177,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"chao2048"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":180,"author":{"gitId":"chao2048"},"content":"                addEvent(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":182,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(taskCount-1));","lastModifiedDate":"2023-02-14"},{"lineNumber":183,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Now you have \" + taskCount + \" tasks in your list.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":187,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add event again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-05"},{"lineNumber":188,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"chao2048"},"content":"            } catch (FormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The format of entering event is incorrect.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add event again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-05"},{"lineNumber":192,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":194,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":195,"author":{"gitId":"chao2048"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":196,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"chao2048"},"content":"                markTask(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":198,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":199,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":200,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-06"},{"lineNumber":201,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":202,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":203,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":204,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":206,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":207,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":208,"author":{"gitId":"chao2048"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":209,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"chao2048"},"content":"                unmarkTask(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":211,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":212,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":213,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-06"},{"lineNumber":214,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":216,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":217,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-06"},{"lineNumber":218,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":220,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":221,"author":{"gitId":"chao2048"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-13"},{"lineNumber":222,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":223,"author":{"gitId":"chao2048"},"content":"                deleteTask(commandArgs);","lastModifiedDate":"2023-02-13"},{"lineNumber":224,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":225,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":226,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to delete task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-13"},{"lineNumber":227,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":228,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":229,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-13"},{"lineNumber":230,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to delete task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-13"},{"lineNumber":231,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-13"},{"lineNumber":232,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":233,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-13"},{"lineNumber":234,"author":{"gitId":"chao2048"},"content":"        case \"help\":","lastModifiedDate":"2023-02-05"},{"lineNumber":235,"author":{"gitId":"chao2048"},"content":"            info();","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-05"},{"lineNumber":237,"author":{"gitId":"chao2048"},"content":"        default:","lastModifiedDate":"2023-02-05"},{"lineNumber":238,"author":{"gitId":"chao2048"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-05"},{"lineNumber":239,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":240,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":241,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":242,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":243,"author":{"gitId":"chao2048"},"content":"    private static String inputCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":244,"author":{"gitId":"chao2048"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-05"},{"lineNumber":245,"author":{"gitId":"chao2048"},"content":"        String s;","lastModifiedDate":"2023-02-05"},{"lineNumber":246,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":247,"author":{"gitId":"chao2048"},"content":"        while (s.trim().isEmpty() || s.trim().charAt(0) \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2023-02-05"},{"lineNumber":248,"author":{"gitId":"chao2048"},"content":"            s \u003d scan.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":249,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":250,"author":{"gitId":"chao2048"},"content":"        return s;","lastModifiedDate":"2023-02-05"},{"lineNumber":251,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":253,"author":{"gitId":"chao2048"},"content":"    private static void unmarkTask(String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":254,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":255,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-06"},{"lineNumber":256,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":257,"author":{"gitId":"chao2048"},"content":"        final int unmarkId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":258,"author":{"gitId":"chao2048"},"content":"        if (unmarkId \u003c 0 || unmarkId \u003e\u003d taskCount) {","lastModifiedDate":"2023-02-06"},{"lineNumber":259,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":260,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":261,"author":{"gitId":"chao2048"},"content":"        if (!tasks.get(unmarkId).isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":262,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"This task hasn\u0027t been marked as done yet ∪･ω･∪\");","lastModifiedDate":"2023-01-31"},{"lineNumber":263,"author":{"gitId":"chao2048"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":264,"author":{"gitId":"chao2048"},"content":"            tasks.get(unmarkId).markAsNotDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":265,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"I\u0027ve unmarked this task ∪･ω･∪:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":266,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(unmarkId));","lastModifiedDate":"2023-02-13"},{"lineNumber":267,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":268,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":269,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":270,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":271,"author":{"gitId":"chao2048"},"content":"    private static void markTask(String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException {","lastModifiedDate":"2023-02-06"},{"lineNumber":272,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":273,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-06"},{"lineNumber":274,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":275,"author":{"gitId":"chao2048"},"content":"        final int markId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":276,"author":{"gitId":"chao2048"},"content":"        if (markId \u003c 0 || markId \u003e\u003d taskCount) {","lastModifiedDate":"2023-02-06"},{"lineNumber":277,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-06"},{"lineNumber":278,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":279,"author":{"gitId":"chao2048"},"content":"        if (tasks.get(markId).isDone) {","lastModifiedDate":"2023-02-13"},{"lineNumber":280,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"This task has already been marked as done ੯•໒꒱❤︎\");","lastModifiedDate":"2023-01-31"},{"lineNumber":281,"author":{"gitId":"chao2048"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":282,"author":{"gitId":"chao2048"},"content":"            tasks.get(markId).markAsDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":283,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"I\u0027ve marked this task as done ੯•໒꒱❤︎:\");","lastModifiedDate":"2023-01-31"},{"lineNumber":284,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(markId));","lastModifiedDate":"2023-02-13"},{"lineNumber":285,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":286,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":287,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":288,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":289,"author":{"gitId":"chao2048"},"content":"    private static void addEvent(String commandArgs) throws NoDescriptionException, FormatException {","lastModifiedDate":"2023-02-05"},{"lineNumber":290,"author":{"gitId":"chao2048"},"content":"        final int indexOfFrom \u003d commandArgs.indexOf(\"from:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":291,"author":{"gitId":"chao2048"},"content":"        final int indexOfTo \u003d commandArgs.indexOf(\"to:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":292,"author":{"gitId":"chao2048"},"content":"        if (indexOfTo \u003d\u003d -1 || indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":293,"author":{"gitId":"chao2048"},"content":"            throw new FormatException();","lastModifiedDate":"2023-02-05"},{"lineNumber":294,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":295,"author":{"gitId":"chao2048"},"content":"        String eventDescription \u003d commandArgs.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-01-29"},{"lineNumber":296,"author":{"gitId":"chao2048"},"content":"        String from \u003d commandArgs.substring(indexOfFrom, indexOfTo).trim().replace(\"from:\", \"\").trim();","lastModifiedDate":"2023-02-13"},{"lineNumber":297,"author":{"gitId":"chao2048"},"content":"        String to \u003d commandArgs.substring(indexOfTo).trim().replace(\"to:\", \"\").trim();","lastModifiedDate":"2023-02-14"},{"lineNumber":298,"author":{"gitId":"chao2048"},"content":"        if (eventDescription.trim().length() \u003d\u003d 0 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-13"},{"lineNumber":299,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-05"},{"lineNumber":300,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":301,"author":{"gitId":"chao2048"},"content":"        addTask(new Event(eventDescription, from, to));","lastModifiedDate":"2023-01-29"},{"lineNumber":302,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":303,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":304,"author":{"gitId":"chao2048"},"content":"    private static void addDeadline(String commandArgs) throws NoDescriptionException, FormatException {","lastModifiedDate":"2023-02-05"},{"lineNumber":305,"author":{"gitId":"chao2048"},"content":"        final int indexOfDeadline \u003d commandArgs.indexOf(\"by:\");","lastModifiedDate":"2023-02-13"},{"lineNumber":306,"author":{"gitId":"chao2048"},"content":"        if (indexOfDeadline \u003d\u003d -1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":307,"author":{"gitId":"chao2048"},"content":"            throw new FormatException();","lastModifiedDate":"2023-02-05"},{"lineNumber":308,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":309,"author":{"gitId":"chao2048"},"content":"        String deadlineDescription \u003d commandArgs.substring(0, indexOfDeadline).trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":310,"author":{"gitId":"chao2048"},"content":"        if (deadlineDescription.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":311,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-05"},{"lineNumber":312,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":313,"author":{"gitId":"chao2048"},"content":"        String deadline \u003d commandArgs.substring(indexOfDeadline).trim().replace(\"by:\", \"\");","lastModifiedDate":"2023-02-14"},{"lineNumber":314,"author":{"gitId":"chao2048"},"content":"        if (deadline.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":315,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-05"},{"lineNumber":316,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":317,"author":{"gitId":"chao2048"},"content":"        addTask(new Deadline(deadlineDescription, deadline));","lastModifiedDate":"2023-01-31"},{"lineNumber":318,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":319,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":320,"author":{"gitId":"chao2048"},"content":"    private static void addTodo(String commandArgs) throws NoDescriptionException {","lastModifiedDate":"2023-02-05"},{"lineNumber":321,"author":{"gitId":"chao2048"},"content":"        if ((commandArgs.trim()).length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":322,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-05"},{"lineNumber":323,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":324,"author":{"gitId":"chao2048"},"content":"        addTask(new Todo(commandArgs));","lastModifiedDate":"2023-01-31"},{"lineNumber":325,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":326,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":327,"author":{"gitId":"chao2048"},"content":"    private static void printListOfTasks() {","lastModifiedDate":"2023-01-31"},{"lineNumber":328,"author":{"gitId":"chao2048"},"content":"        for (int i \u003d 0; i \u003c taskCount; i +\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":329,"author":{"gitId":"chao2048"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":330,"author":{"gitId":"chao2048"},"content":"            System.out.print(\". \");","lastModifiedDate":"2023-01-31"},{"lineNumber":331,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2023-02-13"},{"lineNumber":332,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":333,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":334,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":335,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":337,"author":{"gitId":"chao2048"},"content":"        greet();","lastModifiedDate":"2023-01-21"},{"lineNumber":338,"author":{"gitId":"chao2048"},"content":"        String s \u003d inputCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":339,"author":{"gitId":"chao2048"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":340,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":341,"author":{"gitId":"chao2048"},"content":"                process(s);","lastModifiedDate":"2023-02-05"},{"lineNumber":342,"author":{"gitId":"chao2048"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":343,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOF!! The command is not found, please type \u0027help\u0027 for more info\");","lastModifiedDate":"2023-02-05"},{"lineNumber":344,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":345,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":346,"author":{"gitId":"chao2048"},"content":"            s \u003d inputCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":347,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":348,"author":{"gitId":"chao2048"},"content":"        goodBye();","lastModifiedDate":"2023-02-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chao2048":346,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to + \") \";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":18}},{"path":"src/main/java/duke/FormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class FormatException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public FormatException(){}","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"chao2048":5}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public InvalidCommandException(){}","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"chao2048":5}},{"path":"src/main/java/duke/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class NoDescriptionException extends Exception{","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public NoDescriptionException() {","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"chao2048":6}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        String done \u003d \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        return \"[\" + done + \"] \" + description ;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"chao2048":25}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":19}}]
