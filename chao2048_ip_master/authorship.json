[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"[T][X] duke","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"[T][ ] hello","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"[D][ ] ne (by: nt) ","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"chao2048":3}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.FormatException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"public class Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    public static void execute(ArrayList\u003cTask\u003e tasks, String userInput) throws InvalidCommandException {","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        final String[] commandTypeAndParams \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        switch (commandType) {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        case \"list\":","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            printListOfTasks(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"                addTodo(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"                Ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add todo again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"                addDeadline(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"                Ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add deadline again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"            } catch (FormatException | ParseException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The format of entering deadline is incorrect.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add deadline again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"        case \"event\":","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"                addEvent(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"                Ui.showAddTaskMessage(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add event again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"            } catch (FormatException | ParseException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The format of entering event is incorrect.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to add event again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"                markTask(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"                unmarkTask(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to mark task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"chao2048"},"content":"                TaskList.deleteTask(tasks, commandArgs);","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"chao2048"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task must be stated.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to delete task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"chao2048"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOFS!!! The index of entering task is not valid.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"Please try to delete task again υ´• ﻌ •`υ\");","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"chao2048"},"content":"        case \"help\":","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"chao2048"},"content":"            Ui.showHelpMessage();","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"chao2048"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"chao2048"},"content":"        default:","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"chao2048"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"chao2048"},"content":"    public static void addTodo(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException {","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"chao2048"},"content":"        final String taskName \u003d commandArgs.trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"chao2048"},"content":"        if (taskName.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"chao2048"},"content":"        TaskList.addTask(tasks, new Todo(commandArgs));","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"chao2048"},"content":"    public static void addEvent(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException, FormatException, ParseException {","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"chao2048"},"content":"        final int indexOfFrom \u003d commandArgs.indexOf(\"from:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"chao2048"},"content":"        final int indexOfTo \u003d commandArgs.indexOf(\"to:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"chao2048"},"content":"        if (indexOfTo \u003d\u003d -1 || indexOfFrom \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"chao2048"},"content":"            throw new FormatException();","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"chao2048"},"content":"        String eventDescription \u003d commandArgs.substring(0, indexOfFrom).trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"chao2048"},"content":"        String from \u003d commandArgs.substring(indexOfFrom, indexOfTo).trim().replace(\"from:\", \"\").trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"chao2048"},"content":"        String to \u003d commandArgs.substring(indexOfTo).trim().replace(\"to:\", \"\").trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"chao2048"},"content":"        if (eventDescription.trim().length() \u003d\u003d 0 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"chao2048"},"content":"        Date formattedFrom \u003d Parser.parseDate(from);","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"chao2048"},"content":"        Date formattedTo \u003d Parser.parseDate(to);","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"chao2048"},"content":"        if (formattedTo.before(formattedFrom)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"chao2048"},"content":"            throw new FormatException();","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"chao2048"},"content":"        TaskList.addTask(tasks, new Event(eventDescription, formattedFrom, formattedTo));","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"chao2048"},"content":"    public static void addDeadline(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException, FormatException, ParseException {","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"chao2048"},"content":"        final int indexOfDeadline \u003d commandArgs.indexOf(\"by:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"chao2048"},"content":"        if (indexOfDeadline \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"chao2048"},"content":"            throw new FormatException();","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"chao2048"},"content":"        String deadlineDescription \u003d commandArgs.substring(0, indexOfDeadline).trim();","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"chao2048"},"content":"        String deadline \u003d commandArgs.substring(indexOfDeadline).replace(\"by:\", \"\").trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"chao2048"},"content":"        if (deadlineDescription.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":142,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":143,"author":{"gitId":"chao2048"},"content":"        if (deadline.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":145,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":146,"author":{"gitId":"chao2048"},"content":"        Date formattedDeadline \u003d Parser.parseDate(deadline);","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"chao2048"},"content":"        TaskList.addTask(tasks, new Deadline(deadlineDescription, formattedDeadline));","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"chao2048"},"content":"    public static void printListOfTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-24"},{"lineNumber":150,"author":{"gitId":"chao2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":151,"author":{"gitId":"chao2048"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":152,"author":{"gitId":"chao2048"},"content":"            System.out.print(\". \");","lastModifiedDate":"2023-02-24"},{"lineNumber":153,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2023-02-24"},{"lineNumber":154,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":156,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":157,"author":{"gitId":"chao2048"},"content":"    public static void find(ArrayList\u003cTask\u003e tasks, String keyword) {","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"chao2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"chao2048"},"content":"            if (tasks.get(i).description.contains(keyword)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"chao2048"},"content":"                System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"chao2048"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":167,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":169,"author":{"gitId":"chao2048"},"content":"        final int unmarkId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-02-24"},{"lineNumber":170,"author":{"gitId":"chao2048"},"content":"        if (unmarkId \u003c 0 || unmarkId \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":171,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-24"},{"lineNumber":172,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":173,"author":{"gitId":"chao2048"},"content":"        if (!tasks.get(unmarkId).isDone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":174,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"This task hasn\u0027t been marked as done yet ∪･ω･∪\");","lastModifiedDate":"2023-02-24"},{"lineNumber":175,"author":{"gitId":"chao2048"},"content":"        } else {","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"chao2048"},"content":"            tasks.get(unmarkId).markAsNotDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"I\u0027ve unmarked this task ∪･ω･∪:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(unmarkId));","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"chao2048"},"content":"    public static void markTask(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException {","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":184,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"chao2048"},"content":"        final int markId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"chao2048"},"content":"        if (markId \u003c 0 || markId \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":188,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-24"},{"lineNumber":189,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"chao2048"},"content":"        if (tasks.get(markId).isDone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":191,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"This task has already been marked as done ੯•໒꒱❤︎\");","lastModifiedDate":"2023-02-24"},{"lineNumber":192,"author":{"gitId":"chao2048"},"content":"        } else {","lastModifiedDate":"2023-02-24"},{"lineNumber":193,"author":{"gitId":"chao2048"},"content":"            tasks.get(markId).markAsDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"I\u0027ve marked this task as done ੯•໒꒱❤︎:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":195,"author":{"gitId":"chao2048"},"content":"            System.out.println(tasks.get(markId));","lastModifiedDate":"2023-02-24"},{"lineNumber":196,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":197,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":198,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":199,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":199}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    protected Date by;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    public Deadline(String description, Date by) {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"        final DateFormat dateFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateFormat.format(by) + \") \";","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"    public String toStorage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        final DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-mm-dd\");","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        return \"[D]\" + super.toStorage() + \" by: \" + dateFormat.format(by);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    static String FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    static ArrayList \u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    public static void addTask(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"     * Show a short user guide to user. Including the usage of different comments.","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"    public static void info() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"This command is not valid, please read through the info and try again :)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [todo] [something], and the system will add a new todo item to your list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [event] [something] from: [when] to: [when], and the system will add an event and the timing\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [deadline] [something] by: [when], and the system will add a deadline\");","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [mark] [number], and the system will mark the item of the number as done\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [unmark] [number], and the system will unmark the item of the number.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: bye, to say goodbye to Duke!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope it helps!! woof a nice day ੯•໒꒱❤︎\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"     * @param s The text entered by the user","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"     * @throws InvalidCommandException The exception will be thrown if the command doesn\u0027t any duke command.","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"    public static void process(String s) throws InvalidCommandException {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        command.execute(tasks, s);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"     * @return The string that the user entered","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"    private static String inputCommand() {","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        String s;","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"        while (s.trim().isEmpty() || s.trim().charAt(0) \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"            s \u003d scan.nextLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"        return s;","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"    private void start() {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"        Parser.setKnownPatterns();","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"        storage.initializeStorage(tasks, FILEPATH);","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"    public void run() {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"        start();","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"        String s \u003d ui.getUserCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"        while (!s.equals(\"bye\")) {","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"                process(s);","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"                System.out.println(\"WOOF!! The command is not found, please type \u0027help\u0027 for more info\");","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"                printLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"            s \u003d inputCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"        ui.showGoodByeMessage();","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"        storage.storeChanges(FILEPATH, tasks);","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chao2048":85,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    protected Date from;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    protected Date to;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    public Event(String description, Date from, Date to) {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        final DateFormat dateFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"                \" (from: \" + dateFormat.format(from) + \", to: \" + dateFormat.format(to) + \") \";","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"    public String toStorage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"        final DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-mm-dd\");","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        return \"[E]\" + super.toStorage() + \" from: \" + dateFormat.format(from)","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"                + \" to: \" + dateFormat.format(to);","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":29}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.text.DateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"public class Parser {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    static ArrayList\u003cSimpleDateFormat\u003e knownPatterns \u003d new ArrayList\u003cSimpleDateFormat\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    public static void setKnownPatterns() {","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        knownPatterns.add(new SimpleDateFormat(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        knownPatterns.add(new SimpleDateFormat(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        knownPatterns.add(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ssZ\"));","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        knownPatterns.add(new SimpleDateFormat(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"    public String[] parseCommand(String userInputCommand) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"        final String[] split \u003d userInputCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        final String[] commandTypeAndParams \u003d split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        return commandTypeAndParams;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"    public static Date parseDate(String userInputDate) throws ParseException {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        for (SimpleDateFormat pattern : knownPatterns) {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"                return new Date(pattern.parse(userInputDate).getTime());","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"                // only show message when every format doesn\u0027t fit","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"        Date time \u003d dateFormat.parse(userInputDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        return time;","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":38}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.FormatException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"import java.io.*;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"public class Storage {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"data.txt\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    private static Command command \u003d new Command();","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    public void initializeStorage(ArrayList\u003cTask\u003e tasks, String filepath) {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"            printFileContents(tasks, filepath);","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"No previous file, Duke will try to create a file to store your data.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"            try {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"                new File(filepath).createNewFile();","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"                throw new RuntimeException(\"Creation of file failed.\", ioe);","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"    private static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"        BufferedWriter outputWriter;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"        outputWriter \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"            outputWriter.write(tasks.get(i).toStorage() + System.lineSeparator());","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"        outputWriter.flush();","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        outputWriter.close();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"    public void storeChanges(String filepath, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"            writeToFile(filepath, tasks);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"    private static void printFileContents(ArrayList\u003cTask\u003e tasks, String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"These are the task from your file: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"            System.out.println(task);","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"            String type \u003d task.substring(1,2);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"            final int descriptionId \u003d task.lastIndexOf(\"]\");","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"            String taskDescription \u003d task.substring(descriptionId+1).trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"            final int doneId \u003d task.indexOf(\"[X]\");","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"            switch(type) {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"            case \"T\":","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"                    command.addTodo(tasks, taskDescription);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"                        tasks.get(tasks.size()-1).markAsDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"            case \"E\":","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"                    command.addEvent(tasks, taskDescription);","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"                        tasks.get(tasks.size()-1).markAsDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException | FormatException | ParseException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"            case \"D\":","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"                try {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"chao2048"},"content":"                    command.addDeadline(tasks, taskDescription);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"                    if (doneId !\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"                        tasks.get(tasks.size()-1).markAsDone();","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"                    }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"                } catch (NoDescriptionException | FormatException | ParseException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"                    System.out.println(\"WOOFS!!! Something went wrong\");","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"chao2048"},"content":"                    printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"chao2048"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":97}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        String done \u003d \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        return \"[\" + done + \"] \" + description ;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"    public String toStorage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        String done \u003d \" \";","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"            done \u003d \"X\";","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"        return \"[\" + done + \"] \" + description ;","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"chao2048":32}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import duke.exceptions.NoDescriptionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"public class TaskList {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    public static void addTask(ArrayList\u003cTask\u003e tasks, Task t) {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        tasks.add(t);","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, String commandArgs) throws NoDescriptionException, IndexOutOfBoundsException{","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        if (commandArgs.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        final int deleteId \u003d Integer.parseInt(commandArgs) - 1;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"        if (deleteId \u003c 0 || deleteId \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"I\u0027ve deleted this task ∪･ω･∪:\");","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"        System.out.println(tasks.get(deleteId));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"        tasks.remove(deleteId);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":29}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"    public String toStorage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        return \"[T]\" + super.toStorage();","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"chao2048":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"public class Ui {","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public static void showHelpMessage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"This command is not valid, please read through the info and try again :)\");","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [todo] [something], and the system will add a new todo item to your list\");","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [event] [something] from: [when] to: [when], and the system will add an event and the timing\");","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [deadline] [something] by: [when], and the system will add a deadline\");","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [mark] [number], and the system will mark the item of the number as done\");","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: [unmark] [number], and the system will unmark the item of the number.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Type: bye, to say goodbye to Duke!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope it helps!! woof a nice day ੯•໒꒱❤︎\");","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello! I\u0027m Duke  U ´ᴥ` U\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"    public static void showInitErrorMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"No previous file found, Duke will try to create a file to store your data.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"    public static void showGoodByeMessage() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Bye. Hope to see you again soon!ﾉ~\");","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"    public static String getUserCommand() {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"        String s;","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        while (s.trim().isEmpty() || s.trim().charAt(0) \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            s \u003d scan.nextLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        return s;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"    public static void showResult(ArrayList\u003cTask\u003e tasks, int taskCount) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(taskCount-1));","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in your list.\");","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"    public static void showAddTaskMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(tasks.size()-1));","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in your list. ^ ^\");","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":62}},{"path":"src/main/java/duke/exceptions/FormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class FormatException extends Exception{","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public FormatException(){}","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":5}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public InvalidCommandException(){}","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":5}},{"path":"src/main/java/duke/exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class NoDescriptionException extends Exception{","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"    public NoDescriptionException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"chao2048":6}}]
