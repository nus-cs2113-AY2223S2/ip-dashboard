[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"# User Guide - Coffee Bot ‚òï","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"## Introduction:","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"Hello! Welcome to the Coffee Bot User Guide! :) ","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"This Coffee Bot user guide is to help you to navigate Coffee Bot and to","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"understand its various functionalities to help you to keep track of your personal schedules.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"This is a project by author Wilson Lee Jun Wei üòâ","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"If there are any further queries, please feel free to reach out to Wilson @ wilsonleejunwei@u.nus.edu","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"## Getting Started:","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"To get started with Coffee Bot:","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"1. Install [Java 11](https://www.oracle.com/java/technologies/downloads/#java11) on your computer device.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"2. Install the latest release version for Coffee Bot [here](https://github.com/WilsonLee2000/ip/releases).","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"3. Click and drag the installed jar file into a newly created folder. ","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"4. Launch command prompt into the newly created folder in step 3.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"5. Run the command `java -jar {filename}.jar` in the command prompt.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"6. To exit Coffee Bot, simply key in the command `bye`.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"## Functions of Coffee Bot ","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":" Coffee Bot offers the following features for you to keep track of your daily tasks, events and deadlines:","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"### 1) ToDos: ","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"#### `todo {task}` - Add tasks without due deadlines to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `todo buy coffee powder`","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"### 2) Deadlines: ","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"#### `deadline {task} /by {deadline}` - Add tasks with a specific deadline to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `deadline pass Wilson his coffee /by Sunday`","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"### 3) Events:","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"#### `event {task} /from {start} /to {end}` - Add tasks that starts and ends at a specific date \u0026 time to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `event {coffee marathon} /from Sat 8am /to 12pm`","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"### 4) List of Tasks:","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"#### `list` - Display a list of tasks input by users","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `list`","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"### 5) Mark:","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"#### `mark {number}` - Mark tasks as completed in tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `mark 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"### 6) Unmark:","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"#### `unmark {number}` - Mark tasks as incomplete in tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `unmark 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"### 7) Delete:","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"#### `delete {number}` - Delete tasks from the tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `delete 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"### 8) Find:","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"#### `find {keyword}` - Find a task in tasks list through searching for a keyword","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `find coffee`","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"## Thank You for using Coffee Bot! ‚ò∫Ô∏è","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"-":13,"WilsonLee2000":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This class represents Coffee Bot that helps users to keep track of their personal schedules.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot takes in commands by users to keep track of Todos, Deadlines and events tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"    public static void main(String[] arguments) {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"        TaskList listItems \u003d new TaskList();","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"        Parser parserCommands \u003d new Parser(listItems);","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"        Storage storageItems \u003d new Storage(listItems);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"        listItems.getTasksFromStorage(storageItems);","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"        Ui userInterface \u003d new Ui();","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        userInterface.print(Ui.COFFEE_GREETING);","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        while (true) {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"            Scanner command \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"            String inputCommand \u003d command.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"            if (inputCommand.contains(\"bye\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"I look forward to seeing you again! Goodbye!\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"            String commandMessage \u003d parserCommands.parseInput(inputCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"            userInterface.print(commandMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"            storageItems.writeTasksToFile();","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"-":2,"WilsonLee2000":25}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.deadlineMissingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.deleteMissingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.todoMissingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.wrongCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.eventMissingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.findMissingException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Deadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Event;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Task;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.ToDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":" * This class represents Coffee Bot that accepts users\u0027 input commands and process the input commands","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":" * for further actions required by Coffee Bot","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"public class Parser {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    private TaskList listItems;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"    Parser(TaskList listTasks) {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        this.listItems \u003d listTasks;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    String parseInput(String inputCommand) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        StringBuilder outputMessage \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        String[] firstWordArray;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        firstWordArray \u003d inputCommand.split(\" \", 2);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        String firstWord \u003d firstWordArray[0];","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        String[] tokens;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        case \"todo\": // e.g. todo borrow book","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"                if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new todoMissingException();","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"                ToDo todoWord \u003d new ToDo(firstWordArray[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.addTask(todoWord);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"  \" + todoWord + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (todoMissingException exception) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"        case \"delete\":","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"                if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new deleteMissingException();","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"                Task task \u003d listItems.deleteTask(Integer.parseInt(firstWordArray[1]) - 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(task + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (deleteMissingException deleteException){","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"             }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"        case \"find\":","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"                if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new findMissingException();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(this.listItems.findTasks(firstWordArray[1]));","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (findMissingException findException) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!!! The description of a find cannot be empty.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"        case \"deadline\":","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"                if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new deadlineMissingException();","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"WilsonLee2000"},"content":"                String[] getWeekday;","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"WilsonLee2000"},"content":"                getWeekday \u003d firstWordArray[1].split(\"/by\", 2);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"                Deadline deadlineWord \u003d new Deadline(getWeekday[0], getWeekday[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.addTask(deadlineWord);","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"  \" + deadlineWord + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (deadlineMissingException deadlineException) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"        case \"event\":","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"                if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new eventMissingException();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"                String[] getEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"                String[] eventFrom;","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"                String[] eventTo;","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"WilsonLee2000"},"content":"                getEvent \u003d firstWordArray[1].split(\"/\", 3);","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"WilsonLee2000"},"content":"                eventFrom \u003d getEvent[1].split(\" \", 2);","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"WilsonLee2000"},"content":"                eventTo \u003d getEvent[2].split(\" \", 2);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"WilsonLee2000"},"content":"                Event eventDetails \u003d new Event(getEvent[0], eventFrom[1], eventTo[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.addTask(eventDetails);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"  \" + eventDetails + \"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"WilsonLee2000"},"content":"                outputMessage.append(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (eventMissingException eventException) {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"WilsonLee2000"},"content":"        case \"mark\":","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"WilsonLee2000"},"content":"            tokens \u003d inputCommand.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"WilsonLee2000"},"content":"            index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"WilsonLee2000"},"content":"            listItems.getTask(index - 1).markAsDone();","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"WilsonLee2000"},"content":"            outputMessage.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"            outputMessage.append(\" \" + listItems.getTask(index - 1));","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"WilsonLee2000"},"content":"        case \"unmark\":","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"WilsonLee2000"},"content":"            tokens \u003d inputCommand.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"WilsonLee2000"},"content":"            index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"WilsonLee2000"},"content":"            listItems.getTask(index - 1).markAsNotDone();","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"WilsonLee2000"},"content":"            outputMessage.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"WilsonLee2000"},"content":"            outputMessage.append(\" \" + listItems.getTask(index - 1));","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"WilsonLee2000"},"content":"        case \"list\":","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"WilsonLee2000"},"content":"            outputMessage.append(this.listItems.listTasks());","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"WilsonLee2000"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"WilsonLee2000"},"content":"        default:","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"WilsonLee2000"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"WilsonLee2000"},"content":"                throw new wrongCommandException();","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"WilsonLee2000"},"content":"            } catch (wrongCommandException exception) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.print(\"OH NO!!! My deepest apologies, but I don\u0027t understand what that means :(\");","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"WilsonLee2000"},"content":"        return outputMessage.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WilsonLee2000":131}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//Solution below adapted from Student Oh Yi Xiu Wilson (for Storage.java)","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Deadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Event;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Task;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.ToDo;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"public class Storage {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    private Path taskPath;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    private TaskList listTasks;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    public Storage(TaskList listTasksArgs) {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        this.listTasks \u003d listTasksArgs;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        String configHomeString;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        String operatingSystem \u003d System.getProperty(\"os.name\").toLowerCase();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        if (operatingSystem.contains(\"win\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"            // this is for windows","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"            configHomeString \u003d System.getenv(\"LOCALAPPDATA\");","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"            // this is for MACOS","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"            configHomeString \u003d System.getenv(\"HOME\") + \"/.config\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        Path coffeeHome \u003d Path.of(configHomeString).resolve(\"coffee\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"            if (Files.notExists(coffeeHome)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"                Files.createDirectory(coffeeHome);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"            Path tasksHome \u003d coffeeHome.resolve(\"coffeeTasks.txt\");","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"            if (Files.notExists(tasksHome)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"                Files.createFile(tasksHome);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"            this.taskPath \u003d tasksHome;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"            ioException.printStackTrace();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"    public void writeTasksToFile() {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"        StringBuilder buildString \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"        for (Task task : this.listTasks.getTasks()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"            buildString.append(task.getInfo() + \"\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"            Files.writeString(this.taskPath, buildString.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException ioExceptions) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"            ioExceptions.printStackTrace();","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"    public ArrayList\u003cTask\u003e getTasksFromFile() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cTask\u003e retrieveTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"            List\u003cString\u003e tasksLists \u003d Files.readAllLines(this.taskPath);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"            for (String taskString : tasksLists) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"                if (taskString.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"                    continue;","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"                Task toAddItem \u003d new ToDo(\"\"); // mark task as done if needed","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"                String[] tokensStringArray \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"                switch (tokensStringArray[0]) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Todo\":","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new ToDo(tokensStringArray[2]);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"                    break;","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new Deadline(tokensStringArray[2], tokensStringArray[3]);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"WilsonLee2000"},"content":"                    break;","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Event\":","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new Event(tokensStringArray[2], tokensStringArray[3], tokensStringArray[4]);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"                default:","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"                if (tokensStringArray[1].equals(\"1\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem.markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"                retrieveTask.add(toAddItem);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException exceptions) {","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"            exceptions.printStackTrace();","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"        return retrieveTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"//End of adapted solution from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"WilsonLee2000":92}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * This class represents CoffeeBot performing actions in relation to the tasks","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" * in the tasks list, based on users\u0027 inputs.","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"public class TaskList {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    private static ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"        this.taskArrayList.add(task);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        return this.taskArrayList.remove(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    public String findTasks(String wordFind) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"            StringBuilder builtString \u003d new StringBuilder(\"Here are the matching task(s) in your list:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            for (int i \u003d 0; i \u003c this.taskArrayList.size(); i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"                if (this.taskArrayList.get(i).getDescription().contains(wordFind)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"                    builtString.append(i + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"                    builtString.append(\". \");","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"                    builtString.append(this.taskArrayList.get(i));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"                    builtString.append(\"\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            return builtString.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    public String listTasks() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"        StringBuilder builtString \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"        for (int i \u003d 0; i \u003c this.taskArrayList.size(); i \u003d i + 1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"            Task item \u003d this.taskArrayList.get(i);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"            builtString.append((i + 1) + \". \" + item + \u0027\\n\u0027);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        return builtString.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"    public int size() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"        return this.taskArrayList.size();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"        return this.taskArrayList.get(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"    public void getTasksFromStorage(Storage storage) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"        this.taskArrayList.addAll(storage.getTasksFromFile());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"        return this.taskArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WilsonLee2000":60}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":" * This class represents Coffee Bot that greets and interact with users upon","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":" * starting up the coffee bot.","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"public class Ui {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"    public static String COFFEE_GREETING \u003d (\"Hi there! My name is Coffee!\" + \" How can I help you today? :)\");","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"    public void print(String greeting) {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WilsonLee2000":11}},{"path":"src/main/java/allexceptions/deadlineMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This deadlineMissingException class represents the checking of","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete deadline command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class deadlineMissingException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/deleteMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This deleteMissingException class represents the checking of","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete delete command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class deleteMissingException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/eventMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This eventMissingException class represents the checking of","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete event command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class eventMissingException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/findMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This findMissingException class represents the checking of","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete find command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class findMissingException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/todoMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This todoMissingException class represents the checking of","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete todo command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"*/","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class todoMissingException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/wrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This wrongCommandException class represents the checking of","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * wrong command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class wrongCommandException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/alltasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Deadline class represents tasks with a specific deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the deadline tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"    private String byDeadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Deadline instance from the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptor description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     * @param byDeadline deadline indicated in the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    public Deadline(String descriptor, String byDeadline) {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptor);","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        this.byDeadline \u003d byDeadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"    //Solution below adapted from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s|%s\", \"Deadline\", this.isDone ? 1 : 0, this.description, this.byDeadline);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    //End of adapted solution from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item,","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"     * the description of the input command, and the deadline of the task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \"(by:\" + this.byDeadline + \")\";","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":39}},{"path":"src/main/java/alltasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Event class represents tasks that starts and ends at a specific date and time.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the event tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"    private String fromStart;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    private String toEnd;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates an Event instance from the input command.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptive description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     * @param fromStart start of an event indicated in the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"     * @param toEnd end of an event indicated in the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    public Event(String descriptive, String fromStart, String toEnd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptive);","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        this.toEnd \u003d toEnd;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        this.fromStart \u003d fromStart;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"     * and the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"     * @return fromStart start of an event indicated in the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"     * @return toEnd end of an event indicated in the input command.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \"(from: \" + this.fromStart + \"to: \" + this.toEnd + \")\" ;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"    //Solution below adapted from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s|%s|%s\", \"Event\", this.isDone ? 1 : 0, this.description, this.fromStart, this.toEnd);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"    //End of adapted solution from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":45}},{"path":"src/main/java/alltasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Task class represents all tasks input by users such as","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * todo, deadline and event tasks in a list.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of these tasks in a list.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    protected String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Task instance from the input command given.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     * @param description description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns letter \"X\" or \" \" to indicate if a task is done or not done.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"     * @return X If isDone is true, return \" \" If isDone is false.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the task into the format of type|mark/unmark|description","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"     * @return The converted task into the format as a String","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"        return \"\";","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"        return description;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"     * Sets this.isDone to true to indicate that a task is marked done.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"     * Sets this.isDone to false to indicate that a task is marked not done.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"WilsonLee2000":67}},{"path":"src/main/java/alltasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Todo class represents tasks without due deadlines that are added by users to Coffee Bot.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the todo tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Todo instance from the input command.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptive description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    public ToDo(String descriptive) {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptive);","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"     * and the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    //Solution below adapted from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s\", \"Todo\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    //End of adapted solution from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":35}}]
