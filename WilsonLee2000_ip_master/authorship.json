[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"# User Guide - Coffee Bot ‚òï","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"## Introduction:","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"Hello! Welcome to the Coffee Bot User Guide! :) ","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"This Coffee Bot user guide is to help you to navigate Coffee Bot and to","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"understand its various functionalities to help you to keep track of your personal schedules.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"This is a project by author Wilson Lee Jun Wei üòâ","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"If there are any further queries, please feel free to reach out to Wilson @ wilsonleejunwei@u.nus.edu","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"## Getting Started:","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"To get started with Coffee Bot:","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"1. Install [Java 11](https://www.oracle.com/java/technologies/downloads/#java11) on your computer device.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"2. Install the latest release version for Coffee Bot [here](https://github.com/WilsonLee2000/ip/releases).","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"3. Click and drag the installed jar file into a newly created folder. ","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"4. Launch command prompt into the newly created folder in step 3.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"5. Run the command `java -jar {filename}.jar` in the command prompt.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"6. To exit Coffee Bot, simply key in the command `bye`.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"## Functions of Coffee Bot ","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":" Coffee Bot offers the following features for you to keep track of your daily tasks, events and deadlines:","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"### 1) ToDos: ","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"#### `todo {task}` - Add tasks without due deadlines to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `todo buy coffee powder`","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"### 2) Deadlines: ","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"#### `deadline {task} /by {deadline}` - Add tasks with a specific deadline to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `deadline pass Wilson his coffee /by Sunday`","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"### 3) Events:","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"#### `event {task} /from {start} /to {end}` - Add tasks that starts and ends at a specific date \u0026 time to tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `event {coffee marathon} /from Sat 8am /to 12pm`","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"### 4) List of Tasks:","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"#### `list` - Display a list of tasks input by users","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `list`","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"### 5) Mark:","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"#### `mark {number}` - Mark tasks as completed in tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `mark 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"### 6) Unmark:","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"#### `unmark {number}` - Mark tasks as incomplete in tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `unmark 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"### 7) Delete:","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"#### `delete {number}` - Delete tasks from the tasks list","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `delete 1`","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"### 8) Find:","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"#### `find {keyword}` - Find a task in tasks list through searching for a keyword","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"###### e.g. `find coffee`","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"## Thank You for using Coffee Bot! ‚ò∫Ô∏è","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"-":13,"WilsonLee2000":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.todoMissingException;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"import allexceptions.wrongCommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Event;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.ToDo;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import alltasks.Storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":" * This class represents Coffee Bot that helps users to keep track of their personal schedules.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot takes in commands by users to keep track of Todos, Deadlines and events tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    public static void main(String[] arguments) {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cTask\u003e listItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"Hi there! My name is Coffee\");","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        System.out.println(\"How can I help you today? :)\");","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        Task[] taskArray;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"        taskArray \u003d new Task[110];","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        boolean isRun \u003d true;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"        //Solution below adapted and reused from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"        // with modifications made by Wilson Lee Jun Wei","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        Storage storage \u003d new Storage(listItems);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        listItems.addAll(storage.get_Tasks_From_File());","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        //@@ Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"        while (isRun) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"            Scanner command \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"            String inputCommand \u003d command.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            String[] firstWordArray;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"            firstWordArray \u003d inputCommand.split(\" \", 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"            String firstWord \u003d firstWordArray[0];","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"            String[] tokens;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"            switch (firstWord) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"            case \"todo\": // e.g. todo borrow book","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"                try {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"                    if (firstWordArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"                        throw new todoMissingException();","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"                    ToDo todoWord \u003d new ToDo(firstWordArray[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"                    listItems.add(counter, todoWord);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"                    counter \u003d counter + 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"                    System.out.println(\"  \" + todoWord);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"                    System.out.println(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"                    } catch (todoMissingException exception){","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"                     System.out.println(\"OH NO!!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"            case \"delete\":","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"                Task task \u003d listItems.remove(Integer.parseInt(firstWordArray[1]) - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(task);","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Now you have \" + listItems.size() + \" tasks in the list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"            case \"find\":","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Here are the matching keywords in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"                for (int i \u003d 0; i \u003c listItems.size(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"                    if (listItems.get(i).getDescription().contains(firstWordArray[1])) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"                        System.out.print(i + 1);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"                        System.out.print(\". \");","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"                        System.out.println(listItems.get(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"                    }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"                String[] getWeekday;","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"                getWeekday \u003d firstWordArray[1].split(\"/by\", 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"WilsonLee2000"},"content":"                Deadline deadlineWord \u003d new Deadline(getWeekday[0], getWeekday[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.add(counter, deadlineWord);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"WilsonLee2000"},"content":"                counter \u003d counter + 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"  \" + deadlineWord + \" (by:\" + getWeekday[1] + \")\");","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.add(counter, new Task(inputCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"            case \"event\":","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"                String[] getMeeting;","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"                getMeeting \u003d firstWordArray[1].split(\"/\", 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"                String[] meetingFrom;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"                String[] meetingTo;","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"                meetingFrom \u003d getMeeting[1].split(\" \", 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"                meetingTo \u003d getMeeting[2].split(\" \", 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"                Event meetingType \u003d new Event(getMeeting[0], meetingFrom[1], meetingTo[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.add(counter, meetingType);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"                counter \u003d counter + 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"  \" + meetingType);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.add(counter, new Task(inputCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"WilsonLee2000"},"content":"            case \"mark\":","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"WilsonLee2000"},"content":"                tokens \u003d inputCommand.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"WilsonLee2000"},"content":"                index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.get(index - 1).markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\" \" + listItems.get(index - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":103,"author":{"gitId":"WilsonLee2000"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-10"},{"lineNumber":104,"author":{"gitId":"WilsonLee2000"},"content":"                tokens \u003d inputCommand.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"WilsonLee2000"},"content":"                index \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"WilsonLee2000"},"content":"                listItems.get(index - 1).markAsNotDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\" \" + listItems.get(index - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"WilsonLee2000"},"content":"            case \"list\":","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"WilsonLee2000"},"content":"                for (int i \u003d 0; i \u003c listItems.size(); i \u003d i + 1) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"WilsonLee2000"},"content":"                    Task item \u003d listItems.get(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"WilsonLee2000"},"content":"                    System.out.println((i + 1) + \". \" + item);","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"WilsonLee2000"},"content":"                break;","lastModifiedDate":"2023-02-10"},{"lineNumber":117,"author":{"gitId":"WilsonLee2000"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"WilsonLee2000"},"content":"                System.out.println(\"I look forward to seeing you again! Goodbye!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"WilsonLee2000"},"content":"                isRun \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"WilsonLee2000"},"content":"                return;","lastModifiedDate":"2023-02-10"},{"lineNumber":121,"author":{"gitId":"WilsonLee2000"},"content":"            default:","lastModifiedDate":"2023-02-10"},{"lineNumber":122,"author":{"gitId":"WilsonLee2000"},"content":"                try {","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"WilsonLee2000"},"content":"                    throw new wrongCommandException();","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"WilsonLee2000"},"content":"                } catch (wrongCommandException exception) {","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"WilsonLee2000"},"content":"                    System.out.println(\"OH NO!!! My deepest apologies, but I don\u0027t understand what that means :(\");","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"WilsonLee2000"},"content":"            //Solution below adapted and reused from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"WilsonLee2000"},"content":"            // with modifications made by Wilson Lee Jun Wei","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"WilsonLee2000"},"content":"            storage.writeTasksToFile();","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"WilsonLee2000"},"content":"            //@@ Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"WilsonLee2000":131}},{"path":"src/main/java/allexceptions/todoMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This todoMissingException class represents the checking of","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * an incomplete command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"*/","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class todoMissingException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/allexceptions/wrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package allexceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This wrongCommandException class represents the checking of","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * wrong command input by users, that are not recognisable to Coffee Bot.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class wrongCommandException extends Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"WilsonLee2000":8}},{"path":"src/main/java/alltasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Deadline class represents tasks with a specific deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the deadline tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    private String by;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Deadline class from the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptor description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     * @param by deadline indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    public Deadline(String descriptor, String by) {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptor);","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"     * @return","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s|%s\", \"Deadline\", this.isDone, this.description, this.by);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item,","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"     * the description of the input command, and the deadline of the task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"     * @return by deadline indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + description + \" by: \" + this.by;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":44}},{"path":"src/main/java/alltasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Event class represents tasks that starts and ends at a specific date and time.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the event tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class Event extends Task{","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    private String from;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    private String to;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates an Event class from the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptive description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"     * @param from start of an event indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"     * @param to end of an event indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"    public Event(String descriptive, String from, String to) {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptive);","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"     * and the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"     * @return from start of an event indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"     * @return to end of an event indicated in the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + description + \"(from: \" + this.from + \", to: \" + this.to + \")\" ;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"     * @return","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s|%s|%s\", \"Event\", this.isDone, this.description, this.from, this.to);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":47}},{"path":"src/main/java/alltasks/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"//Solution below adapted and reused from Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"// with modifications made by Wilson Lee Jun Wei","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"public class Storage {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"    private ArrayList\u003cTask\u003e listTasks;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    private Path taskPath;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    public Storage(ArrayList\u003cTask\u003e listTasksArgs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"        this.listTasks \u003d listTasksArgs;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        String configHomeString;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        // Get the \"XDG_CONFIG_HOME\" based on the OS of user, based on windows or macs","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"        String os \u003d System.getProperty(\"os.name\").toLowerCase();","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"        if (os.contains(\"win\")) {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"            // this is for windows","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"            configHomeString \u003d System.getenv(\"LOCALAPPDATA\");","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"            // this is for MACOS","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"            configHomeString \u003d System.getenv(\"HOME\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        Path coffeeHome \u003d Path.of(configHomeString).resolve(\"coffee\");","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"            if (Files.notExists(coffeeHome)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"                Files.createDirectory(coffeeHome);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"            Path tasksHome \u003d coffeeHome.resolve(\"coffeeTasks.txt\");","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"            if (Files.notExists(tasksHome)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"                Files.createFile(tasksHome);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"            this.taskPath \u003d tasksHome;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"            ioException.printStackTrace();","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"    public void writeTasksToFile() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"        StringBuilder buildString \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"        for (Task task : this.listTasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"            buildString.append(task.getInfo() + \"\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"            Files.writeString(this.taskPath, buildString.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException ioExceptions) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"            ioExceptions.printStackTrace();","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"    public ArrayList\u003cTask\u003e get_Tasks_From_File() {","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"        ArrayList\u003cTask\u003e retrieveTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"            List\u003cString\u003e tasksLists \u003d Files.readAllLines(this.taskPath);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"            for (String taskString : tasksLists) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"                if (taskString.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"                    continue;","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"                Task toAddItem \u003d new ToDo(\"\"); // mark task as done if needed","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"                String[] tokens \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"                switch (tokens[0]) {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Todo\":","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new ToDo(tokens[2]);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"                    break;","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Deadline\":","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new Deadline(tokens[2], tokens[3]);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"WilsonLee2000"},"content":"                    break;","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"WilsonLee2000"},"content":"                case \"Event\":","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem \u003d new Event(tokens[2], tokens[3], tokens[4]);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"WilsonLee2000"},"content":"                default:","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"WilsonLee2000"},"content":"                if (tokens[1].equals(\"true\")) {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"WilsonLee2000"},"content":"                    toAddItem.markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"WilsonLee2000"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"WilsonLee2000"},"content":"                retrieveTask.add(toAddItem);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"WilsonLee2000"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"WilsonLee2000"},"content":"        } catch (IOException exceptions) {","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"WilsonLee2000"},"content":"            exceptions.printStackTrace();","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"WilsonLee2000"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"WilsonLee2000"},"content":"        return retrieveTask;","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"WilsonLee2000"},"content":"//@@ Student Oh Yi Xiu Wilson","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"WilsonLee2000":92}},{"path":"src/main/java/alltasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Task class represents all tasks input by users such as","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * todo, deadline and event tasks in a list.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of these tasks in a list.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    protected String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Task class from the input command given.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"     * @param description description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns letter \"X\" or \" \" to indicate if a task is done or not done.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"     * @return X If isDone is true, return \" \" If isDone is false.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"        return \"\";","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"WilsonLee2000"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"WilsonLee2000"},"content":"        return description;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"WilsonLee2000"},"content":"     * Sets this.isDone to true to indicate that a task is marked done.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"WilsonLee2000"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"WilsonLee2000"},"content":"     * Sets this.isDone to false to indicate that a task is marked not done.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"WilsonLee2000"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"WilsonLee2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"WilsonLee2000"},"content":"     * and the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"WilsonLee2000":69}},{"path":"src/main/java/alltasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonLee2000"},"content":"package alltasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"WilsonLee2000"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"WilsonLee2000"},"content":" * This Todo class represents tasks without due deadlines that are added by users to Coffee Bot.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"WilsonLee2000"},"content":" * Coffee Bot keeps track of the todo tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"WilsonLee2000"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"WilsonLee2000"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"WilsonLee2000"},"content":"     * Creates a Todo class from the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"WilsonLee2000"},"content":"     * @param descriptive description of input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"WilsonLee2000"},"content":"    public ToDo(String descriptive) {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"WilsonLee2000"},"content":"        super(descriptive);","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"WilsonLee2000"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns the status of completion of the task item","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"WilsonLee2000"},"content":"     * and the description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"WilsonLee2000"},"content":"     * @return getStatusIcon() status of completion of task item.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"WilsonLee2000"},"content":"     * @return description description of the input command.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"WilsonLee2000"},"content":"    public String toString() {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"WilsonLee2000"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"WilsonLee2000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"WilsonLee2000"},"content":"     * Returns","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"WilsonLee2000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"WilsonLee2000"},"content":"     * @return","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"WilsonLee2000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"WilsonLee2000"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"WilsonLee2000"},"content":"    public String getInfo() {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"WilsonLee2000"},"content":"        return String.format(\"%s|%s|%s\", \"Todo\", this.isDone, this.description);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"WilsonLee2000"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"WilsonLee2000"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"WilsonLee2000":38}}]
