[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.exception.CommandNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.exception.IllegalFormatException;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static ArrayList\u003cTask\u003etasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents a boolean that will switch to false upon the \"bye\" command.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"     * The loop for command input will continue so long as it is not terminated by this boolean function.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static boolean proceedToNextCommand \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void printDivider() {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"SebastianSoewanto"},"content":"        String DIVIDER \u003d \"____________________________________________________\";","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"SebastianSoewanto"},"content":"     * This function will determine the command that was given by the user input and execute the","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"SebastianSoewanto"},"content":"     * commands accordingly to its specified usage.","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by user in the CLI.","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws CommandNotFoundException if command is not found as specified.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void executeCommand(String input) throws CommandNotFoundException {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"SebastianSoewanto"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"SebastianSoewanto"},"content":"            printExit();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"SebastianSoewanto"},"content":"            proceedToNextCommand \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"SebastianSoewanto"},"content":"            System.exit(0);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"SebastianSoewanto"},"content":"                markTask(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task to be marked is not a number.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task number to be marked is not within the list\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"SebastianSoewanto"},"content":"                unmarkTask(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task to be unmarked is not a number.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task number to be unmarked is not within the list\");","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"SebastianSoewanto"},"content":"            printList();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"SebastianSoewanto"},"content":"                createTodo(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"SebastianSoewanto"},"content":"                createDeadline(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Incomplete description or date of the deadline\\n\" + \"Please input in the following format: deadline \u003cdescription\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"SebastianSoewanto"},"content":"                createEvent(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IllegalFormatException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"The /from cannot go after /to\\n\" + \"Please input in the following format: event \u003cdescription\u003e /from \u003cwhen\u003e /to \u003cwhen\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException | InvalidInputException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Incomplete description or date of the event\\n\" + \"Please input in the following format: event \u003cdescription\u003e /from \u003cwhen\u003e /to \u003cwhen\u003e\");","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"SebastianSoewanto"},"content":"                deleteTask(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task to be deleted is not a number.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"Task number to be deleted is not within the list\");","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"SebastianSoewanto"},"content":"                findTask(input);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (IllegalFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"The keyword of the task cannot be empty.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"No such task found in the list.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"SebastianSoewanto"},"content":"            printDivider();","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"SebastianSoewanto"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will print the exit message.","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void printExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will mark the task as done as according to the task class.","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"SebastianSoewanto"},"content":"     * Task to be marked has to be given by the user in an integer that is within the size of the list of tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void markTask(String input)  {","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"SebastianSoewanto"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(4).trim()) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.get(taskNumber).markDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will mark the task as not done according to the task class.","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"SebastianSoewanto"},"content":"     * Task to be unmarked has to be given by the user in an integer that is within the size of the list of tasks","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void unmarkTask(String input)  {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"SebastianSoewanto"},"content":"        int taskNumber \u003d Integer.parseInt(input.substring(6).trim()) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.get(taskNumber).umarkDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will print the tasks within the list.","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void printList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"SebastianSoewanto"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"SebastianSoewanto"},"content":"        for (Task output : tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"SebastianSoewanto"},"content":"            System.out.println(count + \".\" + output);","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"SebastianSoewanto"},"content":"            count++;","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will create as new to do as according to the task class.","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform users that the task has been successfully added.","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void createTodo(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.add(new Todo(input.substring(4).trim()));","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Got it. I\u0027ve added this tasks:\\n\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will create the task of type deadline.","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"SebastianSoewanto"},"content":"     * It requires the user to input both the description and date of the deadline.","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform users that the deadline task has been successfully added.","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws InvalidInputException if either the deadline date or description is not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void createDeadline(String input) throws InvalidInputException {","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"SebastianSoewanto"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"SebastianSoewanto"},"content":"        String description \u003d input.substring(8, byIndex).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"SebastianSoewanto"},"content":"        String date \u003d input.substring(byIndex + 3).trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"SebastianSoewanto"},"content":"        if (description.length() \u003c 1 | date.length() \u003c 1) {","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":183,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.add(new Deadline(description, date));","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Got it. I\u0027ve added this tasks:\\n\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will create the task of type event.","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"SebastianSoewanto"},"content":"     * It requires the user to input the description, event start date and event end date.","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform users that the event task has been successfully added.","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws IllegalFormatException if the order of from has been placed after the to","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws InvalidInputException if either the expected description or event start or event end date is not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void createEvent(String input) throws IllegalFormatException, InvalidInputException {","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"SebastianSoewanto"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"SebastianSoewanto"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"SebastianSoewanto"},"content":"        String description \u003d input.substring(5, fromIndex).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"SebastianSoewanto"},"content":"        String eventStart \u003d input.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":202,"author":{"gitId":"SebastianSoewanto"},"content":"        String eventEnd \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"SebastianSoewanto"},"content":"        if (description.length() \u003c 1 | eventStart.length() \u003c 1 | eventEnd.length() \u003c 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"SebastianSoewanto"},"content":"        } else if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.add(new Event(description, eventStart, eventEnd));","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Got it. I\u0027ve added this tasks:\\n\" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":213,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will remove the task as specified within the list.","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"SebastianSoewanto"},"content":"     * It requires the user to input the task number that is within the size of the list of task.","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform users that the task has been successfully removed.","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void deleteTask(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"SebastianSoewanto"},"content":"        int deleteIndex \u003d Integer.parseInt(input.substring(6).trim());","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasks.get(deleteIndex - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"SebastianSoewanto"},"content":"        tasks.remove(tasks.get(deleteIndex - 1));","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will help the user search the task that contains the specific keyword","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will print out the filtered list of task that only contains that specific keyword.","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param input Input string that is provided by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws IllegalFormatException if the task that has to been searched has not been specified by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws InvalidInputException if there is not task left within the list.","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"SebastianSoewanto"},"content":"    protected static void findTask(String input) throws IllegalFormatException, InvalidInputException{","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"SebastianSoewanto"},"content":"        String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"SebastianSoewanto"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"SebastianSoewanto"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"SebastianSoewanto"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"SebastianSoewanto"},"content":"            if (task.findMatch(keyword)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(count + \".\" + task);","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"SebastianSoewanto"},"content":"                count++;","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"SebastianSoewanto"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"SebastianSoewanto"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":254,"author":{"gitId":"SebastianSoewanto"},"content":"        String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":260,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":262,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":263,"author":{"gitId":"SebastianSoewanto"},"content":"        printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":264,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":265,"author":{"gitId":"SebastianSoewanto"},"content":"        while(proceedToNextCommand) {","lastModifiedDate":"2023-02-16"},{"lineNumber":266,"author":{"gitId":"SebastianSoewanto"},"content":"            Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":267,"author":{"gitId":"SebastianSoewanto"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":268,"author":{"gitId":"SebastianSoewanto"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"SebastianSoewanto"},"content":"                executeCommand(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":270,"author":{"gitId":"SebastianSoewanto"},"content":"            } catch (CommandNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":271,"author":{"gitId":"SebastianSoewanto"},"content":"                printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":272,"author":{"gitId":"SebastianSoewanto"},"content":"                System.out.println(\"I\u0027m sorry, but I don\u0027t know what that means \u003d(\");","lastModifiedDate":"2023-02-16"},{"lineNumber":273,"author":{"gitId":"SebastianSoewanto"},"content":"                printDivider();","lastModifiedDate":"2023-02-16"},{"lineNumber":274,"author":{"gitId":"SebastianSoewanto"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":275,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SebastianSoewanto":269,"-":8}},{"path":"src/main/java/duke/exception/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class CommandNotFoundException extends DukeException{","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"SebastianSoewanto":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"SebastianSoewanto":4}},{"path":"src/main/java/duke/exception/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class IllegalFormatException extends DukeException{","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"SebastianSoewanto":4}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class InvalidInputException extends DukeException{","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"SebastianSoewanto":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.task;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"     * Printing the Task that includes whether it is done","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns a string that describes the object","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"SebastianSoewanto":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.task;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String from;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String to;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"SebastianSoewanto":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.task;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will create a Task object according to the user input","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"     * and mark the task as not done initially when being created.","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param description Description of the command that was given by the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will mark the task as done.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform the user that the task has been successfully marked as done.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"SebastianSoewanto"},"content":"    public void markDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"SebastianSoewanto"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + this);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will mark the task as not done.","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"SebastianSoewanto"},"content":"     * It will also inform the user that the task has been successfully unmarked as done.","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"SebastianSoewanto"},"content":"    public void umarkDone() {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"SebastianSoewanto"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"SebastianSoewanto"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + this);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will determine if the keyword is found within the task,","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param partialName Keyword that has to be found within the specified task in the list.","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns true if the specified task in the list contains the keyword and false otherwise.","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"SebastianSoewanto"},"content":"    public boolean findMatch(String partialName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SebastianSoewanto"},"content":"        return description.contains(partialName);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String getDescription() {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"SebastianSoewanto"},"content":"        return description;","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"SebastianSoewanto"},"content":"     * Represents the function that will mark the Task as done","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns a string that reflects if the task is done.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"SebastianSoewanto"},"content":"    protected String status(){","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"SebastianSoewanto"},"content":"        if(isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"SebastianSoewanto"},"content":"            return \"X\";","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"SebastianSoewanto"},"content":"        else {","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"SebastianSoewanto"},"content":"            return \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"SebastianSoewanto"},"content":"     * Printing the Task that includes whether it is done","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns a string that describes the object","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"SebastianSoewanto"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"SebastianSoewanto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"SebastianSoewanto"},"content":"        return \"[\" + status() + \"] \" + getDescription();","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"SebastianSoewanto":73}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package duke.task;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"     * Printing the Task that includes whether it is done","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns a string that describes the object","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"SebastianSoewanto":19}}]
