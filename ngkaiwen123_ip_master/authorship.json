[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns false if the second string in the input cannot be converted into a numeric type, true if it","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"     * can be converted.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"     * @param strNum The second string found in the user input.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Boolean for whether string can be converted into a numeric type (int, double etc.).","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    //@@author ngkaiwen123-reused","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //Reused from https://www.baeldung.com/java-check-string-number","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            double d \u003d Double.parseDouble(strNum);","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"     * Executes the \"Duke\" program.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ngkaiwen123"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"ngkaiwen123"},"content":"        //Initialisation","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ngkaiwen123"},"content":"        String line \u003d \"start\";","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ngkaiwen123"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ngkaiwen123"},"content":"        int listSize \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ngkaiwen123"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ngkaiwen123"},"content":"        //Get commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"ngkaiwen123"},"content":"        while (!line.equals(\"bye\")){","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ngkaiwen123"},"content":"            line \u003d input.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ngkaiwen123"},"content":"            String[] command \u003d line.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ngkaiwen123"},"content":"            switch(command[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ngkaiwen123"},"content":"            //If the word \"list\" is the first word in the line of strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ngkaiwen123"},"content":"            case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ngkaiwen123"},"content":"                if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user just wants to view the list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ngkaiwen123"},"content":"                    for (int x \u003d 0; x \u003c listSize; x +\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println((x + 1) + \".[\" + list[x].getStatusIcon() + \"] \" + list[x].getDescription());","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ngkaiwen123"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ngkaiwen123"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user wants to include the word \"list\" as part of the task description.","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ngkaiwen123"},"content":"                    list[listSize] \u003d new Task(line);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ngkaiwen123"},"content":"                    listSize +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ngkaiwen123"},"content":"                    System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ngkaiwen123"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ngkaiwen123"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"ngkaiwen123"},"content":"            //If the word \"mark\" is the first word in the line of strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ngkaiwen123"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"ngkaiwen123"},"content":"                if (command.length \u003d\u003d 2 \u0026\u0026 isNumeric(command[1])) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user wants to mark task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"ngkaiwen123"},"content":"                    int taskNumber \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"ngkaiwen123"},"content":"                    if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d listSize) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"ngkaiwen123"},"content":"                        //If valid task number is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"ngkaiwen123"},"content":"                        list[taskNumber - 1].markDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"[X] \" + list[taskNumber - 1].getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ngkaiwen123"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"ngkaiwen123"},"content":"                        //If task number given exceeds total tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"Please key in a valid task number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"ngkaiwen123"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"ngkaiwen123"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user wants to include \"mark\" as part of a new task description.","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ngkaiwen123"},"content":"                    list[listSize] \u003d new Task(line);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"ngkaiwen123"},"content":"                    listSize +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ngkaiwen123"},"content":"                    System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ngkaiwen123"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"ngkaiwen123"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ngkaiwen123"},"content":"            //If the word \"unmark\" is the first word in the line of strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ngkaiwen123"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"ngkaiwen123"},"content":"                if (command.length \u003d\u003d 2 \u0026\u0026 isNumeric(command[1])) {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user wants to unmark task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"ngkaiwen123"},"content":"                    int taskNumber \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"ngkaiwen123"},"content":"                    if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d listSize) {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"ngkaiwen123"},"content":"                        //If valid task number is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"ngkaiwen123"},"content":"                        list[taskNumber - 1].unmarkDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"[ ] \" + list[taskNumber - 1].getDescription());","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"ngkaiwen123"},"content":"                    } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"ngkaiwen123"},"content":"                        //If task number given exceeds total tasks in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"ngkaiwen123"},"content":"                        System.out.println(\"Please key in a valid task number!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"ngkaiwen123"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"ngkaiwen123"},"content":"                } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"ngkaiwen123"},"content":"                    //If user wants to include \"unmark\" as part of a new task description.","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"ngkaiwen123"},"content":"                    list[listSize] \u003d new Task(line);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"ngkaiwen123"},"content":"                    listSize +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"ngkaiwen123"},"content":"                    System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"ngkaiwen123"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"ngkaiwen123"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"ngkaiwen123"},"content":"            //To terminate program, if the word \"bye\" is the first word in the line of strings.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"ngkaiwen123"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"ngkaiwen123"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"ngkaiwen123"},"content":"            //Add normal user input as part of new task description.","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"ngkaiwen123"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"ngkaiwen123"},"content":"                list[listSize] \u003d new Task(line);","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"ngkaiwen123"},"content":"                listSize +\u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println(\"added: \" + line);","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"ngkaiwen123"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"ngkaiwen123"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ngkaiwen123":99,"-":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"    /** The description or name of the task added. */","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"    /** Records whether tasking is marked as done or not done. */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates a new task by recording the user inputted description and setting the status of the task to undone","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"     * by default.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"     * @param description The name or description of the new task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns a string that represents the \"done\" or \"not done\" status of the task in question.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ngkaiwen123"},"content":"     * @return A string \"X\" if isDone() is true, \" \" if isDone() is false.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns the description or the name of the task in question.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Name/Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ngkaiwen123"},"content":"    public String getDescription(){","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ngkaiwen123"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ngkaiwen123"},"content":"     * Marks the task in question as done by changing the boolean isDone() to true.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ngkaiwen123"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ngkaiwen123"},"content":"     * Marks the task in question as not done by changing the boolean isDone() to false.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ngkaiwen123"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ngkaiwen123"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ngkaiwen123":50}}]
