[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    /** The end date of the task inputted by the user. */","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates a new \"deadline\" task containing the name of the task and its respective due date.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"     * @param description The name/description of the \"deadline\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"     * @param by The due date of the \"deadline\" task as defined by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns a string for output printing, containing information about the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"     * @return String containing the category label of the task, completion status, description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"     * and dates (if any).","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ngkaiwen123"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ngkaiwen123":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"     * Executes the \"Duke\" program.","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"        //Initialisation","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"        String line \u003d \"start\";","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"        Task[] list \u003d new Task[100];","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"        int listSize \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"        //Get commands while user input is not \"bye\".","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"        while (!line.equals(\"bye\")){","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"            line \u003d input.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"            listSize \u003d handleUserInputs(line, list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns the number of tasks found in the list, after handling the commands given by the","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"     * user in the form of a line of string.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"ngkaiwen123"},"content":"     * @param line The single line of string inputted by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Returns the current size of the list populated by tasks created by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"ngkaiwen123"},"content":"    private static int handleUserInputs(String line, Task[] list, int listSize) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"ngkaiwen123"},"content":"        String[] command \u003d line.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ngkaiwen123"},"content":"        //Check the first word in the line of strings (list, mark, unmark, event, etc.)","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"ngkaiwen123"},"content":"        switch(command[0]) {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ngkaiwen123"},"content":"        case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ngkaiwen123"},"content":"            printList(list, listSize, command);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"ngkaiwen123"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"ngkaiwen123"},"content":"            markAsDone(list, listSize, command);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"ngkaiwen123"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"ngkaiwen123"},"content":"            markAsUndone(list, listSize, command);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"ngkaiwen123"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"ngkaiwen123"},"content":"            list[listSize] \u003d new ToDo(line.substring(line.indexOf(\u0027 \u0027) + 1));","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"ngkaiwen123"},"content":"            listSize \u003d printNewlyAddedTask(list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"ngkaiwen123"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"ngkaiwen123"},"content":"            createNewDeadline(line, list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"ngkaiwen123"},"content":"            listSize \u003d printNewlyAddedTask(list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"ngkaiwen123"},"content":"        case \"event\":","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"ngkaiwen123"},"content":"            createNewEvent(line, list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"ngkaiwen123"},"content":"            listSize \u003d printNewlyAddedTask(list, listSize);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"ngkaiwen123"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"ngkaiwen123"},"content":"            goodbyeMessage();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"ngkaiwen123"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"ngkaiwen123"},"content":"            printInvalidCommandError();","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"ngkaiwen123"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"ngkaiwen123"},"content":"        return listSize;","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints the \"list\" array, which contains a series of user-created tasks. The tasks will be printed","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"ngkaiwen123"},"content":"     * in entry order, starting from the task that was entered into the list first.","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"ngkaiwen123"},"content":"     * @param command The string array containing all individual strings separated by a space (\" \") character in","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"ngkaiwen123"},"content":"     *                the user inputted string.","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"ngkaiwen123"},"content":"    private static void printList(Task[] list, int listSize, String[] command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"ngkaiwen123"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ngkaiwen123"},"content":"            lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"ngkaiwen123"},"content":"            for (int increment \u003d 0; increment \u003c listSize; increment +\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println((increment + 1) + \". \" + list[increment].toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"ngkaiwen123"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ngkaiwen123"},"content":"            lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"ngkaiwen123"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"ngkaiwen123"},"content":"            printInvalidCommandError();","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates a new \"deadline\" task in the \"list\" array by determining the position of the \"/by","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"ngkaiwen123"},"content":"     * string in the entire string, in order to retrieve the strings representing the name/description","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"ngkaiwen123"},"content":"     * of the \"deadline\" task and the due date of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"ngkaiwen123"},"content":"     * @param line The single line of string inputted by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"ngkaiwen123"},"content":"    private static void createNewDeadline(String line, Task[] list, int listSize) {","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"ngkaiwen123"},"content":"        int byIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"ngkaiwen123"},"content":"        String deadline \u003d line.substring(line.indexOf(\"deadline\") + 9, byIndex - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"ngkaiwen123"},"content":"        list[listSize] \u003d new Deadline(deadline , line.substring(byIndex + 4));","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates a new \"event\" task in the \"list\" array by determining the position of the \"/from\" and \"/to\"","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"ngkaiwen123"},"content":"     * strings in the entire string, in order to retrieve the strings representing the name/description (event)","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"ngkaiwen123"},"content":"     * of the event, the starting date (startDate) and ending date (endDate).","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"ngkaiwen123"},"content":"     * @param line The single line of string inputted by the user.","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"ngkaiwen123"},"content":"    private static void createNewEvent(String line, Task[] list, int listSize) {","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"ngkaiwen123"},"content":"        int fromIndex \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"ngkaiwen123"},"content":"        int toIndex \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"ngkaiwen123"},"content":"        String event;","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"ngkaiwen123"},"content":"        String startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"ngkaiwen123"},"content":"        String endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"ngkaiwen123"},"content":"        if (fromIndex \u003c toIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"ngkaiwen123"},"content":"            //If user typed \"/from\" before \"/to\".","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"ngkaiwen123"},"content":"            event \u003d line.substring(line.indexOf(\"event\") + 5, fromIndex - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"ngkaiwen123"},"content":"            startDate \u003d line.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"ngkaiwen123"},"content":"            endDate \u003d line.substring(toIndex + 4);","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"ngkaiwen123"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"ngkaiwen123"},"content":"            //If user typed \"/to\" before \"/from\".","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"ngkaiwen123"},"content":"            event \u003d line.substring(line.indexOf(\"event\") + 5, toIndex - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"ngkaiwen123"},"content":"            startDate \u003d line.substring(toIndex + 4, fromIndex - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"ngkaiwen123"},"content":"            endDate \u003d line.substring(fromIndex + 6);","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"ngkaiwen123"},"content":"        list[listSize] \u003d new Event(event, startDate, endDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints a series of strings to inform the user that the task has been added to the list of tasks, while","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"ngkaiwen123"},"content":"     * incrementing the \"listSize\" variable used to track the total tasks in the list by one.","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Returns the new total number of tasks found in the list.","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"ngkaiwen123"},"content":"    private static int printNewlyAddedTask(Task[] list, int listSize) {","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"  \" + list[listSize].toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"ngkaiwen123"},"content":"        listSize +\u003d 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"ngkaiwen123"},"content":"        return listSize;","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"ngkaiwen123"},"content":"     * Changes the completion status of the user-created task to done, and prints a series of strings","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"ngkaiwen123"},"content":"     * to inform the user about the update to the task completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"ngkaiwen123"},"content":"     * @param command The string array containing all individual strings separated by a space (\" \") character in","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"ngkaiwen123"},"content":"     *                the user inputted string.","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"ngkaiwen123"},"content":"    private static void markAsDone(Task[] list, int listSize, String[] command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"ngkaiwen123"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 isNumeric(command[1])) {","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"ngkaiwen123"},"content":"            //If user wants to mark task as done and second input after \"mark\" is a valid number.","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"ngkaiwen123"},"content":"            int taskNumber \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"ngkaiwen123"},"content":"            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d listSize) {","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"ngkaiwen123"},"content":"                //If valid task number is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"ngkaiwen123"},"content":"                list[taskNumber - 1].markDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"ngkaiwen123"},"content":"                lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println(\"  \" + list[taskNumber - 1].toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"ngkaiwen123"},"content":"                lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"ngkaiwen123"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"ngkaiwen123"},"content":"                //If task number given exceeds total tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":175,"author":{"gitId":"ngkaiwen123"},"content":"                printInvalidInputError();","lastModifiedDate":"2023-01-30"},{"lineNumber":176,"author":{"gitId":"ngkaiwen123"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"ngkaiwen123"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"ngkaiwen123"},"content":"            //If user types non-integer inputs after \"mark\".","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"ngkaiwen123"},"content":"            printInvalidInputError();","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":181,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":184,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":185,"author":{"gitId":"ngkaiwen123"},"content":"     * Changes the completion status of the user-created task to NOT done, and prints a series of strings","lastModifiedDate":"2023-01-30"},{"lineNumber":186,"author":{"gitId":"ngkaiwen123"},"content":"     * to inform the user about the update to the task completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":187,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":188,"author":{"gitId":"ngkaiwen123"},"content":"     * @param list The array containing all information about existing tasks and their completion status.","lastModifiedDate":"2023-01-30"},{"lineNumber":189,"author":{"gitId":"ngkaiwen123"},"content":"     * @param listSize The current number of tasks populating the \"list\" array.","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"ngkaiwen123"},"content":"     * @param command The string array containing all individual strings separated by a space (\" \") character in","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"ngkaiwen123"},"content":"     *                the user inputted string.","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"ngkaiwen123"},"content":"    private static void markAsUndone(Task[] list, int listSize, String[] command) {","lastModifiedDate":"2023-01-30"},{"lineNumber":194,"author":{"gitId":"ngkaiwen123"},"content":"        if (command.length \u003d\u003d 2 \u0026\u0026 isNumeric(command[1])) {","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"ngkaiwen123"},"content":"            //If user wants to mark task as not done and second input after \"unmark\" is a valid number.","lastModifiedDate":"2023-01-30"},{"lineNumber":196,"author":{"gitId":"ngkaiwen123"},"content":"            int taskNumber \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":197,"author":{"gitId":"ngkaiwen123"},"content":"            if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d listSize) {","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"ngkaiwen123"},"content":"                //If valid task number is given.","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"ngkaiwen123"},"content":"                list[taskNumber - 1].unmarkDone();","lastModifiedDate":"2023-01-25"},{"lineNumber":200,"author":{"gitId":"ngkaiwen123"},"content":"                lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"ngkaiwen123"},"content":"                System.out.println(\"  \" + list[taskNumber - 1].toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"ngkaiwen123"},"content":"                lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"ngkaiwen123"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"ngkaiwen123"},"content":"                //If task number given exceeds total tasks in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"ngkaiwen123"},"content":"                printInvalidInputError();","lastModifiedDate":"2023-01-30"},{"lineNumber":207,"author":{"gitId":"ngkaiwen123"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"ngkaiwen123"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"ngkaiwen123"},"content":"            //If user types non-integer inputs after \"unmark\".","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"ngkaiwen123"},"content":"            printInvalidInputError();","lastModifiedDate":"2023-01-30"},{"lineNumber":211,"author":{"gitId":"ngkaiwen123"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":212,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":215,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints a string to inform the user that the program is terminating.","lastModifiedDate":"2023-01-30"},{"lineNumber":216,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":217,"author":{"gitId":"ngkaiwen123"},"content":"    private static void goodbyeMessage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":218,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":220,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":222,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":224,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints a string to inform the user about an invalid command entered as the input.","lastModifiedDate":"2023-01-30"},{"lineNumber":225,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":226,"author":{"gitId":"ngkaiwen123"},"content":"    private static void printInvalidCommandError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":227,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":228,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Invalid command. Please try again.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":229,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":230,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":231,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":232,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":233,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints a string to inform the user to retype a valid task number.","lastModifiedDate":"2023-01-30"},{"lineNumber":234,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":235,"author":{"gitId":"ngkaiwen123"},"content":"    private static void printInvalidInputError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":236,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"Please key in a valid task number!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":238,"author":{"gitId":"ngkaiwen123"},"content":"        lineSeparator();","lastModifiedDate":"2023-01-29"},{"lineNumber":239,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":240,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":242,"author":{"gitId":"ngkaiwen123"},"content":"     * Prints a long string of lines (\"___\") to separate the outputs.","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"ngkaiwen123"},"content":"    public static void lineSeparator() {","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"ngkaiwen123"},"content":"        System.out.println(\"___________________________________________________________________________________\");","lastModifiedDate":"2023-01-30"},{"lineNumber":246,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":247,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":248,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":249,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns false if the second string in the input cannot be converted into a numeric type, true if it","lastModifiedDate":"2023-01-30"},{"lineNumber":250,"author":{"gitId":"ngkaiwen123"},"content":"     * can be converted.","lastModifiedDate":"2023-01-30"},{"lineNumber":251,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":252,"author":{"gitId":"ngkaiwen123"},"content":"     * @param strNum The second string found in the user input.","lastModifiedDate":"2023-01-30"},{"lineNumber":253,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Boolean for whether string can be converted into a numeric type (int, double etc.).","lastModifiedDate":"2023-01-30"},{"lineNumber":254,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    //@@author ngkaiwen123-reused","lastModifiedDate":"2023-01-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    //Reused from https://www.baeldung.com/java-check-string-number","lastModifiedDate":"2023-01-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2023-01-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            Double.parseDouble(strNum);","lastModifiedDate":"2023-01-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-01-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2023-01-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ngkaiwen123":251,"-":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"    /** The starting date of the \"event\" task. */","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"    /** The ending date of the \"event\" task. */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates an Event and stores information about the \"event\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"     * @param description The name/description of the \"event\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"     * @param from The start date of the \"event\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"     * @param to The end date of the \"event\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns a string for output printing, containing information about the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"     * @return String containing the category label of the task, completion status, description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"     * and dates (if any).","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"ngkaiwen123"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"ngkaiwen123"},"content":"        return \"[E][\" + super.getStatusIcon() + \"]\" + super.getDescription() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"ngkaiwen123"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ngkaiwen123":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"    /** The description or name of the task added. */","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"    /** Records whether tasking is marked as done or not done. */","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"     * Creates a new task by recording the user inputted description and setting the status of the task to undone","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"     * by default.","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"     * @param description The name or description of the new task added.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns a string that represents the \"done\" or \"not done\" status of the task in question.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ngkaiwen123"},"content":"     * @return A string \"X\" if isDone() is true, \" \" if isDone() is false.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ngkaiwen123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ngkaiwen123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns the description or the name of the task in question.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ngkaiwen123"},"content":"     * @return Name/Description of the task.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ngkaiwen123"},"content":"    public String getDescription(){","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ngkaiwen123"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ngkaiwen123"},"content":"     * Marks the task in question as done by changing the boolean isDone() to true.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ngkaiwen123"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ngkaiwen123"},"content":"     * Marks the task in question as not done by changing the boolean isDone() to false.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ngkaiwen123"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ngkaiwen123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ngkaiwen123"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ngkaiwen123":50}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"     * Create a new \"todo\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"     * @param description The description/name of the \"todo\" task.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"     * Returns a string for output printing, containing information about the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"ngkaiwen123"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"ngkaiwen123"},"content":"     * @return String containing the category label of the task, completion status, description of task","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"ngkaiwen123"},"content":"     * and dates (if any).","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"ngkaiwen123"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"ngkaiwen123"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"ngkaiwen123"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"ngkaiwen123"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \" + super.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"ngkaiwen123"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"ngkaiwen123"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"ngkaiwen123":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngkaiwen123"},"content":"todo Ng Kai Wen CS2113 text-ui-test","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"ngkaiwen123"},"content":"event testing event feature /from 2pm /to 4pm","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"ngkaiwen123"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"ngkaiwen123"},"content":"mark 1","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"ngkaiwen123"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"ngkaiwen123"},"content":"unmark 1","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"ngkaiwen123"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"ngkaiwen123"},"content":"deadline testing deadline /by 2pm lol sample text","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"ngkaiwen123"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"ngkaiwen123"},"content":"mark 13","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"ngkaiwen123"},"content":"mark 3","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"ngkaiwen123"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"ngkaiwen123"},"content":"bye","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"ngkaiwen123":13}}]
