[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"    private String dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    public Deadline(String content, String dueDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"        super(content);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"    static Deadline createDeadline(String[] commandByWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"        String taskToDo \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"        String dueDate \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"        // traverse array until /by is found","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"        while (commandByWord[index].charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"            // add space between words","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"            if (index !\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"                taskToDo +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"            taskToDo +\u003d commandByWord[index];","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"            ++index;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"        for (int i \u003d index + 1; i \u003c commandByWord.length; ++i) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"            // add space between words","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"            if (i !\u003d index + 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"                dueDate +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"            dueDate +\u003d commandByWord[i];","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"        return new Deadline(taskToDo, dueDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"namsengi11":39}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    private final static String LINE_BREAK \u003d \" ____________________________________________________________\";","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"    private final static String GREETING \u003d \"Hello! I\u0027m Duke\\n  What can I do for you?\";","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"    private final static String EXITING \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"    private final static Tasks tasks \u003d new Tasks();","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"        speak(GREETING);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"        boolean running \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"        while (running) {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"            String[] commandByWord \u003d command.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"            if (command.equals(\"bye\")) { // whats the difference between equals and \u003d\u003d","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"                speak(EXITING);","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"                running \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.listTasks());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"            } else if (commandByWord[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.mark(Integer.parseInt(commandByWord[1])));","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"            } else if (commandByWord[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.unmark(Integer.parseInt(commandByWord[1])));","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"            } else if (commandByWord[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.addTask(Deadline.createDeadline(commandByWord)));","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"            } else if (commandByWord[0].equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.addTask(Event.createEvent(commandByWord)));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"            } else if (commandByWord[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"                speak(tasks.addTask(ToDo.createToDo(commandByWord)));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"    static void speak(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"        System.out.println(\"  \" + message);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"namsengi11"},"content":"        System.out.println();","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"namsengi11":38,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"    private String startDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"    private String endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"    public Event(String content, String startDate, String endDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"        super(content);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"    static Event createEvent(String[] commandByWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"        String taskToDo \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"        // traverse array until /from is found","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"        while (commandByWord[index].charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"            // add space between words","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"            if (index !\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"                taskToDo +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"            taskToDo +\u003d commandByWord[index];","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"            ++index;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"        ++index; // move past the /from","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"        int indexOfFrom \u003d index;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"        while (commandByWord[index].charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"            if (index !\u003d indexOfFrom) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"                startDate +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"            startDate +\u003d commandByWord[index];","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"            ++index;","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"        for (int i \u003d index + 1; i \u003c commandByWord.length; ++i) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"namsengi11"},"content":"            // add space between words","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"namsengi11"},"content":"            if (i !\u003d index + 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"namsengi11"},"content":"                endDate +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"namsengi11"},"content":"            endDate +\u003d commandByWord[i];","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"namsengi11"},"content":"        return new Event(taskToDo, startDate, endDate);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"namsengi11"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"namsengi11"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"namsengi11"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startDate + \" to: \" + this.endDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"namsengi11":54}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"    private String content;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"    Task(String content) {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"    void markAsComplete() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"    void markAsIncomplete() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"        return (this.isCompleted ? \"[X] \" : \"[ ] \") + this.content;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"namsengi11":21}},{"path":"src/main/java/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"public class Tasks {","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"    Tasks() {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"    String addTask(Task task) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"        return \"Got it. I\u0027ve added this task:\\n    \" +","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"                task.toString() + \"\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"                \"  Now you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"    String mark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"        taskList.get(index - 1).markAsComplete();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.get(index - 1).toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"    String unmark(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"        taskList.get(index - 1).markAsIncomplete();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.get(index - 1).toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"    String listTasks() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"        String list \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"            list +\u003d \"  \" + Integer.toString(counter) + \". \";","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"            list +\u003d task;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"            list +\u003d \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"            ++counter;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"        return list;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"namsengi11":39}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"    private ToDo(String content) {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"        super(content);","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"    static ToDo createToDo(String[] commandByWord) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"        String task \u003d \"\";","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"        for (int i \u003d 1; i \u003c commandByWord.length; ++i) {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"                task +\u003d \" \";","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"            task +\u003d commandByWord[i];","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"        return new ToDo(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"namsengi11":20}}]
