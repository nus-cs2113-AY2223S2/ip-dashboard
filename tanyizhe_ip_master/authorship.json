[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"### Stores your tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"Duke stores your tasks so that you don\u0027t have to.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"### Mark tasks as done","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"Duke can remember which tasks you have done.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"### Delete tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"Duke can remove tasks you do not want to do anymore.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"### Find tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"Duke can help you find stored tasks with a keyword search.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"### Save your tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"Duke will save your tasks for future use.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"### List out all the tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"Duke can list out all the tasks you have stored.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"### `todo` - Adds a to-do task to your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"Adds a to-do task to your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"`todo do homework`","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"tanyizhe"},"content":"`Got it. I\u0027ve added this task.`","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"tanyizhe"},"content":"`[T][ ] do homework`","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"tanyizhe"},"content":"`Now you have 1 task(s) in the list.`","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"tanyizhe"},"content":"Duke adds todo task into the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"tanyizhe"},"content":"### `deadline` - Adds a deadline task to your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"tanyizhe"},"content":"Adds a deadline task to your list. A deadline task has a date by which you should finish the task.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"tanyizhe"},"content":"`deadline submit report /by 4pm 12 March`","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"tanyizhe"},"content":"`Got it. I\u0027ve added this task.`","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"tanyizhe"},"content":"`[D][ ] submit report (by:  4pm 12 March)`","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"tanyizhe"},"content":"`Now you have 2 task(s) in the list.`","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"tanyizhe"},"content":"Duke adds deadline task into the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"tanyizhe"},"content":"### `event` - Adds an event task to your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"tanyizhe"},"content":"Adds an event task to your list. An event task has a start and end date.","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"tanyizhe"},"content":"`event walk dog /from 12pm /to 3pm 3 March`","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"tanyizhe"},"content":"`Got it. I\u0027ve added this task.`","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"tanyizhe"},"content":"`[E][ ] walk dog (from:  12pm  to:  3pm 3 March)`","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"tanyizhe"},"content":"`Now you have 3 task(s) in the list.`","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"tanyizhe"},"content":"Duke adds event task into the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"tanyizhe"},"content":"### `delete` - removes a task from your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"tanyizhe"},"content":"Removes a task from your list based on index number on list. ","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"tanyizhe"},"content":"`delete 2`","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"tanyizhe"},"content":"`Noted. I\u0027ve removed this task:`","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"tanyizhe"},"content":"`[D][ ] submit report `","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"tanyizhe"},"content":"Duke removes task from the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"tanyizhe"},"content":"### `mark` - marks a task from your list as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"tanyizhe"},"content":"Marks a task as from your list as done based on index number on list.","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"tanyizhe"},"content":"`mark 2`","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"tanyizhe"},"content":"`Nice! I\u0027ve marked this task as done.`","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"tanyizhe"},"content":"`[E][X] walk dog `","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"tanyizhe"},"content":"Duke puts an \u0027X\u0027 on the second bracket of the task from the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"tanyizhe"},"content":"### `unmark` - un-marks a task from your list as if not done.","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"tanyizhe"},"content":"Un-marks a task as from your list as if it is not done based on index number on list.","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"tanyizhe"},"content":"`unmark 2`","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"tanyizhe"},"content":"`OK, I\u0027ve marked this task as not done yet.`","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"tanyizhe"},"content":"`[E][ ] walk dog `","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"tanyizhe"},"content":"Duke removes the \u0027X\u0027 on the second bracket of the task from the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"tanyizhe"},"content":"### `list` - list out all tasks in your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"tanyizhe"},"content":"Lists out all tasks in your list.","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"tanyizhe"},"content":"`list`","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"tanyizhe"},"content":"`Here are the tasks in your list:`","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"tanyizhe"},"content":"`1. [T][ ]do homework `","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"tanyizhe"},"content":"`2. [E][ ]walk dog /start, end:  12pm , 3pm 3 March`","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"tanyizhe"},"content":"Duke displays all items in list.","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"tanyizhe"},"content":"### `find` - find all tasks in your list that contains a keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"tanyizhe"},"content":"Finds all tasks in your list that contains a matching keyword.","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"tanyizhe"},"content":"Example of usage:","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"tanyizhe"},"content":"`find do`","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"tanyizhe"},"content":"Expected outcome:","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"tanyizhe"},"content":"`Here are the matching tasks in your list: `","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"tanyizhe"},"content":"`1. [T][ ]do homework `","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"tanyizhe"},"content":"`2. [E][ ]walk dog /start, end:  12pm , 3pm 3 March`","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"tanyizhe"},"content":"Duke displays all items that contains keyword \u0027do\u0027. \u0027do\u0027 in \u0027dog\u0027 and \u0027do\u0027 in \u0027do\u0027.","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"tanyizhe"},"content":"### `bye` - Exits the program","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"tanyizhe"},"content":"Exits the program","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"tanyizhe"},"content":"`bye`","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"tanyizhe"},"content":"`Bye. Hope to see you again soon!`","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":181,"author":{"gitId":"tanyizhe"},"content":"Duke exits, saving your task list into a save file.","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"tanyizhe":159,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"[T]/[X]/walk dog/","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"[E]/[ ]/doomsday / 2012 , 2023","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tanyizhe":2}},{"path":"src/main/java/IllegalDukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"public class IllegalDukeArgumentException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"    public IllegalDukeArgumentException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Oh no! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"tanyizhe":5}},{"path":"src/main/java/duke/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"public class CommandHandler {","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    private final static int EXPECTED_EVENT_COMMAND_SIZE \u003d 5;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"     * list all the tasks stored in the taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    public static void listTasks() {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"        Duke.ui.printListMessage();","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"        for (Task i : Duke.taskList.getStoredTasks()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"            printTaskBasedOnType(count, i);","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"            count++;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"     * deletes task from taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"    public static void deleteTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"        processDelete(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"        try{","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.decrementTaskNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"     * Processes delete of tak","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"    private static void processDelete(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"        int delIndex \u003d Integer.parseInt((commandLine[1])) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"        printMarkChange(delIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.removeItem(delIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"tanyizhe"},"content":"     * marks task in taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"tanyizhe"},"content":"    public static void markTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"tanyizhe"},"content":"        int taskIndex \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.getStoredTasks().get(taskIndex).setDone(true);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"tanyizhe"},"content":"        printMarkChange(taskIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"tanyizhe"},"content":"        try{","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"tanyizhe"},"content":"    private static void printMarkChange(int taskIndex) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"tanyizhe"},"content":"        System.out.print(Duke.taskList.getStoredTasks().get(taskIndex).getTypeIcon() +","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"tanyizhe"},"content":"                Duke.taskList.getStoredTasks().get(taskIndex).getStatusIcon() + \" \" + Duke.taskList.getStoredTasks().get(taskIndex).getDescription());","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"tanyizhe"},"content":"        if (Duke.taskList.getStoredTasks().get(taskIndex) instanceof Deadline) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"/by: \" + Duke.taskList.getStoredTasks().get(taskIndex).getInfo());","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"tanyizhe"},"content":"        if (Duke.taskList.getStoredTasks().get(taskIndex) instanceof Event) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"/start, end: \" + Duke.taskList.getStoredTasks().get(taskIndex).getInfo());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"tanyizhe"},"content":"        else {","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"tanyizhe"},"content":"            System.out.println();","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"tanyizhe"},"content":"     * un-marks task in taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"tanyizhe"},"content":"    public static void unmarkTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"tanyizhe"},"content":"        int unmarkIndex \u003d Integer.parseInt(commandLine[1]) - 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.getStoredTasks().get(unmarkIndex).setDone(false);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"tanyizhe"},"content":"        printMarkChange(unmarkIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"tanyizhe"},"content":"        try{","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"tanyizhe"},"content":"     * Prints output with information based on task","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"tanyizhe"},"content":"     * @param count integer counting number of tasks","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"tanyizhe"},"content":"     * @param task task to display","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"tanyizhe"},"content":"    static void printTaskBasedOnType(int count, Task task) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"tanyizhe"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(count + \".\" + task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getDescription() + \"/by:\" + task.getInfo());","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"tanyizhe"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(count + \".\" + task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getDescription() + \"/start, end:\" + task.getInfo());","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"tanyizhe"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(count + \".\" + task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getDescription() + task.getInfo());","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"tanyizhe"},"content":"     * finds tasks from taskList with matching keyword","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"tanyizhe"},"content":"    public static void findItem(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"tanyizhe"},"content":"        String keyword \u003d commandLine[1];","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"tanyizhe"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"tanyizhe"},"content":"        for (Task i : Duke.taskList.getStoredTasks()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"tanyizhe"},"content":"            if (i.getDescription().contains(keyword)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"tanyizhe"},"content":"                printTaskBasedOnType(count, i);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"tanyizhe"},"content":"                count++;","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"tanyizhe"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"tanyizhe"},"content":"     * adds event type task to taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"tanyizhe"},"content":"    public static void addEventTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"tanyizhe"},"content":"        processEvent(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"tanyizhe"},"content":"        try{","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"tanyizhe"},"content":"     * processes event command.","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputtted","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"tanyizhe"},"content":"    private static void processEvent(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"tanyizhe"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"tanyizhe"},"content":"            String[] commandPart \u003d commandLine[1].split(\" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"tanyizhe"},"content":"            if (commandPart.length \u003c EXPECTED_EVENT_COMMAND_SIZE || !commandLine[1].contains(\"/from\")|| !commandLine[1].contains(\"/to\")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"tanyizhe"},"content":"                throw new IllegalEventLengthException();","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"tanyizhe"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"tanyizhe"},"content":"        } catch (IllegalEventLengthException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"tanyizhe"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"tanyizhe"},"content":"        String[] eventString \u003d commandLine[1].split(\"/from\");","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"tanyizhe"},"content":"        String[] eventStartEnd \u003d eventString[1].split(\"/to\");","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"tanyizhe"},"content":"        Event ev \u003d new Event(eventString[0], eventStartEnd[0], eventStartEnd[1]);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.addItem(ev);","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"tanyizhe"},"content":"        Duke.ui.printAddTaskMessage();","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"  \" + ev.getTypeIcon() +","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"tanyizhe"},"content":"                ev.getStatusIcon() + \" \" + ev.getDescription()","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"tanyizhe"},"content":"                + \"(from: \" + ev.getStart() + \" to: \" + ev.getEnd() +\")\");","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.incrementTaskNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"tanyizhe"},"content":"        displayTasksNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"tanyizhe"},"content":"     * adds deadline type task to taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"tanyizhe"},"content":"    public static void addDeadlineTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"tanyizhe"},"content":"        processDeadline(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"tanyizhe"},"content":"        displayTasksNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"tanyizhe"},"content":"        try{","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"tanyizhe"},"content":"     * Processes deadline command.","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"tanyizhe"},"content":"    private static void processDeadline(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"tanyizhe"},"content":"        String[] deadlineString \u003d commandLine[1].split(\"/by\");","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"tanyizhe"},"content":"        Deadline dl \u003d new Deadline(deadlineString[0], deadlineString[1]);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.addItem(dl);","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"tanyizhe"},"content":"        Duke.ui.printAddTaskMessage();","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"  \" + dl.getTypeIcon() +","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"tanyizhe"},"content":"                dl.getStatusIcon() + \" \" + dl.getDescription() + \"(by: \" + dl.getBy() + \")\");","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.incrementTaskNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"tanyizhe"},"content":"     * adds Todo type task to taskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"tanyizhe"},"content":"    public static void addTodoTask(String[] commandLine) {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"tanyizhe"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"tanyizhe"},"content":"            validateTodo(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"tanyizhe"},"content":"        } catch (IllegalDukeArgumentException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"tanyizhe"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"tanyizhe"},"content":"        Todo td \u003d new Todo(commandLine[1]);","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.addItem(td);","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"tanyizhe"},"content":"        Duke.ui.printAddTaskMessage();","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"  \" + td.getTypeIcon() + td.getStatusIcon() + \" \" + td.getDescription());","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"tanyizhe"},"content":"        Duke.taskList.incrementTaskNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"tanyizhe"},"content":"        displayTasksNum();","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"tanyizhe"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"tanyizhe"},"content":"            Duke.storage.updateFile(Duke.taskList.getStoredTasks());","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"tanyizhe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Oops! Something broke: \" + e);","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"tanyizhe"},"content":"     * checks if Todo input statement is valid","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine the commands the user has inputted","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"tanyizhe"},"content":"     * @throws IllegalDukeArgumentException","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"tanyizhe"},"content":"    private static void validateTodo(String[] commandLine) throws IllegalDukeArgumentException {","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"tanyizhe"},"content":"        if (commandLine.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"tanyizhe"},"content":"            throw new IllegalDukeArgumentException();","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"tanyizhe"},"content":"     * displays number of tasks","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"tanyizhe"},"content":"    private static void displayTasksNum() {","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"tanyizhe"},"content":"        Duke.ui.printTaskNum(Duke.taskList.getTaskNum());","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"tanyizhe":213}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":" * Deadline type of task. Has a deadline to do task by.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    private String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"        return this.by;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching status type","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"     * @return icon that depicts status of done","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching deadline type","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"     * @return icon of type deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"        return (\"[D]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"    public void setBy(String s) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"        this.by \u003d s;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"    public String getInfo() {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"        return by;","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"tanyizhe":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":" * Duke is a task recording robot with different functions.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":" * Functions include: delete, mark, unmark, deadline, todo, event, find","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"    static Parser parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    static UI ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"    static Storage storage;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"    static TaskList taskList;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"        loadFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"        ui.showGreetings();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"            ui.printLinebreak();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"            String[] commandLine \u003d parser.parseCommand(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"            ui.printLinebreak();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"            doCommand(commandLine);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"     * Loads file and parses file contents.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"tanyizhe"},"content":"    private static void loadFile() throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"tanyizhe"},"content":"        File file \u003d storage.createFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"tanyizhe"},"content":"        Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"tanyizhe"},"content":"        while (fileReader.hasNext()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"tanyizhe"},"content":"            Parser.parseFile(fileReader);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"tanyizhe"},"content":"            taskList.incrementTaskNum();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"tanyizhe"},"content":"     * Handles command input by user.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"tanyizhe"},"content":"     * @param commandLine the commands the user has inputted","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"tanyizhe"},"content":"    private static void doCommand(String[] commandLine) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"tanyizhe"},"content":"        switch (commandLine[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"tanyizhe"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.addTodoTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"tanyizhe"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.addDeadlineTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"tanyizhe"},"content":"        case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.addEventTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"tanyizhe"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.markTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"tanyizhe"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.unmarkTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"tanyizhe"},"content":"        case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.listTasks();","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"tanyizhe"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.deleteTask(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"tanyizhe"},"content":"        case \"find\":","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"tanyizhe"},"content":"            CommandHandler.findItem(commandLine);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"tanyizhe"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"tanyizhe"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"tanyizhe"},"content":"            break;","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"tanyizhe"},"content":"        default:","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"tanyizhe"},"content":"            try {","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"tanyizhe"},"content":"                throw new IllegalDukeArgumentException();","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"tanyizhe"},"content":"            } catch (IllegalDukeArgumentException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"tanyizhe"},"content":"                System.out.println(\"Please enter a valid command.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"tanyizhe"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanyizhe":87,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"* Event type of task. Has a start and end date.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"public class Event extends Todo{","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    protected String start;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    protected String end;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"    public Event(String description, String start, String end)","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"    {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching event type","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"     * @return icon of type event","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"        return (\"[E]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching status type","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"     * @return icon that depicts status of done","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"    public String getStart() {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"        return start;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"    public String getEnd() {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"        return end;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"    public String getInfo() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"        return start + \",\" + end;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"tanyizhe":38}},{"path":"src/main/java/duke/IllegalDukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"public class IllegalDukeArgumentException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"    public IllegalDukeArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Oh no! I don\u0027t understand what you are saying.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"tanyizhe":7}},{"path":"src/main/java/duke/IllegalEventLengthException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"public class IllegalEventLengthException extends Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"    public IllegalEventLengthException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Oh no! That is not a valid event format!\");","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Format:\");","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"event [description] /from [from_date] /to [to_date]\");","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"tanyizhe":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    public Parser() {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"     * Loads file and parses file contents.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"     * @param fileReader Scanner scanning file contents","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    public static void parseFile(Scanner fileReader) {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"        String[] savedDataLine;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"        savedDataLine \u003d fileReader.nextLine().split(\"/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"        if (savedDataLine[0].equals(\"[T]\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"            Duke.taskList.setStoredTasks(Duke.parser.parseTodo(savedDataLine, Duke.taskList.getStoredTasks()));","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"        } else if (savedDataLine[0].equals(\"[D]\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"            Duke.taskList.setStoredTasks(Duke.parser.parseDeadline(savedDataLine, Duke.taskList.getStoredTasks()));","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"        } else if (savedDataLine[0].equals(\"[E]\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"            Duke.taskList.setStoredTasks(Duke.parser.parseEvent(savedDataLine, Duke.taskList.getStoredTasks()));","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"    public String[] parseCommand(String command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"        return command.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"     * Parses deadline from the save file","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"     * @param savedDataLine line of file to be parsed","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"     * @param storedTasks List of all tasks user has stored","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"     * @return","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"    public ArrayList\u003cTask\u003e parseDeadline(String[] savedDataLine, ArrayList\u003cTask\u003estoredTasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"        Deadline deadline \u003d new Deadline(savedDataLine[2], savedDataLine[3]);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"        if (savedDataLine[1].equals(\"[X]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"tanyizhe"},"content":"            deadline.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"tanyizhe"},"content":"        storedTasks.add(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"tanyizhe"},"content":"        return storedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"tanyizhe"},"content":"     * Parses todo from the save file","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"tanyizhe"},"content":"     * @param savedDataLine line of file to be parsed","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"tanyizhe"},"content":"     * @param storedTasks List of all tasks user has stored","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"tanyizhe"},"content":"     * @return","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"tanyizhe"},"content":"    public ArrayList\u003cTask\u003e parseTodo(String[] savedDataLine, ArrayList\u003cTask\u003estoredTasks){","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"tanyizhe"},"content":"        Todo todo \u003d new Todo(savedDataLine[2]);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"tanyizhe"},"content":"        if (savedDataLine[1].equals(\"[X]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"tanyizhe"},"content":"            todo.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"tanyizhe"},"content":"        storedTasks.add(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"tanyizhe"},"content":"        return storedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"tanyizhe"},"content":"     * Parses event from the save file","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"tanyizhe"},"content":"     * @param savedDataLine line of file to be parsed","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"tanyizhe"},"content":"     * @param storedTasks List of all tasks user has stored","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"tanyizhe"},"content":"     * @return List of stored tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"tanyizhe"},"content":"    public ArrayList\u003cTask\u003e parseEvent(String[] savedDataLine, ArrayList\u003cTask\u003estoredTasks){","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"tanyizhe"},"content":"        String[] period \u003d savedDataLine[3].split(\",\");","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"tanyizhe"},"content":"        Event event \u003d new Event(savedDataLine[2], period[0], period[1]);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"tanyizhe"},"content":"        if (savedDataLine[1].equals(\"[X]\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"tanyizhe"},"content":"            event.setDone(true);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"tanyizhe"},"content":"        storedTasks.add(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"tanyizhe"},"content":"        return storedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tanyizhe":74}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"import java.io.File;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"    private static final String filePath \u003d \"duke.txt\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    public Storage() {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"    public File createFile() throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"            file.createNewFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"        return file;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"     * Writes into the file when change is made to data.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"     * @param storedTasks list of tasks stored by user.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"     * @throws IOException error when file does not exist.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"    public void updateFile(ArrayList\u003cTask\u003e storedTasks) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"        for (Task i : storedTasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"            String textToAdd \u003d i.getTypeIcon() + \"/\" + i.getStatusIcon() + \"/\" + i.getDescription() + \"/\" +","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"                    i.getInfo() + \"\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"            fileWriter.write(textToAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"        fileWriter.close();","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tanyizhe":34}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"        return \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"    public abstract void setDone(boolean b);","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"    public abstract String getInfo();","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"    public String getDescription () {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"        return this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"tanyizhe":21}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":" * Stores all tasks added by user. Handles accessing the task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"    private ArrayList\u003cTask\u003e storedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"    private int taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"        storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"        taskNum \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"    public void incrementTaskNum() {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"        taskNum++;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"    public void decrementTaskNum() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"        taskNum--;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"    public int getTaskNum() {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"        return taskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"    public ArrayList\u003cTask\u003e getStoredTasks() {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"        return storedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"     * Updates taskList to match save file.","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"     * @param newTasks tasks in taskList is updated with new info from dave file.","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"    public void setStoredTasks(ArrayList\u003cTask\u003e newTasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"        storedTasks \u003d newTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"tanyizhe"},"content":"    public void removeItem(int index) {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"tanyizhe"},"content":"        storedTasks.remove(index);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"tanyizhe"},"content":"    public void addItem(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"tanyizhe"},"content":"        storedTasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tanyizhe":40}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":" * Basic task that needs to be done.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching status type","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"     * @return icon that depicts status of done","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"     * Returns icon matching todo type","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"     * @return icon of type todo","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"        return (\"[T]\"); // mark done task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"    public String getInfo() {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"        return \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"    public void setDone(boolean d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"        this.isDone \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"tanyizhe":32}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanyizhe"},"content":"package duke;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"tanyizhe"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"tanyizhe"},"content":" * UI handling class. Prints most UI.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tanyizhe"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"tanyizhe"},"content":"public class UI {","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"tanyizhe"},"content":"    public UI () {","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"tanyizhe"},"content":"    public void showGreetings() {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"tanyizhe"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"tanyizhe"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"tanyizhe"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"tanyizhe"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"tanyizhe"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"tanyizhe"},"content":"    public void printLinebreak() {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"--------------------------------------------------------------\");","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"tanyizhe"},"content":"    public void printTaskNum(int taskNum) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Now you have \" + taskNum + \" task(s) in the list.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"tanyizhe"},"content":"    public void printListMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"tanyizhe"},"content":"    public void printAddTaskMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"tanyizhe"},"content":"        System.out.println(\"Got it. I\u0027ve added this task.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"tanyizhe"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"tanyizhe"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"tanyizhe":30}}]
