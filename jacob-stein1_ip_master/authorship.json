[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"# User Guide - Duke","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"### Feature - Adding and Deleting Tasks from a Task List","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"Create and manage a list of tasks with descriptions to","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"better organize your time. Add, delete, and display","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"### Feature - Task Types","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"Add three different types of tasks - todos, deadlines,","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"and events to better specify time constraints and task requirements.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"### Feature - Saving and Uploading Tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"Tasks in the list are saved when Duke closes, and uploaded","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"back to the task list when re-opened.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"### Feature - Searching for Tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"Filter tasks using keywords to simplify task management.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"### Feature - Marking and Unmarking Tasks as Complete","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"Mark tasks as complete or incomplete to track their status.","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"### `list` - Display task list","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"Displays a list of all tasks on your list.","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"`list`","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"A list of your current tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"Time for a productive day, me hearties! Here be yer list of tasks:","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"1. [T][ ] CS2113 iP","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"2. [E][X] Visit Thailand (from: Feb 21 2023 to: Feb 26 2023)","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"3. [D][ ] Apply for scholarship (by: Sunday)","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"### `mark` - Mark a task as complete","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"Marks a task at a certain index as complete.","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"`mark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"The task description with an \u0027X\u0027 marked on the completion box.","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"mark 1","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"Nice! I\u0027ve marked this task as done, me hearties!","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"     [T][X] homework","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"### `unmark` - Display task list","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"Marks a task at a certain index as incomplete.","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"`unmark 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"The task description with an \u0027X\u0027 removed from the completion box.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"jacob-stein1"},"content":"unmark 1","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"jacob-stein1"},"content":"Aye, I\u0027ve marked this task as not done yet, ye scallywag:","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"jacob-stein1"},"content":"     [T][ ] homework","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"jacob-stein1"},"content":"### `help` - Display command list","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"jacob-stein1"},"content":"Displays a list of commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"jacob-stein1"},"content":"`help`","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"jacob-stein1"},"content":"A list of commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"jacob-stein1"},"content":"Avast! Here be the commands ye can use to make me do yer bidding!","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"jacob-stein1"},"content":"- list: lists all current tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"jacob-stein1"},"content":"- mark x: marks task x as complete","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"jacob-stein1"},"content":"-unmark x: unmarks task x as complete","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"jacob-stein1"},"content":"- todo \u0027description\u0027: adds a task to do with the given description","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"jacob-stein1"},"content":"- deadline \u0027description\u0027 /by \u0027deadline\u0027: adds a deadline task with the given date and description","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"jacob-stein1"},"content":"- event \u0027description\u0027 /from \u0027start\u0027 /to \u0027end\u0027: adds an event with the start and endtime","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"jacob-stein1"},"content":"- bye: exits Duke","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"jacob-stein1"},"content":"- find \u0027searchKey\u0027: shows all relevant tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"jacob-stein1"},"content":"- delete \u0027num\u0027: removes task \u0027num\u0027 from list","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"jacob-stein1"},"content":"### `todo` - Add a \u0027todo\u0027 Task","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"jacob-stein1"},"content":"Create a todo task with a specified description and add it to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"jacob-stein1"},"content":"`todo CS2113 iP`","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"jacob-stein1"},"content":"A confirmation message and the length of your task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"jacob-stein1"},"content":"added: [T][ ] CS2113 iP","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"jacob-stein1"},"content":"Now you have 1 task in the list!","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"jacob-stein1"},"content":"### `deadline` - Add a \u0027deadline\u0027 Task","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"jacob-stein1"},"content":"Create a deadline task with a specified description and due date, and add it to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"jacob-stein1"},"content":"`deadline Apply for scholarship /by Sunday`","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"jacob-stein1"},"content":"A confirmation message and the length of your task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"jacob-stein1"},"content":"added: [D][ ] Apply for scholarship (by: Sunday)","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"jacob-stein1"},"content":"Now you have 2 tasks in the list!","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"jacob-stein1"},"content":"### `event` - Add an \u0027event\u0027 Task","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"jacob-stein1"},"content":"Create an event task with a specified description, start time, and end time, and add it to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":171,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":172,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":173,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":174,"author":{"gitId":"jacob-stein1"},"content":"`event Visit Thailand /from 2023-02-21 /to 2023-02-25`","lastModifiedDate":"2023-02-27"},{"lineNumber":175,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"jacob-stein1"},"content":"A confirmation message and the length of your task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"jacob-stein1"},"content":"added: [E][ ] Visit Thailand (from: Feb 21 2023 to: Feb 25 2023)","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"jacob-stein1"},"content":"Now you have 3 tasks in the list!","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"jacob-stein1"},"content":"### `delete` - Delete a Task from the List","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"jacob-stein1"},"content":"Delete a task at a specified index of your task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"jacob-stein1"},"content":"`delete 1`","lastModifiedDate":"2023-02-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"jacob-stein1"},"content":"A confirmation message and the length of your task list.","lastModifiedDate":"2023-02-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":201,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":203,"author":{"gitId":"jacob-stein1"},"content":"Aye! The task be removed:","lastModifiedDate":"2023-02-27"},{"lineNumber":204,"author":{"gitId":"jacob-stein1"},"content":"    [T][ ] CS2113 iP","lastModifiedDate":"2023-02-27"},{"lineNumber":205,"author":{"gitId":"jacob-stein1"},"content":"Now you have 2 tasks in the list!","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"jacob-stein1"},"content":"### `find` - Filter tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":211,"author":{"gitId":"jacob-stein1"},"content":"Displays a list of all tasks on your list that contain a certain keyword.","lastModifiedDate":"2023-02-27"},{"lineNumber":212,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":213,"author":{"gitId":"jacob-stein1"},"content":"Example of usage:","lastModifiedDate":"2023-02-27"},{"lineNumber":214,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":215,"author":{"gitId":"jacob-stein1"},"content":"`find Thailand`","lastModifiedDate":"2023-02-27"},{"lineNumber":216,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":217,"author":{"gitId":"jacob-stein1"},"content":"Expected outcome:","lastModifiedDate":"2023-02-27"},{"lineNumber":218,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":219,"author":{"gitId":"jacob-stein1"},"content":"A list of tasks containing the keyword.","lastModifiedDate":"2023-02-27"},{"lineNumber":220,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":221,"author":{"gitId":"jacob-stein1"},"content":"```","lastModifiedDate":"2023-02-27"},{"lineNumber":222,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":223,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"jacob-stein1"},"content":"Tasks found:","lastModifiedDate":"2023-02-27"},{"lineNumber":225,"author":{"gitId":"jacob-stein1"},"content":"1. [E][ ] Visit Thailand (from: Feb 21 2023 to: Feb 25 2023)","lastModifiedDate":"2023-02-27"},{"lineNumber":226,"author":{"gitId":"jacob-stein1"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jacob-stein1":206,"-":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import duke.files.FileManager;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import duke.input.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":" * Contains the main method to execute the program. Duke reads","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":" * saved information from data.txt, greets the user, processes","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":" * input, then ends and saves tasks to data.txt","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"        final Ui UI \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"        // Text declarations and initial greeting","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"        final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"        UI.printGreeting();","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"        final FileManager STORAGE \u003d new FileManager();","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"        // Scan data.txt for saved tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"            STORAGE.populateTaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Argh! There was an issue fetching yer saved tasks! Ye must be in the \u0027java\u0027 directory!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"        UI.takeInput();","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"        UI.printExit();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        // Save files to data.txt","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"            STORAGE.populateFile();","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Argh! There was an issue saving yer tasks!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jacob-stein1":41,"-":3}},{"path":"src/main/java/duke/exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * Parent class for all types of exceptions.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public abstract class DukeExceptions extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    private String message;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    private static final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    public DukeExceptions(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"        this.message \u003d errorMsg;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"        return this.message;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"     * Occurs when user attempts to print the task list with no tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    public static class noTasksException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        public noTasksException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(BARRIER + \"\\n\\n\" + errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"     * Occurs when user attempts to submit non-numeric input for a ","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"     * method that is only meant to accept numeric input. For example,","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"     * trying to execute \u0027mark Duke\u0027 will throw the error.","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"    public static class invalidNumberException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"        public invalidNumberException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"     * Occurs when user attempts to mark a completed task as complete,","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"     * or incomplete task as incomplete.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"    public static class taskStatusException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"        public taskStatusException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"     * Occurs when user attempts to execute a command with invalid input","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"     * syntax. For example, the command \u0027event\u0027 must have both a start and","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"     * end time delineated by /to and /from respectively. If either is missing,","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"     * this error will be thrown.","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"    public static class invalidInputStructure extends DukeExceptions {","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"        public invalidInputStructure(String errorMsg) {","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(BARRIER + \"\\n\\n\" + errorMsg + \"\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"jacob-stein1":63}},{"path":"src/main/java/duke/files/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.files;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":" * Manages all file saving and uploading for Duke. Upon cloning,","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":" * user will have an empty data file. When Duke is activated, any","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":" * existing data will be added to the task list. When Duke is closed,","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":" * any tasks in the list will be saved. When Duke is restarted,","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":" * all tasks from data.txt will load to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"public class FileManager {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    private static final String FILEPATH \u003d \"./data.txt\";","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"     * Writes data to a file at a designated path location.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"     * @param FILEPATH Path for file to be written on","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"     * @param textToAdd Text to be added to the file","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"     * @throws IOException Occurs when file can\u0027t be accessed","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    private static void writeToFile(String FILEPATH, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"     * Writes data to a file at a designated path location.","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"     * @param FILEPATH Path for file to be added on","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"     * @param textToAppend Text to be added to the file","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"     * @throws IOException Occurs when file can\u0027t be accessed","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"    private static void appendToFile(String FILEPATH, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH, true); // create a FileWriter in append mode","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"        fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"     * Creates an ArrayList of Strings of each line in a file","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"     * @param FILEPATH Location of the file to be parsed","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"     * @return ArrayList of strings of the file contents","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"     * @throws FileNotFoundException if the file does not exist","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"    private static ArrayList\u003cString\u003e retrieveFileContents(String FILEPATH) throws FileNotFoundException {","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003cString\u003e(); ","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"        File f \u003d new File(FILEPATH); // create a File for the given file path","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"            taskStrings.add(s.nextLine());","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"        return taskStrings;","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"     * Given a string representing a task, creates the task.","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"     * @param parsedTask The parsed version of the task","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"    private static void addTaskFromFile(String parsedTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"        char type \u003d parsedTask.charAt(1); // Type will be at index 1 based on how data is saved","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"        char status \u003d parsedTask.charAt(4); // Status will be at index 4","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"        String description \u003d parsedTask.substring(7); // Description starts at index 7","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"        Task temp;","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"        if (type \u003d\u003d \u0027T\u0027) { // Adding a todo","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Todo(\"todo \" + description);","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) { // Adding a deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"            String dueDate \u003d description.substring(description.indexOf(\":\")+2, description.indexOf(\")\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"        } else { // Adding an event","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"            String startTime \u003d description.substring(description.indexOf(\"from\"), description.indexOf(\"to\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"            String endTime \u003d description.substring(description.indexOf(\"to\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"            endTime \u003d endTime.substring(0, endTime.length()-1);","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"        if (status \u003d\u003d \u0027X\u0027){","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"            temp.isComplete \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"     * Moves all tasks from the file to the task list using helper methods.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"     * @throws Exception Occurs when a helper method hits an exception.","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"    public void populateTaskList() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"jacob-stein1"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"jacob-stein1"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"jacob-stein1"},"content":"                FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"jacob-stein1"},"content":"                fw.write(\"\");","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"jacob-stein1"},"content":"            ArrayList\u003cString\u003e fileContents \u003d retrieveFileContents(FILEPATH);","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"jacob-stein1"},"content":"            for(int i \u003d 0; i\u003cfileContents.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"jacob-stein1"},"content":"                addTaskFromFile(fileContents.get(i));","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"jacob-stein1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Error fetching file contents\");","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"jacob-stein1"},"content":"     * Moves all tasks from the task list to a file using helper methods","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"jacob-stein1"},"content":"     * @throws IOException Occurs when file can\u0027t be accessed","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"jacob-stein1"},"content":"    public void populateFile() throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"jacob-stein1"},"content":"        ArrayList\u003cTask\u003e taskList \u003d TaskList.getTasksArray();","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"jacob-stein1"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"jacob-stein1"},"content":"            writeToFile(FILEPATH, \"\");","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"jacob-stein1"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"jacob-stein1"},"content":"        for(int i \u003d 0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"jacob-stein1"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"jacob-stein1"},"content":"                writeToFile(FILEPATH, taskList.get(i).printTask()+\"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"jacob-stein1"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"jacob-stein1"},"content":"                appendToFile(FILEPATH, taskList.get(i).printTask()+\"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"jacob-stein1":125}},{"path":"src/main/java/duke/input/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.input;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"import duke.files.FileManager;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"public class Parser {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    final static String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"     * Takes input from a user, parses it, and executes based on input.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"     * @param input the command submitted by the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"     * @throws noTasksException if a user prints the list with no tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"     * @throws invalidInputStructure if a user structures command syntax incorrectly","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"     * @throws invalidNumberException if a user submits a non-numeric value incorrectly","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"    public void handleInput(String input) {","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"        // Split user input to check for dyanmic input","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"        String originalInput \u003d input;","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        input \u003d splitInput[0];","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        int numTasks \u003d TaskList.getTasksArray().size();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"        // Switch to check input","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"        switch(input){","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"         * Lists all tasks using the TaskList class printAllTask() method.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"         * No interaction with dynamic input.","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"        case \"list\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"                if(numTasks \u003d\u003d 0) { ","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.noTasksException(\"Ye have no tasks yet, ye lazy buccaneer!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"                if(splitInput.length \u003e 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"                TaskList.printAllTasks();","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"            } catch (DukeExceptions.noTasksException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"         * Marks a task as complete. Throws an error if the user tries to submit a","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"         * task number that is non-positive, non-numeric, or out or rnage of the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"        case \"mark\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"                if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"                if(splitInput.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"                int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"                TaskList.getTasksArray().get(index).markAsComplete();","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"         * Marks a task as incomplete. Throws an error if the user tries to submit a","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"         * task number that is non-positive, non-numeric, or out or rnage of the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"                if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"                if(splitInput.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"                int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"                TaskList.getTasksArray().get(index).unmarkAsComplete();","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"jacob-stein1"},"content":"        // Prints a list of commands and description","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"jacob-stein1"},"content":"        case \"help\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"jacob-stein1"},"content":"            printHelpList();","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"jacob-stein1"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"jacob-stein1"},"content":"        // Adds a new ToDo task","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"jacob-stein1"},"content":"        case \"todo\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"jacob-stein1"},"content":"                Todo temp \u003d new Todo(originalInput);","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"jacob-stein1"},"content":"         * Creates a new deadline task. This will throw an error if","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"jacob-stein1"},"content":"         * the user does not submit a due date for the deadline.","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"jacob-stein1"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"jacob-stein1"},"content":"                String[] slashInput \u003d originalInput.split(\"/\");","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"jacob-stein1"},"content":"                if(slashInput.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"jacob-stein1"},"content":"                // The date starts after the first \u0027/\u0027","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"jacob-stein1"},"content":"                int dateStart \u003d originalInput.indexOf(\"/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"jacob-stein1"},"content":"                // Due date starts after \u0027/by \u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"jacob-stein1"},"content":"                String dueDate \u003d originalInput.substring(dateStart + 4);","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"jacob-stein1"},"content":"                dueDate \u003d processDate(dueDate);","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"jacob-stein1"},"content":"                String parsedDescription \u003d originalInput.substring(0, dateStart - 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription +\u003d \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"jacob-stein1"},"content":"                // Remove the word \u0027deadline\u0027 from the description","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription \u003d parsedDescription.substring(parsedDescription.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"jacob-stein1"},"content":"                Deadline temp \u003d new Deadline(parsedDescription, dueDate);","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"jacob-stein1"},"content":"         * Creates a new event task. This will throw an error if","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"jacob-stein1"},"content":"         * the user does not include a start and end time.","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"jacob-stein1"},"content":"        case \"event\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"jacob-stein1"},"content":"                String[] slashInput \u003d originalInput.split(\"/\");","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"jacob-stein1"},"content":"                if(slashInput.length !\u003d 3) {","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"jacob-stein1"},"content":"                // Split input into description, start, and end","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"jacob-stein1"},"content":"                String[] splitEventInput \u003d originalInput.split(\"/\");","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"jacob-stein1"},"content":"                ","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"jacob-stein1"},"content":"                // Start time comes after \u0027/from\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"jacob-stein1"},"content":"                String start \u003d splitEventInput[1].substring(5);","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"jacob-stein1"},"content":"                start \u003d start.substring(0, start.length() - 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"jacob-stein1"},"content":"                start \u003d processDate(start);","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"jacob-stein1"},"content":"                // End time comes after \u0027/to\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"jacob-stein1"},"content":"                String end \u003d splitEventInput[2].substring(3);","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"jacob-stein1"},"content":"                end \u003d processDate(end);","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":171,"author":{"gitId":"jacob-stein1"},"content":"                String parsedDescription \u003d splitEventInput[0] + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription \u003d parsedDescription.substring(parsedDescription.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":174,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"jacob-stein1"},"content":"                Event temp \u003d new Event(parsedDescription, start, end);","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"jacob-stein1"},"content":"         * Removes a task based on its number in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"jacob-stein1"},"content":"         * Throws an error if the number is non-positive, non-numeric, or out of range.","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"jacob-stein1"},"content":"        case \"delete\": {","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"jacob-stein1"},"content":"                if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"jacob-stein1"},"content":"                        throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"jacob-stein1"},"content":"                if(splitInput.length !\u003d 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"jacob-stein1"},"content":"                    throw new DukeExceptions.invalidInputStructure(\"Argh! Structure ye input correctly!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"jacob-stein1"},"content":"                int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\\nAye! The task be removed:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":198,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"    \" + TaskList.getTasksArray().get(index).printTask());","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"jacob-stein1"},"content":"                TaskList.getTasksArray().remove(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-19"},{"lineNumber":203,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-19"},{"lineNumber":204,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":205,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":207,"author":{"gitId":"jacob-stein1"},"content":"        /**","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"jacob-stein1"},"content":"         * Creates a subset of tasks containing an inputted keyword.","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"jacob-stein1"},"content":"         */","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"jacob-stein1"},"content":"        case \"find\": {","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"jacob-stein1"},"content":"            try {","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"jacob-stein1"},"content":"                // Isolate search key","lastModifiedDate":"2023-02-27"},{"lineNumber":213,"author":{"gitId":"jacob-stein1"},"content":"                String searchKey \u003d originalInput.substring(5);","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":215,"author":{"gitId":"jacob-stein1"},"content":"                // Create and populate list of results","lastModifiedDate":"2023-02-27"},{"lineNumber":216,"author":{"gitId":"jacob-stein1"},"content":"                ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"jacob-stein1"},"content":"                for(int i \u003d 0; i \u003c TaskList.getTasksArray().size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"jacob-stein1"},"content":"                    if (TaskList.getTasksArray().get(i).description.contains(searchKey)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"jacob-stein1"},"content":"                        relevantTasks.add(TaskList.getTasksArray().get(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":220,"author":{"gitId":"jacob-stein1"},"content":"                    }","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":222,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":223,"author":{"gitId":"jacob-stein1"},"content":"                // No results guard clause","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"jacob-stein1"},"content":"                if (relevantTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\\n No tasks found!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"jacob-stein1"},"content":"                    break;","lastModifiedDate":"2023-02-20"},{"lineNumber":227,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":228,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":229,"author":{"gitId":"jacob-stein1"},"content":"                // Output","lastModifiedDate":"2023-02-27"},{"lineNumber":230,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\\nTasks found: \");","lastModifiedDate":"2023-02-20"},{"lineNumber":231,"author":{"gitId":"jacob-stein1"},"content":"                for(int i \u003d 0; i \u003c relevantTasks.size(); i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":232,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(i+1 + \". \" + relevantTasks.get(i).printTask());","lastModifiedDate":"2023-02-20"},{"lineNumber":233,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":234,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER+\"\\n\");","lastModifiedDate":"2023-02-20"},{"lineNumber":235,"author":{"gitId":"jacob-stein1"},"content":"            } finally {","lastModifiedDate":"2023-02-20"},{"lineNumber":236,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-02-20"},{"lineNumber":237,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":238,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":239,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":240,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":241,"author":{"gitId":"jacob-stein1"},"content":"        // Adds a new task if no case is hit","lastModifiedDate":"2023-02-19"},{"lineNumber":242,"author":{"gitId":"jacob-stein1"},"content":"        default: {","lastModifiedDate":"2023-02-19"},{"lineNumber":243,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":244,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Argh! This is not a valid order, type \u0027help\u0027 for assistance!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":245,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":246,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":247,"author":{"gitId":"jacob-stein1"},"content":"        // End of switch","lastModifiedDate":"2023-02-19"},{"lineNumber":248,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":249,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":250,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":251,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":252,"author":{"gitId":"jacob-stein1"},"content":"     * Prints out a list of commands.","lastModifiedDate":"2023-02-27"},{"lineNumber":253,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":254,"author":{"gitId":"jacob-stein1"},"content":"    private static void printHelpList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":255,"author":{"gitId":"jacob-stein1"},"content":"        String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-19"},{"lineNumber":256,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(BARRIER + \"\\n\\nAvast! Here be the commands ye can use to make me do yer bidding!\" + ","lastModifiedDate":"2023-02-19"},{"lineNumber":257,"author":{"gitId":"jacob-stein1"},"content":"                \"\\n- list: lists all current tasks\\n- mark x: marks task x as complete\\n-\" + ","lastModifiedDate":"2023-02-19"},{"lineNumber":258,"author":{"gitId":"jacob-stein1"},"content":"                \"unmark x: unmarks task x as complete\\n- todo \u0027description\u0027: adds a task to do \" + ","lastModifiedDate":"2023-02-19"},{"lineNumber":259,"author":{"gitId":"jacob-stein1"},"content":"                \"with the given description\\n- deadline \u0027description\u0027 /by \u0027deadline\u0027: adds a deadline\" + ","lastModifiedDate":"2023-02-19"},{"lineNumber":260,"author":{"gitId":"jacob-stein1"},"content":"                \" task with the given date and description\\n- event \u0027description\u0027 /from \u0027start\u0027 /to \u0027end\u0027: \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":261,"author":{"gitId":"jacob-stein1"},"content":"                \"adds an event with the start and endtime\\n- bye: exits Duke\\n- find \u0027searchKey\u0027: \" + ","lastModifiedDate":"2023-02-27"},{"lineNumber":262,"author":{"gitId":"jacob-stein1"},"content":"                \"shows all relevant tasks\\n- delete \u0027num\u0027: removes task \u0027num\u0027 from list\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-27"},{"lineNumber":263,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":264,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":265,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":266,"author":{"gitId":"jacob-stein1"},"content":"     * Prints the amount of tasks in the list. ","lastModifiedDate":"2023-02-27"},{"lineNumber":267,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":268,"author":{"gitId":"jacob-stein1"},"content":"    private static void printListLength() {","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"jacob-stein1"},"content":"        int length \u003d TaskList.getTasksArray().size();","lastModifiedDate":"2023-02-19"},{"lineNumber":270,"author":{"gitId":"jacob-stein1"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":271,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Now you have \" + TaskList.getTasksArray().size() + \" task in the list!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":272,"author":{"gitId":"jacob-stein1"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":273,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Now you have \" + TaskList.getTasksArray().size() + \" tasks in the list!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":274,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":275,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":276,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":277,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":278,"author":{"gitId":"jacob-stein1"},"content":"     * Checks if a numeric input is valid. Checks that the dynamic input","lastModifiedDate":"2023-02-27"},{"lineNumber":279,"author":{"gitId":"jacob-stein1"},"content":"     * is non-zero, in the range of the list, and is a numeric value.","lastModifiedDate":"2023-02-27"},{"lineNumber":280,"author":{"gitId":"jacob-stein1"},"content":"     * @param input Dynamic numeric input submitted by the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":281,"author":{"gitId":"jacob-stein1"},"content":"     * @return true if the input is valid, false otherwise.","lastModifiedDate":"2023-02-27"},{"lineNumber":282,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"jacob-stein1"},"content":"    private static boolean isValidInput(String input) {","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"jacob-stein1"},"content":"        char dynamicInput \u003d input.charAt(0);","lastModifiedDate":"2023-02-19"},{"lineNumber":285,"author":{"gitId":"jacob-stein1"},"content":"        boolean isOneChar \u003d input.length() \u003d\u003d 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":286,"author":{"gitId":"jacob-stein1"},"content":"        if (!isOneChar) {","lastModifiedDate":"2023-02-19"},{"lineNumber":287,"author":{"gitId":"jacob-stein1"},"content":"            return false;","lastModifiedDate":"2023-02-19"},{"lineNumber":288,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":289,"author":{"gitId":"jacob-stein1"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":290,"author":{"gitId":"jacob-stein1"},"content":"        boolean isNumber \u003d Character.isDigit(dynamicInput);","lastModifiedDate":"2023-02-19"},{"lineNumber":291,"author":{"gitId":"jacob-stein1"},"content":"        boolean isZero \u003d dynamicInput \u003d\u003d \u00270\u0027;","lastModifiedDate":"2023-02-19"},{"lineNumber":292,"author":{"gitId":"jacob-stein1"},"content":"        boolean isInRange \u003d index \u003c\u003d TaskList.getTasksArray().size() - 1;","lastModifiedDate":"2023-02-19"},{"lineNumber":293,"author":{"gitId":"jacob-stein1"},"content":"        return (isNumber \u0026\u0026 !isZero \u0026\u0026 isInRange);","lastModifiedDate":"2023-02-19"},{"lineNumber":294,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":295,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":296,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":297,"author":{"gitId":"jacob-stein1"},"content":"     * Checks if a date is submitted in the form YYYY-MM-DD.","lastModifiedDate":"2023-02-27"},{"lineNumber":298,"author":{"gitId":"jacob-stein1"},"content":"     * If so, converts it to a more readable format. Otherwise, returns it as is.","lastModifiedDate":"2023-02-27"},{"lineNumber":299,"author":{"gitId":"jacob-stein1"},"content":"     * ","lastModifiedDate":"2023-02-27"},{"lineNumber":300,"author":{"gitId":"jacob-stein1"},"content":"     * @param date The string form of the time.","lastModifiedDate":"2023-02-27"},{"lineNumber":301,"author":{"gitId":"jacob-stein1"},"content":"     * @return The parsed or original date.","lastModifiedDate":"2023-02-27"},{"lineNumber":302,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":303,"author":{"gitId":"jacob-stein1"},"content":"    private static String processDate(String date) {","lastModifiedDate":"2023-02-27"},{"lineNumber":304,"author":{"gitId":"jacob-stein1"},"content":"        if (date.length() \u003d\u003d 10 \u0026\u0026 date.charAt(4) \u003d\u003d \u0027-\u0027 \u0026\u0026 date.charAt(7) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2023-02-27"},{"lineNumber":305,"author":{"gitId":"jacob-stein1"},"content":"            LocalDate dateObj \u003d LocalDate.parse(date);","lastModifiedDate":"2023-02-27"},{"lineNumber":306,"author":{"gitId":"jacob-stein1"},"content":"            return dateObj.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":307,"author":{"gitId":"jacob-stein1"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":308,"author":{"gitId":"jacob-stein1"},"content":"            return date;","lastModifiedDate":"2023-02-27"},{"lineNumber":309,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":310,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":311,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jacob-stein1":311}},{"path":"src/main/java/duke/input/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.input;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import duke.input.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":" * A class to handle greeting, exiting, and accepting input.","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"public class Ui {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    final static String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"        String GREETING \u003d BARRIER + \"\\n\\nAhoy there! I be\\n\" + LOGO + \"\\nWhat can I do for ye?\"+","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"        \"\\nFor a list of commands, type \u0027help\u0027 me hearties!\\n\" + BARRIER + \"\\n\";","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"    public void printExit() {","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        String EXIT \u003d BARRIER + \"\\n\\nFarewell! Hope to see ye again soon, ye scallywag!\\n\" + BARRIER;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(EXIT);","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"     * Creates a Scanner and reads input such that the commands isn\u0027t \u0027bye\u0027","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"    public void takeInput() {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"        final Scanner CONSOLE \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"        String input \u003d CONSOLE.nextLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"            parser.handleInput(input);","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"            input \u003d CONSOLE.nextLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"jacob-stein1":41}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * An extension of the task. Accepts a due data and description.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    // New attribute","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    public String dueDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    // Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"            return \"[D][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"        return \"[D][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":24}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * An extension of the task. Accepts a description and start and end time.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    // Attributes","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    public String startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    public String endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    // Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"        this.startTime \u003d start;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"        this.endTime \u003d end;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"            return \"[E][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"        return \"[E][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":" * Represents a task that needs to be done by the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":" * Has a description of the task, and a state variable isComplete to","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":" * track the tasks completeness. There are many types of tasks,","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":" * including ToDos, Deadlines, and Events.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    // Task class attributes","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    public String description;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    public boolean isComplete;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    // Reusable barrier","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    static final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    // Dynamic task constructor","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        TaskList.add(this);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    // Changes task isComplete attribute to true","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    public void markAsComplete() throws DukeExceptions.taskStatusException {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"            if (this.isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"                throw new DukeExceptions.taskStatusException(\"\\nBlast! This task be already complete, ye swab!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"            this.isComplete \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"\\nNice! I\u0027ve marked this task as done, me hearties!\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"     \" + this.printTask() + \"\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"            // Empty block to continue the program","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"    // Changes task isComplete attribute to false","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"    public void unmarkAsComplete() throws DukeExceptions.taskStatusException {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"        if (!this.isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"            throw new DukeExceptions.taskStatusException(\"\\nBlast! This task be already incomplete, ye bilge rat!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"\\nAye, I\u0027ve marked this task as not done yet, ye scallywag: \\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"     \" + this.printTask() + \"\\n\"  + BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"            // Empty block to continue the program","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"    // Prints the task completion status and description","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete){","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"        return \"[ ] \" + this.description; ","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jacob-stein1":63}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"public class TaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    // Accessor method for TaskList","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    public static ArrayList\u003cTask\u003e getTasksArray() {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"        return tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    // Prints all tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    public static void printAllTasks() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"Time for a productive day, me hearties! Here be yer list of tasks: \");","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"        for(int i \u003d 0; i\u003ctasks.size(); i++){","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println((i+1) + \". \" + tasks.get(i).printTask());","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    public static void add(Task task) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jacob-stein1":25}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * An extension of the task class, and only contains a description.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    // Call task constructor after the word todo","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"        super(description.substring(description.indexOf(\" \") + 1));","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"            return \"[T][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"        return \"[T][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"todo eat breakfast","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"deadline do homework /by Friday","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"event lunch /from noon /to 1 pm","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"watch Netflix","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"unmark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"unmark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"help","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jacob-stein1":12}}]
