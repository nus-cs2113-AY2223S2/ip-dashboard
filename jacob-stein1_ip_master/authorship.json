[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import duke.files.FileManager;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"        // Text declarations and initial greeting","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"        final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"        final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"        final String GREETING \u003d BARRIER + \"\\n\\nAhoy there! I be\\n\" + LOGO + \"\\nWhat can I do for ye?\"+","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        \"\\nFor a list of commands, type \u0027help\u0027 me hearties!\\n\" + BARRIER + \"\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"        final String EXIT \u003d BARRIER + \"\\n\\nFarewell! Hope to see ye again soon, ye scallywag!\\n\" + BARRIER;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        // Scanner declaration and initial input","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"        final Scanner CONSOLE \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"        String input \u003d CONSOLE.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        // Scan data.txt for saved tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"            FileManager.populateTaskList();","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Argh! There was an issue fetching yer saved tasks! Ye must be in the \u0027java\u0027 directory!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"        // Read input such that it is not \"bye\"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"            // Split user input to check for dynamism","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"            String originalInput \u003d input;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"            input \u003d splitInput[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"            int numTasks \u003d Task.getTasksArray().size();","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"            // Switch to check input","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"            switch(input){","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"            // Lists all tasks using the Task class printAllTask() method","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"            case \"list\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"                    if(numTasks \u003d\u003d 0) { ","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"                        throw new DukeExceptions.noTasksException(\"Ye have no tasks yet, ye lazy buccaneer!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"                    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"                    Task.printAllTasks();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"                } catch (DukeExceptions.noTasksException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"                } finally {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"            // Marks a task as complete","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"            case \"mark\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"                    if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"                        throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"                    int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"                    Task.getTasksArray().get(index).markAsComplete();","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"                } finally {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"            // Unmarks a previous completed task","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"            case \"unmark\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"                try {","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"                    if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"                        throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"                    }","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"                    int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"                    Task.getTasksArray().get(index).unmarkAsComplete();","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"                } finally {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"            // Prints a list of commands and description","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"            case \"help\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"jacob-stein1"},"content":"                printHelpList();","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"jacob-stein1"},"content":"            // Adds a new ToDo task","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"jacob-stein1"},"content":"            case \"todo\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"jacob-stein1"},"content":"                Todo temp \u003d new Todo(originalInput);","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"jacob-stein1"},"content":"            // Adds a new Deadline task","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"jacob-stein1"},"content":"            case \"deadline\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"jacob-stein1"},"content":"                // Command input starts after \u0027/\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"jacob-stein1"},"content":"                int commandStart \u003d originalInput.indexOf(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"jacob-stein1"},"content":"                // Due date starts after \u0027/by \u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"jacob-stein1"},"content":"                String dueDate \u003d originalInput.substring(commandStart + 4);","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"jacob-stein1"},"content":"                String parsedDescription \u003d originalInput.substring(0, commandStart - 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription +\u003d \" (by: \" + dueDate + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"jacob-stein1"},"content":"                // Remove the word \u0027deadline\u0027 from the description","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription \u003d parsedDescription.substring(parsedDescription.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"jacob-stein1"},"content":"                Deadline temp \u003d new Deadline(parsedDescription, dueDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"jacob-stein1"},"content":"            // Adds a new Event task","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"jacob-stein1"},"content":"            case \"event\": {","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"jacob-stein1"},"content":"                // Split input into description, start, and end","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"jacob-stein1"},"content":"                String[] splitEventInput \u003d originalInput.split(\"/\");","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"jacob-stein1"},"content":"                // Start time comes after \u0027/from\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"jacob-stein1"},"content":"                String start \u003d splitEventInput[1].substring(5);","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"jacob-stein1"},"content":"                // End time comes after \u0027/to\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"jacob-stein1"},"content":"                String end \u003d splitEventInput[2].substring(3);","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"jacob-stein1"},"content":"                String parsedDescription \u003d splitEventInput[0] + \"(from: \" + start + \"to: \" + end + \")\";","lastModifiedDate":"2023-01-28"},{"lineNumber":133,"author":{"gitId":"jacob-stein1"},"content":"                parsedDescription \u003d parsedDescription.substring(parsedDescription.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"jacob-stein1"},"content":"                Event temp \u003d new Event(parsedDescription, start, end);","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"added: \" + temp.printTask());","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"jacob-stein1"},"content":"                printListLength();","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"jacob-stein1"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"jacob-stein1"},"content":"            case \"delete\": {","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"jacob-stein1"},"content":"                try {","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"jacob-stein1"},"content":"                    if (!isValidInput(splitInput[1])) {","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"jacob-stein1"},"content":"                            throw new DukeExceptions.invalidNumberException(BARRIER + \"\\n\\nBlast! That isn\u0027t a valid number lad!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"jacob-stein1"},"content":"                    }","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"jacob-stein1"},"content":"                    int index \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\\nAye! The task be removed:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(\"    \" + Task.getTasksArray().get(index).printTask());","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"jacob-stein1"},"content":"                    Task.getTasksArray().remove(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"jacob-stein1"},"content":"                    printListLength();","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"jacob-stein1"},"content":"                    System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"jacob-stein1"},"content":"                } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"jacob-stein1"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"jacob-stein1"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"jacob-stein1"},"content":"            // Adds a new task if no case is hit","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"jacob-stein1"},"content":"            default: {","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(\"Argh! This is not a valid order, type \u0027help\u0027 for assistance!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"jacob-stein1"},"content":"                System.out.println(BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"jacob-stein1"},"content":"            // End of switch","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"jacob-stein1"},"content":"            // Reads next input","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"jacob-stein1"},"content":"            input \u003d CONSOLE.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":169,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(EXIT);","lastModifiedDate":"2023-01-28"},{"lineNumber":172,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"jacob-stein1"},"content":"        // Save files to data.txt","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"jacob-stein1"},"content":"            FileManager.populateFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"jacob-stein1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Argh! There was an issue saving yer tasks!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":181,"author":{"gitId":"jacob-stein1"},"content":"    // Local Duke method to list all functions","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"jacob-stein1"},"content":"    public static void printHelpList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"jacob-stein1"},"content":"        String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(BARRIER + \"\\n\\nAvast! Here be the commands ye can use to make me do yer bidding!\" + ","lastModifiedDate":"2023-02-07"},{"lineNumber":185,"author":{"gitId":"jacob-stein1"},"content":"                                    \"\\n- list: lists all current tasks\\n- mark x: marks task x as complete\\n-\" + ","lastModifiedDate":"2023-02-07"},{"lineNumber":186,"author":{"gitId":"jacob-stein1"},"content":"                                    \"unmark x: unmarks task x as complete\\n- todo \u0027description\u0027: adds a task to do \" + ","lastModifiedDate":"2023-02-07"},{"lineNumber":187,"author":{"gitId":"jacob-stein1"},"content":"                                    \"with the given description\\n- deadline \u0027description\u0027 /by \u0027deadline\u0027: adds a deadline\" + ","lastModifiedDate":"2023-02-07"},{"lineNumber":188,"author":{"gitId":"jacob-stein1"},"content":"                                    \" task with the given date and description\\n- event \u0027description\u0027 /from \u0027start\u0027 /to \u0027end\u0027: \" +","lastModifiedDate":"2023-02-07"},{"lineNumber":189,"author":{"gitId":"jacob-stein1"},"content":"                                    \"adds an event with the start and endtime\\n- bye: exits Duke\\n- anything else: \" + ","lastModifiedDate":"2023-02-07"},{"lineNumber":190,"author":{"gitId":"jacob-stein1"},"content":"                                    \"adds a basic task with the given description\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"jacob-stein1"},"content":"    public static void printListLength() {","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"jacob-stein1"},"content":"        int length \u003d Task.getTasksArray().size();","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"jacob-stein1"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Now you have \" + Task.getTasksArray().size() + \" task in the list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"jacob-stein1"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":198,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Now you have \" + Task.getTasksArray().size() + \" tasks in the list!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":199,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":200,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"jacob-stein1"},"content":"    public static boolean isValidInput(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"jacob-stein1"},"content":"        char dynamicInput \u003d input.charAt(0);","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"jacob-stein1"},"content":"        boolean isOneChar \u003d input.length() \u003d\u003d 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"jacob-stein1"},"content":"        if (!isOneChar) {","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"jacob-stein1"},"content":"            return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":207,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"jacob-stein1"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"jacob-stein1"},"content":"        boolean isNumber \u003d Character.isDigit(dynamicInput);","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"jacob-stein1"},"content":"        boolean isZero \u003d dynamicInput \u003d\u003d \u00270\u0027;","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"jacob-stein1"},"content":"        boolean isInRange \u003d index \u003c\u003d Task.getTasksArray().size() - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"jacob-stein1"},"content":"        return (isNumber \u0026\u0026 !isZero \u0026\u0026 isInRange);","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jacob-stein1":207,"-":7}},{"path":"src/main/java/duke/exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public abstract class DukeExceptions extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    private String message;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    private static final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    public DukeExceptions(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"        this.message \u003d errorMsg;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"        return this.message;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    public static class noTasksException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"        public noTasksException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(BARRIER + \"\\n\\n\" + errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"    public static class invalidNumberException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        public invalidNumberException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"    public static class taskStatusException extends DukeExceptions {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"        public taskStatusException(String errorMsg) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"            super(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(errorMsg);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"jacob-stein1":37}},{"path":"src/main/java/duke/files/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.files;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import java.io.File;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"import duke.tasks.*;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"/* ","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    Upon cloning, user will have an empty data file duke/files/data.txt","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    After first use, all tasks on the user list will save in data.txt","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    When Duke is restarted, all tasks from data.txt will load to the list","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"*/","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"public class FileManager {","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    private static final String filePath \u003d \"duke/files/data.txt\";","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    // Write to a file","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    // Append to a file","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"        fw.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"    // Retrieve the contents of a file as an array of strings where each line is a string","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"    private static ArrayList\u003cString\u003e retrieveFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003cString\u003e(); ","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            taskStrings.add(s.nextLine());","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"        return taskStrings;","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"    // Parse a string and create and add a task from it","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"    private static void addTaskFromFile(String parsedTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"        char type \u003d parsedTask.charAt(1); // Type will be at index 1 based on how data is saved","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"        char status \u003d parsedTask.charAt(4); // Status will be at index 4","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"        String description \u003d parsedTask.substring(7); // Description starts at index 7","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"        Task temp;","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"        if (type \u003d\u003d \u0027T\u0027) { // Adding a todo","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Todo(description);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) { // Adding a deadline","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"            String dueDate \u003d description.substring(description.indexOf(\":\")+2, description.indexOf(\")\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"        } else { // Adding an event","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"            String startTime \u003d description.substring(description.indexOf(\"from\"), description.indexOf(\"to\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"            String endTime \u003d description.substring(description.indexOf(\"to\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"            endTime \u003d endTime.substring(0, endTime.length()-1);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"            temp \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"        if (status \u003d\u003d \u0027X\u0027){","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"            temp.isComplete \u003d true;","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"    // Parse all tasks from the file to list","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"    public static void populateTaskList() throws FileNotFoundException {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"            ArrayList\u003cString\u003e fileContents \u003d retrieveFileContents(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"            for(int i \u003d 0; i\u003cfileContents.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"                addTaskFromFile(fileContents.get(i));","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Error fetching file contents\");","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"    // Parse all tasks from list to file","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"    public static void populateFile() throws IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"        ArrayList\u003cTask\u003e taskList \u003d Task.getTasksArray();","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"        for(int i \u003d 0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"                writeToFile(filePath, taskList.get(i).printTask()+\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"            } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"                appendToFile(filePath, taskList.get(i).printTask()+\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"jacob-stein1":91}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    // New attribute","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"    public String dueDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    // Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"            return \"[D][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"        return \"[D][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":21}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    // Attributes","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"    public String startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    public String endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    // Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"        this.startTime \u003d start;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"        this.endTime \u003d end;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"            return \"[E][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        return \"[E][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":23}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"     ArrayList of all tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"     All subclasses of Task call the parent constructor, which adds them to the list","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(); ","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    // Task class attributes","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    public String description;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    public boolean isComplete;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    // Reusable barrier","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"    public static final String BARRIER \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    // Sets default task to no description and incomplete then adds to list","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    public Task() {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        tasks.add(this);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    // Dynamic task constructor","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"        tasks.add(this);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"    // Changes task isComplete attribute to true","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"    public void markAsComplete() throws DukeExceptions.taskStatusException {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"            if (this.isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"                throw new DukeExceptions.taskStatusException(\"\\nBlast! This task be already complete, ye swab!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            this.isComplete \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"\\nNice! I\u0027ve marked this task as done, me hearties!\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"     \" + this.printTask() + \"\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"            // Empty block to continue the program","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"    // Changes task isComplete attribute to true","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"    public void unmarkAsComplete() throws DukeExceptions.taskStatusException {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"        if (!this.isComplete) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"            throw new DukeExceptions.taskStatusException(\"\\nBlast! This task be already incomplete, ye bilge rat!\\n\" + BARRIER + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"\\nAye, I\u0027ve marked this task as not done yet, ye scallywag: \\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"     \" + this.printTask() + \"\\n\"  + BARRIER + \"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"            // Empty block to continue the program","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"    // Prints the task completion status and description","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete){","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"        return \"[ ] \" + this.description; ","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"    // Accessor method for the list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"    public static ArrayList\u003cTask\u003e getTasksArray() {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"        return tasks;","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"    // Prints all tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"    public static void printAllTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"        System.out.println(\"Time for a productive day, me hearties! Here be yer list of tasks: \");","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"        for(int i \u003d 0; i\u003ctasks.size(); i++){","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println((i+1) + \". \" + tasks.get(i).printTask());","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"jacob-stein1":83}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    // Call task constructor after the word todo","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"        super(description.substring(description.indexOf(\" \") + 1));","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    // Overriden printTask method","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"        if (this.isComplete) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"            return \"[T][X] \" + this.description;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"        return \"[T][ ] \" + this.description; ","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"jacob-stein1":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"todo eat breakfast","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"deadline do homework /by Friday","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"event lunch /from noon /to 1 pm","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"watch Netflix","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"unmark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"unmark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"help","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"jacob-stein1":12}}]
