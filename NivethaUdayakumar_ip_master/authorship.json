[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"        printWelcomeMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\"loading stored data \u003e\u003e\u003e Here is the content we found: \");","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"ip/src/main/java/DukeData.txt\");","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"        File f \u003d new java.io.File(path.toUri());","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"            printFileContents(f);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"            addFileContents(f, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"        while (true) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (\"bye\".equalsIgnoreCase(line)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"                printByeMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"                executeDukeCommands(f, line, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ ERROR! Sorry, this is not a recognized Duke command!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Hello! I\u0027m Duke, your personal task manager.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Reads contents of DukeData file and adds them to the Tasks ArrayList.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param f     The DukeData file holding the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks The ArrayList holding the task objects.","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws IOException if there is some error in file reading.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void addFileContents(File f, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (line.charAt(3) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"                tasks.add(new Todo(line.substring(9)));","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (line.charAt(3) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":"                readDeadlineIntoTasksList(tasks, line);","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (line.charAt(3) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"                readEventIntoTasksList(tasks, line);","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (line.charAt(6) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"                tasks.get(index).setTaskStatus(true);","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (line.charAt(6) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"                tasks.get(index).setTaskStatus(false);","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"NivethaUdayakumar"},"content":"            index++;","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Reads deadline tasks into tasks list.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks The ArrayList holding the task objects.","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The deadline to be read into tasks ArrayList.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void readDeadlineIntoTasksList(ArrayList\u003cTask\u003e tasks, String line) {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"NivethaUdayakumar"},"content":"        int byIndex \u003d line.indexOf(\"(by\");","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"NivethaUdayakumar"},"content":"        String taskDescription \u003d line.substring(9, byIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"NivethaUdayakumar"},"content":"        String deadline \u003d line.substring(byIndex + 4, line.length() - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Reads event tasks into tasks list.","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks The ArrayList holding the task objects.","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The event to be read into tasks ArrayList.","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void readEventIntoTasksList(ArrayList\u003cTask\u003e tasks, String line) {","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"NivethaUdayakumar"},"content":"        //index of event start date/time","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"NivethaUdayakumar"},"content":"        int fromIndex \u003d line.indexOf(\"(from\");","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"NivethaUdayakumar"},"content":"        String event \u003d line.substring(9, fromIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"NivethaUdayakumar"},"content":"        //index of event end date/time","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"NivethaUdayakumar"},"content":"        int toIndex \u003d line.indexOf(\"to\");","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"NivethaUdayakumar"},"content":"        String eventStart \u003d line.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"NivethaUdayakumar"},"content":"        String eventEnd \u003d line.substring(toIndex + 3, line.length() - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.add(new Event(event, eventStart, eventEnd));","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printFileContents(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"NivethaUdayakumar"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"NivethaUdayakumar"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(s.nextLine());","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void clearFileContents(File f) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"NivethaUdayakumar"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"NivethaUdayakumar"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"NivethaUdayakumar"},"content":"        fw.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void appendToFile(File f, String textToAppend) throws IOException {","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"NivethaUdayakumar"},"content":"        FileWriter fw \u003d new FileWriter(f, true); // create a FileWriter in append mode","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"NivethaUdayakumar"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"NivethaUdayakumar"},"content":"        fw.close();","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Executes duke commands: list, mark, unmark, todo, deadline, and event with exception handling.","lastModifiedDate":"2023-02-05"},{"lineNumber":147,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":148,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param f       The DukeData file holding the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param command The user inputted command.","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks   An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":151,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws DukeException if input is not any of the supported duke commands.","lastModifiedDate":"2023-02-05"},{"lineNumber":152,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":153,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void executeDukeCommands(File f, String command, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (command.trim().equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"NivethaUdayakumar"},"content":"            printAllTasks(f, tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"NivethaUdayakumar"},"content":"                markTaskAsComplete(command, tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":160,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":161,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ ERROR! this task to mark is not recognized.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":163,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":164,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":165,"author":{"gitId":"NivethaUdayakumar"},"content":"                markTaskAsNotComplete(command, tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":166,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ ERROR! this task to unmark is not recognized.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":168,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":171,"author":{"gitId":"NivethaUdayakumar"},"content":"                addTodo(command, tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ OOPS!! todo description cannot be empty!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":174,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":175,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":176,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":177,"author":{"gitId":"NivethaUdayakumar"},"content":"                addDeadline(command, tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":178,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":179,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ Sorry! your deadline description is invalid!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":180,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":181,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"NivethaUdayakumar"},"content":"                addEvent(command, tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ Sorry! your event description is invalid!\");","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else if (command.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"NivethaUdayakumar"},"content":"                deleteTask(tasks, command);","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"â˜¹ ERROR! this task to delete is not recognized.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":194,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-04"},{"lineNumber":195,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":196,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":199,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Adds a new todo to the ArrayList of task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":200,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The todo description.","lastModifiedDate":"2023-02-05"},{"lineNumber":202,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":203,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":204,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":205,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void addTodo(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":206,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.add(new Todo(line.substring(5)));","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"NivethaUdayakumar"},"content":"        int taskCount \u003d getTaskIndex(tasks, line.substring(5));","lastModifiedDate":"2023-02-04"},{"lineNumber":208,"author":{"gitId":"NivethaUdayakumar"},"content":"        printTaskAddedDescription(tasks, taskCount);","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":211,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":212,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Adds a new event to the ArrayList of task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":213,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":214,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The event description.","lastModifiedDate":"2023-02-05"},{"lineNumber":215,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":216,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":217,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":218,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void addEvent(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":219,"author":{"gitId":"NivethaUdayakumar"},"content":"        //index of event start date/time","lastModifiedDate":"2023-02-04"},{"lineNumber":220,"author":{"gitId":"NivethaUdayakumar"},"content":"        int fromIndex \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-02-04"},{"lineNumber":221,"author":{"gitId":"NivethaUdayakumar"},"content":"        String event \u003d line.substring(6, fromIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":222,"author":{"gitId":"NivethaUdayakumar"},"content":"        //index of event end date/time","lastModifiedDate":"2023-02-04"},{"lineNumber":223,"author":{"gitId":"NivethaUdayakumar"},"content":"        int toIndex \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-02-04"},{"lineNumber":224,"author":{"gitId":"NivethaUdayakumar"},"content":"        String eventStart \u003d line.substring(fromIndex + 6, toIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":225,"author":{"gitId":"NivethaUdayakumar"},"content":"        String eventEnd \u003d line.substring(toIndex + 4);","lastModifiedDate":"2023-02-04"},{"lineNumber":226,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.add(new Event(event, eventStart, eventEnd));","lastModifiedDate":"2023-02-04"},{"lineNumber":227,"author":{"gitId":"NivethaUdayakumar"},"content":"        int taskCount \u003d getTaskIndex(tasks, event);","lastModifiedDate":"2023-02-04"},{"lineNumber":228,"author":{"gitId":"NivethaUdayakumar"},"content":"        printTaskAddedDescription(tasks, taskCount);","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":230,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":231,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":232,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Adds a new deadline to the ArrayList of task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":233,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":234,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The deadline description.","lastModifiedDate":"2023-02-05"},{"lineNumber":235,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":236,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":237,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":238,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void addDeadline(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":239,"author":{"gitId":"NivethaUdayakumar"},"content":"        //index of deadline due date/time","lastModifiedDate":"2023-02-04"},{"lineNumber":240,"author":{"gitId":"NivethaUdayakumar"},"content":"        int byIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-02-04"},{"lineNumber":241,"author":{"gitId":"NivethaUdayakumar"},"content":"        String taskDescription \u003d line.substring(9, byIndex);","lastModifiedDate":"2023-02-04"},{"lineNumber":242,"author":{"gitId":"NivethaUdayakumar"},"content":"        String deadline \u003d line.substring(byIndex + 4);","lastModifiedDate":"2023-02-04"},{"lineNumber":243,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2023-02-04"},{"lineNumber":244,"author":{"gitId":"NivethaUdayakumar"},"content":"        int taskCount \u003d getTaskIndex(tasks, taskDescription);","lastModifiedDate":"2023-02-04"},{"lineNumber":245,"author":{"gitId":"NivethaUdayakumar"},"content":"        printTaskAddedDescription(tasks, taskCount);","lastModifiedDate":"2023-02-12"},{"lineNumber":246,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":247,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Deletes the task from the ArrayList of task objects.","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param task  The command to delete the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String task) {","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d Integer.parseInt(task.trim().substring(7));","lastModifiedDate":"2023-02-12"},{"lineNumber":256,"author":{"gitId":"NivethaUdayakumar"},"content":"        String description \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":257,"author":{"gitId":"NivethaUdayakumar"},"content":"        printTaskDeletedDescription(tasks, description);","lastModifiedDate":"2023-02-12"},{"lineNumber":258,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":260,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":261,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":262,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Returns the index of a particular task from the ArrayList.","lastModifiedDate":"2023-02-05"},{"lineNumber":263,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":264,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks       An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":265,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":266,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @return index of task.","lastModifiedDate":"2023-02-05"},{"lineNumber":267,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":268,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":269,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static int getTaskIndex(ArrayList\u003cTask\u003e tasks, String description) {","lastModifiedDate":"2023-02-04"},{"lineNumber":270,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-02-04"},{"lineNumber":271,"author":{"gitId":"NivethaUdayakumar"},"content":"        for (Task myObj : tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":272,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (description.equalsIgnoreCase(myObj.getDescription())) {","lastModifiedDate":"2023-02-05"},{"lineNumber":273,"author":{"gitId":"NivethaUdayakumar"},"content":"                return index;","lastModifiedDate":"2023-02-04"},{"lineNumber":274,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":275,"author":{"gitId":"NivethaUdayakumar"},"content":"            index++;","lastModifiedDate":"2023-02-04"},{"lineNumber":276,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":277,"author":{"gitId":"NivethaUdayakumar"},"content":"        return -1;","lastModifiedDate":"2023-02-04"},{"lineNumber":278,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":279,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":280,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":281,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Prints all tasks in the ArrayList.","lastModifiedDate":"2023-02-05"},{"lineNumber":282,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":283,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param f     The DukeData file holding the data.","lastModifiedDate":"2023-02-12"},{"lineNumber":284,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":285,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":286,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":287,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printAllTasks(File f, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":288,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":290,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":291,"author":{"gitId":"NivethaUdayakumar"},"content":"            clearFileContents(f);","lastModifiedDate":"2023-02-12"},{"lineNumber":292,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":293,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"NivethaUdayakumar"},"content":"        for (Task userTask : tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":296,"author":{"gitId":"NivethaUdayakumar"},"content":"            //print Task Description","lastModifiedDate":"2023-02-04"},{"lineNumber":297,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"  \" + index + \".\" + userTask.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":298,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-02-12"},{"lineNumber":299,"author":{"gitId":"NivethaUdayakumar"},"content":"                appendToFile(f, userTask + System.lineSeparator());","lastModifiedDate":"2023-02-12"},{"lineNumber":300,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":301,"author":{"gitId":"NivethaUdayakumar"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":302,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":303,"author":{"gitId":"NivethaUdayakumar"},"content":"            index++;","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":305,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":306,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":307,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":308,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Marks the task as not complete.","lastModifiedDate":"2023-02-05"},{"lineNumber":309,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":310,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":311,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":312,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":313,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":314,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void markTaskAsNotComplete(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":315,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d Integer.parseInt(line.trim().substring(7));","lastModifiedDate":"2023-02-12"},{"lineNumber":316,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.get(index - 1).setTaskStatus(false);","lastModifiedDate":"2023-02-04"},{"lineNumber":317,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Okay, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":318,"author":{"gitId":"NivethaUdayakumar"},"content":"        //print Task Description","lastModifiedDate":"2023-02-04"},{"lineNumber":319,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":320,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":321,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":322,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":323,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Marks the task as complete.","lastModifiedDate":"2023-02-05"},{"lineNumber":324,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":325,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param line  The description of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":326,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":327,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":328,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":329,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void markTaskAsComplete(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":330,"author":{"gitId":"NivethaUdayakumar"},"content":"        int index \u003d Integer.parseInt(line.trim().substring(5));","lastModifiedDate":"2023-02-12"},{"lineNumber":331,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.get(index - 1).setTaskStatus(true);","lastModifiedDate":"2023-02-04"},{"lineNumber":332,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":333,"author":{"gitId":"NivethaUdayakumar"},"content":"        //print Task Description","lastModifiedDate":"2023-02-04"},{"lineNumber":334,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":335,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":336,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":337,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":338,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Prints the description of the added task.","lastModifiedDate":"2023-02-05"},{"lineNumber":339,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-05"},{"lineNumber":340,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks     An ArrayList holding the task objects.","lastModifiedDate":"2023-02-05"},{"lineNumber":341,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param taskIndex The index of the task.","lastModifiedDate":"2023-02-05"},{"lineNumber":342,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":343,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printTaskAddedDescription(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-02-12"},{"lineNumber":344,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":345,"author":{"gitId":"NivethaUdayakumar"},"content":"        //print Task Description","lastModifiedDate":"2023-02-04"},{"lineNumber":346,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":347,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Now you have \" + tasks.size() + \" tasks in your list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":348,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":349,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":350,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":351,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Prints the description of the added task.","lastModifiedDate":"2023-02-12"},{"lineNumber":352,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":353,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks       An ArrayList holding the task objects.","lastModifiedDate":"2023-02-12"},{"lineNumber":354,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-12"},{"lineNumber":355,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":356,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printTaskDeletedDescription(ArrayList\u003cTask\u003e tasks, String description) {","lastModifiedDate":"2023-02-12"},{"lineNumber":357,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Noted. I\u0027ve deleted this task:\");","lastModifiedDate":"2023-02-11"},{"lineNumber":358,"author":{"gitId":"NivethaUdayakumar"},"content":"        //print Task Description","lastModifiedDate":"2023-02-11"},{"lineNumber":359,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(description);","lastModifiedDate":"2023-02-12"},{"lineNumber":360,"author":{"gitId":"NivethaUdayakumar"},"content":"        int items \u003d tasks.size() - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":361,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Now you have \" + items + \" tasks in your list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":362,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":363,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":364,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":365,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":366,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NivethaUdayakumar":358,"-":10}},{"path":"src/main/java/DukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"  [T][X] read book","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"  [E][ ] road show (from Monday 3pm to 7pm)","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"  [D][ ] submit report (by 10pm)","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"NivethaUdayakumar":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package duke.exception;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"NivethaUdayakumar":4}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"        return \"  [D]\" + \"[\" + getStatusIcon() +\"] \" + super.getDescription() + \"(by \" + by + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"NivethaUdayakumar":16}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"        return \"  [E]\" + \"[\" + getStatusIcon() +\"] \" + super.getDescription() + \"(from \" + from + \"to \" + to + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"NivethaUdayakumar":18}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected String description;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"        return description;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void setTaskStatus(boolean status) {","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"NivethaUdayakumar":24}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"        super(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"        return \"  [T]\" + \"[\" + getStatusIcon() +\"] \" + super.getDescription();","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"NivethaUdayakumar":13}},{"path":"src/out/production/ip/DukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"  1.  [T][ ] read book","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"NivethaUdayakumar":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"todo read book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"deadline return book /by Monday 5pm","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"event project meeting /from Tuesday 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"mark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"todo","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"deadline dfsfs","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"event sjfsfj /from cdfhsk","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"blahh","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"NivethaUdayakumar":14}}]
