[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"### Add Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"You can add your todos, deadlines and events one by one into a list.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"### Change Task status","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"After you complete a task, you can mark it as done. ","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"If you find out you did not finish the task, you can \"unmark\" the status to not done yet.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"### List All Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"List all the tasks you have added.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"### Delete a Task","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"You can delete a task by entering its index number.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"### Find Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"You can search for tasks that contain a certain keyword.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"n.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"### Save Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"When you end the application, the tasks you added will be automatically stored in a local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"The next time when you start the application, the task data stored in the local file will be loaded","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"into the task list in your current session.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"`todo {task description}`","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"`todo eat`","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"A todo type of task with the default status of \"not done yet\" is added","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"into the task list. `[T]` shows the task is a todo. `[ ]` shows the task has not been done yet. The total number of tasks in the list will also be shown. ","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"  [T][ ] eat","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"### `deadline` - Add a task with a deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"`deadline {task description} /by {task deadline}`","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"`deadline finish ip /by today`","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"xiaoge26"},"content":"A deadline type of task with the default status of \"not done yet\" is added","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"xiaoge26"},"content":"into the task list. `[D]` shows the task has a deadline. `[ ]` shows the task has not been done yet.","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"xiaoge26"},"content":"The total number of tasks in the list will also be shown.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"xiaoge26"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"xiaoge26"},"content":"  [D][ ] finish ip  (by: today)","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"xiaoge26"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"xiaoge26"},"content":"### `event` - Add a task with both start and end time","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"xiaoge26"},"content":"`event {event description} /from {start time} /to {end time}`","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"xiaoge26"},"content":"`event CS2113 lecture /from 4pm /to 6pm`","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"xiaoge26"},"content":"A deadline type of task with the default status of \"not done yet\" is added","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"xiaoge26"},"content":"into the task list. `[E]` shows the task is an event. `[ ]` shows the task has not been done yet.","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"xiaoge26"},"content":"The total number of tasks in the list will also be shown.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"xiaoge26"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"xiaoge26"},"content":"  [E][ ] CS2113 lecture  (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"xiaoge26"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"xiaoge26"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"xiaoge26"},"content":"`delete {index number}`","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"xiaoge26"},"content":"`delete 3`","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"xiaoge26"},"content":"The task with the index number will be deleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"xiaoge26"},"content":"Got it. I\u0027ve deleted this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"xiaoge26"},"content":"  [E][ ] CS2113 lecture  (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"xiaoge26"},"content":"### `mark` - Mark the task as done","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"xiaoge26"},"content":"`mark {index number}`","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"xiaoge26"},"content":"`mark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"xiaoge26"},"content":"The task status with the index number will be marked as done. `[X]` means that","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"xiaoge26"},"content":"the task has been done.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"xiaoge26"},"content":"Nice! I\u0027ve marked this task as DONE:","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"xiaoge26"},"content":"  [T][X] eat","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"xiaoge26"},"content":"### `unmark` - Mark the task as not done yet","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"xiaoge26"},"content":"`unmark {index number}`","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"xiaoge26"},"content":"`unmark 1`","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"xiaoge26"},"content":"The task status with the index number will be marked as not done yet.","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"xiaoge26"},"content":"OK! I\u0027ve marked this task as NOT DONE YET:","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"xiaoge26"},"content":"  [T][ ] eat","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"xiaoge26"},"content":"### `find` - Search tasks containing a keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"xiaoge26"},"content":"`find {keyword}`","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"xiaoge26"},"content":"`find eat`","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"xiaoge26"},"content":"A list of matching tasks will be shown.","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"xiaoge26"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"xiaoge26"},"content":"1. [T][ ] eat","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"xiaoge26"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"xiaoge26"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"xiaoge26"},"content":"`list`","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"xiaoge26"},"content":"All tasks will be shown with their index number, in the order in which they were added.","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"xiaoge26"},"content":"Here is your list!","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"xiaoge26"},"content":"────────────────────────────────────────────────────────────────────────","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"xiaoge26"},"content":"1. [T][ ] eat","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"xiaoge26"},"content":"2. [D][ ] finish ip  (by: today)","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"xiaoge26"},"content":"### `guide` - Show user guide","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"xiaoge26"},"content":"`guide`","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"xiaoge26"},"content":"`guide`","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"xiaoge26"},"content":"A summary of the keywords in the user guide will be shown.","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"xiaoge26"},"content":"User Guide","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"xiaoge26"},"content":"list: get the list of all tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"xiaoge26"},"content":"todo: add a task a task without duration or deadline to the list","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"xiaoge26"},"content":"deadline: add a task with deadline to the list","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"xiaoge26"},"content":"event: add a task with both starting and ending time","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"xiaoge26"},"content":"mark: mark a task as \u0027done\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"xiaoge26"},"content":"unmark: mark a task as \u0027not done\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"xiaoge26"},"content":"delete: delete a task from the list","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"xiaoge26"},"content":"find: find tasks from the list that match the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"xiaoge26"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"xiaoge26"},"content":"### `bye` - End the application","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"xiaoge26"},"content":"Template of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"xiaoge26"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"xiaoge26"},"content":"Example of usage:","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"xiaoge26"},"content":"`bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"xiaoge26"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":241,"author":{"gitId":"xiaoge26"},"content":"A farewell message will be shown. Application will then be ended.","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"xiaoge26"},"content":"The task data will be stored in a local file.","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":244,"author":{"gitId":"xiaoge26"},"content":" Bye. Hope to see you again soon meow!","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"xiaoge26":220,"-":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"import duke.storage.DataManager;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":" * Initializes the application.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":" * Reads the datafile and loops commands.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":" * Main class for the application.","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"    public Ui ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"    public Parser parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"    public Storage originalFile;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"    public Duke () {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"        this.parser \u003d new Parser(this.taskList, this.ui);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"        this.originalFile \u003d new Storage(FILE_LOCATION);","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"    public static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"    /**The file location to store the task list data.*/","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"    public static String FILE_LOCATION \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"     * Interacts with user by loading existing data and loop commands.","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"     * Passes the user inputs into Parser object.","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"     * Prints exit message when user types \u003ccode\u003ebye\u003c/code\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"     * Rewrites the local file with the updated task list and then ends application.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"     *  @param args The configuration parameters passed into the main function in Java.","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"     *  @throws DukeException If user input does not follow the guideline.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"     *  @throws IOException If I/O errors occur when reading or writing file.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"        Duke ashy \u003d new Duke();","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"        ashy.ui.printGreetingMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"        ashy.taskList.list \u003d ashy.originalFile.loadData();","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"        ashy.taskList.currentTaskNum \u003d ashy.taskList.list.size();","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"        String userInput \u003d input.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"            ashy.parser.doCommand(userInput);","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"            userInput \u003d input.nextLine();","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"        ashy.ui.printFarewellMessage();","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"        DataManager dataManager\u003d new DataManager(FILE_LOCATION, ashy.taskList.list);","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"        dataManager.writeToFileWithErrorHandler();","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"xiaoge26":54,"-":3}},{"path":"src/main/java/duke/storage/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":" * Saves the updated task list to the file in designated file path.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"public class DataManager {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"    protected final String filePath;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"    protected final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"    public DataManager(String filePath, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"     * Writes to the existing local file according to the file path in this class.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If the file is not found or cannot be accessed.","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"            fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"        fw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"     * Creates a file in the designated file path in the class.","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If the file cannot be created.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"        file.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"     * Updates the file with new task list according to the file path in this class.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"     * If the file is not found, creates a file in the designated file path in the class and then writes to the file.","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If the file cannot be created.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"    public void writeToFileWithErrorHandler() throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"            writeToFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"Meow! Something went wrong: \" + e.getMessage()","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"                    + System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"                createFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"xiaoge26"},"content":"            } catch (IOException error){","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"xiaoge26"},"content":"                System.out.println(\"Meow! Failed to create a file: \" + e.getMessage()","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"xiaoge26"},"content":"                        + System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"xiaoge26"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"File Created!\");","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"xiaoge26"},"content":"        writeToFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"xiaoge26":72}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.storage;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"import duke.utils.Ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"import java.io.File;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":" * Loads the stored task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":" * If the local file is not found, creates a new one.","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":" * Some methods are adapted from the class demonstration project \"TaskS\" created by","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":" * Professor Akshay Narayan.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":" * The original code can be found at :","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":" * \u003ca href\u003d\"https://github.com/nus-cs2113-AY2223S2/TaskS/blob/master/src/se/edu/inclass/data/DataManager.java\"\u003e...\u003c/a\u003e.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"public class Storage {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"    private File dataFile;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"    protected final String filePath;","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"        this.dataFile \u003d new File(this.filePath);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"    public File getDataFile() {","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"        return dataFile;","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"     * Creates a new file according to the file path.","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"     * If the directory in the file path does not exist, creates one.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If I/O errors occur when creating file.","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"        file.createNewFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"     * Reads the local file which stores the task data.","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"     * Reuses the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"     * @return Task list stored in the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If the file cannot be created.","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"    private ArrayList\u003cString\u003e readFile() throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"xiaoge26"},"content":"        if (dataFile.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"xiaoge26"},"content":"            throw new IOException();","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"xiaoge26"},"content":"        ArrayList\u003cString\u003e dataItems \u003d (ArrayList\u003cString\u003e) Files.readAllLines(dataFile.toPath(), Charset.defaultCharset());","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"xiaoge26"},"content":"        return dataItems;","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"xiaoge26"},"content":"     * Loads tasks in the local file to an arraylist by parsing them.","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"xiaoge26"},"content":"     * If the file is not found, creates one.","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"xiaoge26"},"content":"     * Adapted from the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"xiaoge26"},"content":"     * @return Task list stored in the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"xiaoge26"},"content":"     * @throws IOException If the file cannot be created.","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"xiaoge26"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException {","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"xiaoge26"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"xiaoge26"},"content":"            ArrayList\u003cString\u003e dataItems \u003d readFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"xiaoge26"},"content":"            tasks \u003d parse(dataItems);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"xiaoge26"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"xiaoge26"},"content":"            try {","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"xiaoge26"},"content":"                createFile();","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"xiaoge26"},"content":"            } catch (IOException error) {","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"xiaoge26"},"content":"                System.out.println(\"Meow! Failed to create a file: \" + e.getMessage()","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"xiaoge26"},"content":"                        + System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"xiaoge26"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"A new local file created to store your tasks!\"","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"xiaoge26"},"content":"                    + System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"xiaoge26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"Empty local file! Time to add some tasks!\"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"xiaoge26"},"content":"                    + System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"xiaoge26"},"content":"        return tasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"xiaoge26"},"content":"     * Parse the data items into tasks and stores them in a task list.","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"xiaoge26"},"content":"     * Adapted from the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"xiaoge26"},"content":"     * @param dataItems A list of data items that are read from the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"xiaoge26"},"content":"     * @return Updated task list as an arraylist of tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"xiaoge26"},"content":"    private ArrayList\u003cTask\u003e parse(ArrayList\u003cString\u003e dataItems) {","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"xiaoge26"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"xiaoge26"},"content":"        for (String line : dataItems) {","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"xiaoge26"},"content":"            String taskType \u003d getTaskType(line);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"xiaoge26"},"content":"            String taskDescription \u003d getTaskDescription(line);","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"xiaoge26"},"content":"            String taskStatus \u003d getTaskStatus(line);","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"xiaoge26"},"content":"            switch (taskType) {","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"xiaoge26"},"content":"            case \"T\":","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"xiaoge26"},"content":"                Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"xiaoge26"},"content":"                if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"xiaoge26"},"content":"                    todo.setDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"xiaoge26"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"xiaoge26"},"content":"                allTasks.add(todo);","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"xiaoge26"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"xiaoge26"},"content":"            case \"D\":","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"xiaoge26"},"content":"                Deadline deadline \u003d new Deadline(getTrimmedDescription(taskDescription),","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"xiaoge26"},"content":"                        getDeadline(taskDescription));","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"xiaoge26"},"content":"                if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"xiaoge26"},"content":"                    deadline.setDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"xiaoge26"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"xiaoge26"},"content":"                allTasks.add(deadline);","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"xiaoge26"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"xiaoge26"},"content":"            case \"E\":","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"xiaoge26"},"content":"                Event event \u003d new Event(getTrimmedDescription(taskDescription),","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"xiaoge26"},"content":"                        getEventDuration(taskDescription)[0], getEventDuration(taskDescription)[1]);","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"xiaoge26"},"content":"                if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"xiaoge26"},"content":"                    event.setDone();","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"xiaoge26"},"content":"                }","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"xiaoge26"},"content":"                allTasks.add(event);","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"xiaoge26"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"xiaoge26"},"content":"            default:","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"xiaoge26"},"content":"                System.out.println(\"Unknown task encountered. Skipping\");","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"xiaoge26"},"content":"                break;","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"xiaoge26"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"xiaoge26"},"content":"        return allTasks;","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"xiaoge26"},"content":"     * Returns the task description from a line in data items.","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"xiaoge26"},"content":"     * Adapted from the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"xiaoge26"},"content":"     * @param line A line from data items read from the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"xiaoge26"},"content":"     * @return Task description, possibly with deadlines or event durations that have not been parsed.","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"xiaoge26"},"content":"    private String getTaskDescription(String line) {","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"xiaoge26"},"content":"        String taskDescription \u003d line.substring(7);","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"xiaoge26"},"content":"        return taskDescription;","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"xiaoge26"},"content":"     * Returns the task type from a line in data items.","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"xiaoge26"},"content":"     * Adapted from the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"xiaoge26"},"content":"     * @param line A line from data items read from the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"xiaoge26"},"content":"     * @return Task type as a string, which can be T, D or E, representing task, deadline or event respectively.","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"xiaoge26"},"content":"    private String getTaskType(String line) {","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"xiaoge26"},"content":"        String taskType \u003d line.substring(0, 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"xiaoge26"},"content":"        taskType \u003d taskType.replace(\"[\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"xiaoge26"},"content":"        taskType \u003d taskType.replace(\"]\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"xiaoge26"},"content":"        return taskType;","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"xiaoge26"},"content":"     * Returns the task status from a line in data items.","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"xiaoge26"},"content":"     * Adapted from the code written by Professor Akshay Narayan in \"TaskS\".","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"xiaoge26"},"content":"     * @param line A line from data items read from the local file.","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"xiaoge26"},"content":"     * @return Task status as a string, which can be X or null, representing done or not done respectively.","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"xiaoge26"},"content":"    private String getTaskStatus(String line) {","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"xiaoge26"},"content":"        String taskStatus \u003d line.substring(3, 5);","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"xiaoge26"},"content":"        taskStatus \u003d taskStatus.replace(\"[\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"xiaoge26"},"content":"        taskStatus \u003d taskStatus.replace(\"]\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"xiaoge26"},"content":"        return taskStatus;","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"xiaoge26"},"content":"     * Returns the parsed deadline of a task.","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"xiaoge26"},"content":"     * @param taskDescription The description of a task with deadline not parsed.","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"xiaoge26"},"content":"     * @return Deadline as a string.","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"xiaoge26"},"content":"    private String getDeadline(String taskDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"xiaoge26"},"content":"        String deadline \u003d taskDescription.split(\"\\\\(by: \", 2)[1].replace(\")\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"xiaoge26"},"content":"        return deadline;","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"xiaoge26"},"content":"    private String[] getEventDuration(String taskDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"xiaoge26"},"content":"        String[] temp \u003d taskDescription.split(\"to: \", 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"xiaoge26"},"content":"        String to \u003d temp[1].replace(\")\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"xiaoge26"},"content":"        String from \u003d temp[0].split(\"from: \", 2)[1];","lastModifiedDate":"2023-03-02"},{"lineNumber":198,"author":{"gitId":"xiaoge26"},"content":"        temp[1] \u003d \"/to\" + to;","lastModifiedDate":"2023-03-02"},{"lineNumber":199,"author":{"gitId":"xiaoge26"},"content":"        temp[0] \u003d \"/from\" + from;","lastModifiedDate":"2023-03-02"},{"lineNumber":200,"author":{"gitId":"xiaoge26"},"content":"        return temp;","lastModifiedDate":"2023-03-02"},{"lineNumber":201,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":202,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":204,"author":{"gitId":"xiaoge26"},"content":"     * Returns the completely parsed description of a task.","lastModifiedDate":"2023-03-02"},{"lineNumber":205,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":206,"author":{"gitId":"xiaoge26"},"content":"     * @param taskDescription The description of a task with deadline or event duration not parsed.","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"xiaoge26"},"content":"     * @return Trimmed task description as a string.","lastModifiedDate":"2023-03-02"},{"lineNumber":208,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":209,"author":{"gitId":"xiaoge26"},"content":"    private String getTrimmedDescription(String taskDescription) {","lastModifiedDate":"2023-03-02"},{"lineNumber":210,"author":{"gitId":"xiaoge26"},"content":"        String trimmedDescription \u003d taskDescription.split(\" \\\\(\", 2)[0];","lastModifiedDate":"2023-03-02"},{"lineNumber":211,"author":{"gitId":"xiaoge26"},"content":"        return trimmedDescription;","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":213,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"xiaoge26":213}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":" * This object represents a task object of deadline type.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" * It contains a \u003ccode\u003eby\u003c/code\u003e which represents the deadline of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"     * Overrides the template task toString with additional attribute \u003ccode\u003eby\u003c/code\u003e and returns it as a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"     * @return Return the task object\u0027s string representation with its description, and its deadline wrapped in brackets.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"xiaoge26":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":" * This object represents a task object of event type.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" * It contains a \u003ccode\u003eto\u003c/code\u003e and a \u003ccode\u003efrom\u003c/code\u003e which represents the start time","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":" * and the end time of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    protected String from;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"    protected String to;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"        this.from \u003d from.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"        this.to \u003d to.substring(3);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"xiaoge26":22}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":" * Template for a task object.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"    public String description;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    String LINE \u003d \"────────────────────────────────────────────────────────────────────────\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"        return getTaskStatusBrackets() + description;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"     * Sets the task status to \"done\" by set the isDone boolean to true.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"    public void setDone() {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"     * Sets the task status to \"undone\" by set the isDone boolean to false.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"    public void setUndone() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"    public void printSetDoneMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"        setDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as DONE:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"  \" + this.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"    public void printSetUndoneMessage() {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"        setUndone();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"OK! I\u0027ve marked this task as NOT DONE YET:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"  \" + this.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"     * Returns the status icon for a task object as a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"     * Icon \u003ccode\u003eX\u003c/code\u003e represents done, a blank icon represents not done.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"     * @return Status icon.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"    public String getTaskStatusBrackets() {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"        return (\"[\" + getStatusIcon() + \"] \");","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"xiaoge26":62}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":" * This object represents a task object of todo type.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"xiaoge26":15}},{"path":"src/main/java/duke/utils/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.utils;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"xiaoge26":5}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.utils;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"import static duke.utils.Ui.GENERAL_ERROR_MESSAGE;","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" * Parses user input and determines which set of commands to be called.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    public Ui ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"    public Parser (TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"     * Parses user input and executes commands to the task list accordingly.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"     * Prints message to show user what was executed.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"     * @param userInput The line of input user enters.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"     * @throws DukeException If the input is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"    public void doCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"        String[] splitInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"        String content \u003d splitInput[splitInput.length - 1];","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"        switch (command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"        case \"mark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"            taskList.toggleMark(content, true);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"        case \"unmark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"            taskList.toggleMark(content, false);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"        case \"list\":","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"            ui.printListTasksMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"            taskList.printAllTasks(taskList.currentTaskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"        case \"todo\":","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"            taskList.addTodo(content);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"            taskList.printAddTaskMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"        case \"event\":","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"            taskList.addEvent(content);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"            taskList.printAddTaskMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"        case \"deadline\":","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"            taskList.addDeadline(content);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"            taskList.printAddTaskMessage();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"        case \"delete\":","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"            taskList.printDeleteTaskMessage(Integer.parseInt(content) - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"            taskList.deleteTask(content);","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"        case \"find\":","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"            taskList.findMatchingTasks(content);","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"            taskList.printMatchingTasks();","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"        case \"guide\":","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"            ui.printGuide();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"        default:","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"            ui.printErrorMessage(GENERAL_ERROR_MESSAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"xiaoge26":64}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.utils;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"import static duke.utils.Ui.DEADLINE_TIME_ERROR_MESSAGE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"import static duke.utils.Ui.EVENT_TIME_ERROR_MESSAGE;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"import static duke.utils.Ui.INVALID_NUM_ERROR_MESSAGE;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"import static duke.utils.Ui.LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":" * Represents all the task data in the application.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":" * Contains all the methods for handling the data in task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":" * Calls message from a Ui object to interact with user.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"    public ArrayList\u003cString\u003e taskDescriptions\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"    public ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"    public int matchingTasksNum;","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"    public int currentTaskNum;","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"     * Prints all the current tasks in the order in which they were added.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"     * Puts an index in front of the task data.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"     * @param currentTaskNum The current number of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"    public void printAllTasks(int currentTaskNum) {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"        int currentPrintedTask \u003d 0;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"        int placeHolder \u003d currentTaskNum;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"        if (placeHolder \u003d\u003d 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"No Task!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"            while (placeHolder \u003e 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"                System.out.println(currentPrintedTask + 1 + \". \" + list.get(currentPrintedTask).toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"                currentPrintedTask++;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"                placeHolder--;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"    public void findMatchingTasks(String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"        for (Task task : list) {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"            taskDescriptions.add(task.description);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"        for (String taskDescription : taskDescriptions) {","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"                matchingList.add(list.get(i));","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"            };","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"            i++;","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"xiaoge26"},"content":"    public void printMatchingTasks() {","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"xiaoge26"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"xiaoge26"},"content":"        for (Task matchingTask : matchingList) {","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(index + \". \" + matchingTask.toString());","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"xiaoge26"},"content":"            index++;","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(System.lineSeparator() + Ui.LINE);","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"xiaoge26"},"content":"        taskDescriptions.clear();","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"xiaoge26"},"content":"        matchingList.clear();","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"xiaoge26"},"content":"     * Creates a new Event type object and adds the event to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"xiaoge26"},"content":"     * Separates the task description with the event start and end time.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"xiaoge26"},"content":"     * Prints error message if the content from user input is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"xiaoge26"},"content":"     * @param content The task description from user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"xiaoge26"},"content":"    public void addEvent(String content) {","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"xiaoge26"},"content":"        String[] phrases;","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"xiaoge26"},"content":"        phrases \u003d content.split(\"/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"xiaoge26"},"content":"        if (phrases.length \u003c 3) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"xiaoge26"},"content":"            ui.printErrorMessage(EVENT_TIME_ERROR_MESSAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"xiaoge26"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"xiaoge26"},"content":"            list.add(new Event(phrases[0], phrases[1], phrases[2]));","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"xiaoge26"},"content":"     * Creates a new Deadline type object and adds the object to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"xiaoge26"},"content":"     * Separates the task description with the deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"xiaoge26"},"content":"     * Prints error message if the content from user input is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"xiaoge26"},"content":"     * @param content The task description from user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"xiaoge26"},"content":"    public void addDeadline(String content) {","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"xiaoge26"},"content":"        String[] phrases;","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"xiaoge26"},"content":"        phrases \u003d content.split(\"/by \");","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"xiaoge26"},"content":"        if (phrases.length \u003c 2) {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"xiaoge26"},"content":"            ui.printErrorMessage(DEADLINE_TIME_ERROR_MESSAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"xiaoge26"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"xiaoge26"},"content":"            list.add(new Deadline(phrases[0], phrases[1]));","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"xiaoge26"},"content":"     * Creates a new Todo type object and adds the task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"xiaoge26"},"content":"     * @param content The task description from user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"xiaoge26"},"content":"    public void addTodo(String content) {","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"xiaoge26"},"content":"        list.add(new Todo(content));","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"xiaoge26"},"content":"     * Deletes a task according to the index user entered as a string.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"xiaoge26"},"content":"     * Decreases the total number of tasks after deletion.","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"xiaoge26"},"content":"     * @param content The string representation of the task index from user input.","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"xiaoge26"},"content":"    public void deleteTask(String content) {","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"xiaoge26"},"content":"        list.remove(Integer.parseInt(content) - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"xiaoge26"},"content":"        currentTaskNum--;","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"xiaoge26"},"content":"     * Toggles the status of a task and prints the updated task data.","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"xiaoge26"},"content":"     * @param content A string representation of the task index.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"xiaoge26"},"content":"     * @param shouldMarkAsDone A boolean representation of whether the task status","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"xiaoge26"},"content":"     *                         should be changed to \"done\" or \"not done\"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"xiaoge26"},"content":"     * @throws DukeException If the index is invalid or out of bound.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"xiaoge26"},"content":"    public void toggleMark(String content, boolean shouldMarkAsDone) throws DukeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"xiaoge26"},"content":"        int posOfMark \u003d Integer.parseInt(content) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"xiaoge26"},"content":"        if (!(posOfMark \u003e\u003d 0 \u0026\u0026 posOfMark \u003c\u003d currentTaskNum)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"xiaoge26"},"content":"            ui.printErrorMessage(INVALID_NUM_ERROR_MESSAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"xiaoge26"},"content":"            throw new DukeException();","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"xiaoge26"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"xiaoge26"},"content":"            if (shouldMarkAsDone) {","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"xiaoge26"},"content":"                list.get(posOfMark).printSetDoneMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"xiaoge26"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"xiaoge26"},"content":"                list.get(posOfMark).printSetUndoneMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"xiaoge26"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"xiaoge26"},"content":"    public void printAddTaskMessage() {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"xiaoge26"},"content":"                + \"  \"","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"xiaoge26"},"content":"                + this.list.get(currentTaskNum).toString()","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"xiaoge26"},"content":"                + System.lineSeparator());","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"xiaoge26"},"content":"        currentTaskNum++;","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"xiaoge26"},"content":"        printTotalNumOfTasks(currentTaskNum);","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"xiaoge26"},"content":"    public void printDeleteTaskMessage(int taskNum) {","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(LINE + \"Got it. I\u0027ve deleted this task:\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"xiaoge26"},"content":"                + \"  \"","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"xiaoge26"},"content":"                + this.list.get(taskNum).toString()","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"xiaoge26"},"content":"                + System.lineSeparator());","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"xiaoge26"},"content":"     * Prints the message containing the total number of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"xiaoge26"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"xiaoge26"},"content":"     * @param currentTaskNum The current number of tasks in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"xiaoge26"},"content":"    public void printTotalNumOfTasks(int currentTaskNum) {","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"xiaoge26"},"content":"        if (currentTaskNum \u003d\u003d 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"Now you have \" + currentTaskNum + \" task in the list.\"","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"xiaoge26"},"content":"                    + System.lineSeparator() + LINE);","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"xiaoge26"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"xiaoge26"},"content":"            System.out.println(\"Now you have \" + currentTaskNum + \" tasks in the list.\"","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"xiaoge26"},"content":"                    + System.lineSeparator() + LINE);","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"xiaoge26"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"xiaoge26":181}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"package duke.utils;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":" * A Ui object contains the strings and methods that application uses to interact with users.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":" * Includes the error messages.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"public class Ui {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"    public static String LINE \u003d \"────────────────────────────────────────────────────────────────────────\\n\";","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"    public static String GENERAL_ERROR_MESSAGE \u003d LINE","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"xiaoge26"},"content":"            + \"Invalid input. Please try again! (\u003dO^O\u003d)\\n\" + LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"xiaoge26"},"content":"    public static String INVALID_NUM_ERROR_MESSAGE \u003d LINE","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"xiaoge26"},"content":"            + \"The task number is out of bound. Please try again! (\u003dO^O\u003d)\\n\" + LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"xiaoge26"},"content":"    public static String EVENT_TIME_ERROR_MESSAGE \u003d LINE","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"xiaoge26"},"content":"            + \"There is no start and end time for the event. \"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"xiaoge26"},"content":"            + \"Please try again by using the keywords /from and /to! (\u003dO^O\u003d)\\n\" + LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"xiaoge26"},"content":"    public static String DEADLINE_TIME_ERROR_MESSAGE \u003d LINE","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"xiaoge26"},"content":"            + \"There is no deadline for this task. \"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"xiaoge26"},"content":"            + \"Please try again by using the keywords /by! (\u003dO^O\u003d)\\n\" + LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"xiaoge26"},"content":"    public static String LOGO \u003d \"  /\\\\_/\\\\  (\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"xiaoge26"},"content":"            \" ( ^.^ ) _)\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"xiaoge26"},"content":"            \"   \\\\\\\"/  (\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"xiaoge26"},"content":"            \" ( | | )\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"xiaoge26"},"content":"            \"(__d b__)\";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"xiaoge26"},"content":"    public static String GREETING \u003d LINE","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"xiaoge26"},"content":"            + \" Meow! I\u0027m Ashy n(\u003d^-^\u003d)n\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"xiaoge26"},"content":"            + \" What can I do for you?\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"xiaoge26"},"content":"            + LINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"xiaoge26"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"xiaoge26"},"content":"    public static String FAREWELL_MESSAGE \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"xiaoge26"},"content":"            \" Bye. Hope to see you again soon meow!\\n\" + LINE;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"xiaoge26"},"content":"   public void printGreetingMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"xiaoge26"},"content":"       System.out.println(LOGO);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"xiaoge26"},"content":"       System.out.println(GREETING);","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"xiaoge26"},"content":"   }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"xiaoge26"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"xiaoge26"},"content":"     * A ui object contains the strings and methods that application uses to interact with users.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"xiaoge26"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"xiaoge26"},"content":"   public void printFarewellMessage() {","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"xiaoge26"},"content":"       System.out.println(FAREWELL_MESSAGE);","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"xiaoge26"},"content":"   }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"xiaoge26"},"content":"    public void printListTasksMessage() {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(\"Here is your list!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"xiaoge26"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"xiaoge26"},"content":"    public void printGuide() {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"xiaoge26"},"content":"        System.out.println(","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"xiaoge26"},"content":"                \"User Guide\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"xiaoge26"},"content":"                        + \"list: get the list of all tasks\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"xiaoge26"},"content":"                        + \"todo: add a task a task without duration or deadline to the list\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"xiaoge26"},"content":"                        + \"deadline: add a task with deadline to the list\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"xiaoge26"},"content":"                        + \"event: add a task with both starting and ending time\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"xiaoge26"},"content":"                        + \"mark: mark a task as \u0027done\u0027\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"xiaoge26"},"content":"                        + \"unmark: mark a task as \u0027not done\u0027\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"xiaoge26"},"content":"                        + \"delete: delete a task from the list\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"xiaoge26"},"content":"                        + \"find: find tasks from the list that match the keyword\" + System.lineSeparator()","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"xiaoge26"},"content":"        );","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"xiaoge26"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"xiaoge26"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"xiaoge26":60}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiaoge26"},"content":"write","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"xiaoge26"},"content":"run","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"xiaoge26"},"content":"todo study","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"xiaoge26"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"xiaoge26"},"content":"event cook /from 2 /to 5","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"xiaoge26"},"content":"deadline do homework /by 7","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"xiaoge26"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"xiaoge26"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"xiaoge26"},"content":"bye","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"xiaoge26":9}}]
