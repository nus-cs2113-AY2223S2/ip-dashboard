[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"T | X | read book","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"D |   | return book | June 6th","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"E | X | CS2113 project meeting | Feb 13th 1-3pm","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"T |   | join sports club","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"D | X | complete tP UG | Wednesday","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"E |   | CS2113 Tutorial | Feb 15th 1pm-2pm","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"T |   | CS2113 Add Increment A_Jar","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"D |   | complete iP | Friday","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ZhongXiangWong":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"### Addition of Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"Users are able to add up to 3 different types of tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":" 1. \u003ccode\u003etodo\u003c/code\u003e: A simple task description","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":" 2. \u003ccode\u003edeadline\u003c/code\u003e: A task description with a deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":" 3. \u003ccode\u003eevent\u003c/code\u003e: A task description with a time period","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"### Operations on the Tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"These are the operations that users can perform on the task list:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":" 1. \u003ccode\u003elist\u003c/code\u003e: List all the task in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":" 2. \u003ccode\u003emark\u003c/code\u003e: Mark the task specified as done","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":" 3. \u003ccode\u003eunmark\u003c/code\u003e: Mark the task specified as undone","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":" 4. \u003ccode\u003efind\u003c/code\u003e: Search for all task with matching string and list them","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":" 5. \u003ccode\u003edelete\u003c/code\u003e: Delete task from the list","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"### Exit the Program","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"To exit the program, input \u003ccode\u003ebye\u003c/code\u003e into the CLI.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"### `todo` - Adds a to-do task","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"This command will add a task description to task list and will be labeled as a todo task.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `todo \u003ctaskDescription\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `todo do laundry`","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"[T][ ] do laundry","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"Description of the outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"All characters after \u003ccode\u003etodo\u003c/code\u003e will be treated as the task description.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"### `deadline` - Adds a deadline task","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"This command will add a task description to the task list with a deadline and will","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"be labelled as a deadline task.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `deadline \u003ctaskDescription\u003e /by \u003cdueDate\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `deadline cs2113 iP /by 3 Mar 2359`","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":" [D][ ] cs2113 iP (by: 3 Mar 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"Description of the outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"Users should input the task description before the \u003ccode\u003e/by\u003c/code\u003e keyword and the","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"due-date after it. All characters before \u003ccode\u003e/by\u003c/code\u003e would be treated as the ","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"task description and the ones after are treated as the due date.","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"### `event` - Adds a deadline task","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"This command will add a task description to the task list with a time period and will","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"be labelled as an event task.","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `event \u003ctaskDescription\u003e /from \u003cstartTime\u003e /to \u003cendTime\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"`event Recess Week /from 20 Feb /to 26 Feb`","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":" [E][ ] Recesss Week (from: 20 Feb to: 26 Feb)","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"Description of the outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"All characters before \u003ccode\u003e/from\u003c/code\u003e would be treated as the","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"task description and the ones after \u003ccode\u003e/to\u003c/code\u003e are treated as the end time.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"The characters in-between will be treated as the start time. ","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"### `list` - List out all the task in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"This command will print the all the task in the sequence in which they were added to ","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"the list. The message \u003ccode\u003eYou are free today :)\u003c/code\u003e will show if the list is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"ZhongXiangWong"},"content":"1.[T][ ] do laundry","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"ZhongXiangWong"},"content":"2.[D][ ] cs2113 iP (by: 3 Mar 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"ZhongXiangWong"},"content":"3.[E][ ] Recess Week (from: 20 Feb to: 26 Feb)","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"ZhongXiangWong"},"content":"Description of the outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"ZhongXiangWong"},"content":"The letter in the first square brackets represents the task type: \u0027T\u0027 for to-do, \u0027D\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"ZhongXiangWong"},"content":"for deadline and \u0027E\u0027 for event. The letter in the second square brackets represents","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"ZhongXiangWong"},"content":"the completion status: \u0027X\u0027 for completed and empty for uncompleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"ZhongXiangWong"},"content":"### `mark` - Mark task based on index","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"ZhongXiangWong"},"content":"Task of the corresponding index will be marked as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `mark 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"ZhongXiangWong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ZhongXiangWong"},"content":"[D][X] CS2113 iP (by: 3 Mar 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"ZhongXiangWong"},"content":"### `unmark` - Unmark task based on index","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"ZhongXiangWong"},"content":"Task of the corresponding index will be marked as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `unmark \u003ctaskIndex\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `unmark 2`","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"ZhongXiangWong"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"ZhongXiangWong"},"content":"[D][ ] CS2113 iP (by: 3 Mar 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"### `find` - Print all the task which contains the keyword","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"Based on the keyword (case-sensitive), all task description which contains the ","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"keyword would be printed. The order will be determined based on the order they ","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"were added to the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `find s`","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"1.[D][ ] cs2113 iP (by: 3 Mar 2359)","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"2.[E][ ] Recess Week (from: 20 Feb to: 26 Feb)","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"ZhongXiangWong"},"content":"### `delete` - Delete task based on index","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"ZhongXiangWong"},"content":"Task of the corresponding index will be removed from the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `delete 1` ","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"ZhongXiangWong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"ZhongXiangWong"},"content":" [T][ ] do laundry","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"ZhongXiangWong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"### `bye` - Exit the program","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"ZhongXiangWong"},"content":"This command will write the save file for the task list and close the program. ","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage: `bye`","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"ZhongXiangWong"},"content":"Expected outcome:","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":176,"author":{"gitId":"ZhongXiangWong"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"ZhongXiangWong"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ZhongXiangWong":152,"-":26}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package command;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * This class contains the list of valid commands words that can be inputted by the user to","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" * use the Duke program.","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"public class Command {","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ZhongXiangWong":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import command.Command;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.CommandNotRecognisedException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.IllegalCharacterException;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Parser parser;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    public Duke() {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"        storage.openFile(taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"     * Process user inputs as commands and terminates only when \u0027bye\u0027 is inputted by the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"    public void run() {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printStartMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"        String userInput;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"        do {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"                parser.processCommand(userInput, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (CommandNotRecognisedException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (IllegalCharacterException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.println(\"☹ OOPS!!! Input should not contain \u0027|\u0027 or \u0027-\u0027.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"        } while (!userInput.equals(Command.COMMAND_BYE));","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"        storage.writeToFile(taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ZhongXiangWong":46,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import command.Command;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.CommandNotRecognisedException;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.EmptyTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.IllegalCharacterException;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":" * This class takes in user input from the CLI and attempts to make sense of it. It extracts command words and process","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":" * the input according to it.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"public class Parser {","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method takes in user input from the CLI and attempts to make sense of it. It filters the input according to","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"     * the command words such as \u0027list\u0027, \u0027mark\u0027 and \u0027event\u0027 etc and passes them to their respective methods to carry out","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"     * the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input This is the input from the CLI.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws CommandNotRecognisedException User did not enter a valid command.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws IllegalCharacterException User inputted \u0027|\u0027 or \u0027-\u0027.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"    public void processCommand(String input, TaskList taskList) throws CommandNotRecognisedException, IllegalCharacterException {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"        if (input.contains(\"|\") || input.contains(\"-\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new IllegalCharacterException();","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"        String action \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        switch (action) {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_BYE:","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"            ui.printBye();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_LIST:","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.printTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_MARK:","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandMark(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_UNMARK:","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandUnmark(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_TODO:","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandTodo(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_DEADLINE:","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandDeadline(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_EVENT:","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandEvent(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_DELETE:","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandDelete(input, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"        case Command.COMMAND_FIND:","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"            processCommandFind(input, taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new CommandNotRecognisedException();","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003e\u0027delete\u0027\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003edelete \u003citalics\u003etaskNumber\u003c/italics\u003e\u003c/code\u003e\". If it is valid, it calls the deleteTask method from","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"     * the class taskList to delete task based on the position in the taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the index of task to delete.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandDelete(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.deleteTask(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! Task number should be an integer.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The task specified does not exist in the task list.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003e\u0027event\u0027\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003eevent \u003citalics\u003etaskDesc\u003c/italics\u003e /from \u003citalics\u003efromDate\u003c/italics\u003e /to \u003citalics\u003etoDate\u003c/italics\u003e\u003c/code\u003e\".","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"     * If it is valid, it will extract the \u0027from\u0027 date, \u0027to\u0027 date, and description of task and call addEventTask from","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ZhongXiangWong"},"content":"     * the class taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the task description and time range.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandEvent(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"ZhongXiangWong"},"content":"        String[] taskDesc;","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"ZhongXiangWong"},"content":"            taskDesc \u003d input.split(\"/from|/to\");","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.addEventTask(taskDesc[0].substring(Command.COMMAND_EVENT.length()).trim()","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"ZhongXiangWong"},"content":"                    , taskDesc[1].trim(), taskDesc[2].trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.printTaskAdded();","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027event\u0027 should include a task and time period.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003edeadline\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003edeadline \u003citalics\u003etaskDesc\u003c/italics\u003e /by \u003citalics\u003ebyDate\u003c/italics\u003e\u003c/code\u003e\". If it is valid, it will","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ZhongXiangWong"},"content":"     * extract the \u0027by\u0027 date and description of task and call addDeadlineTask from the class taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the task description and deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandDeadline(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"        String[] taskDesc;","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"ZhongXiangWong"},"content":"            taskDesc \u003d input.split(\"/by\");","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.addDeadlineTask(taskDesc[0].substring(Command.COMMAND_DEADLINE.length()).trim(), taskDesc[1].trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.printTaskAdded();","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027deadline\u0027 should include a task and deadline.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003etodo\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003etodo \u003citalics\u003etaskDesc\u003c/italics\u003e \u003c/code\u003e\". If it is valid, it will extract the description of task","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"ZhongXiangWong"},"content":"     * and call addTodoTask from the class taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the task description and deadline.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandTodo(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.addTodoTask(input.substring(Command.COMMAND_TODO.length()).trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.printTaskAdded();","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027todo\u0027 cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003eunmark\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003eummark \u003citalics\u003etaskNumber\u003c/italics\u003e\u003c/code\u003e\". If it is valid, it calls the markTaskUndone method from","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ZhongXiangWong"},"content":"     * the class taskList to unmark task based on the position in the taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the index of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandUnmark(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.markTaskUndone(Integer.parseInt(input.split(\" \")[1].trim())-1);","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.tasks.get(Integer.parseInt(input.split(\" \")[1].trim())-1).printUnmarkMessage();","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! Task number should be an integer.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":162,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The task specified does not exist in the task list.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027unmark\u0027 cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":169,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method test if the input by the user is valid for the \u003cbold\u003emark\u003c/bold\u003e command which syntax is","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"ZhongXiangWong"},"content":"     * \"\u003ccode\u003emark \u003citalics\u003etaskNumber\u003c/italics\u003e\u003c/code\u003e\". If it is valid, it calls the markTaskDone method from","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"ZhongXiangWong"},"content":"     * the class taskList to mark task based on the position in the taskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param input Contains the command type followed by the index of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where all tasks are stored.","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandMark(String input, TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.markTaskDone(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.tasks.get(Integer.parseInt(input.split(\" \")[1].trim())-1).printMarkMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! Task number should be an integer.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The task specified does not exist in the task list.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027mark\u0027 cannot be empty.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"ZhongXiangWong"},"content":"    private void processCommandFind(String input, TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"ZhongXiangWong"},"content":"            taskList.findTasks(input.substring(Command.COMMAND_TODO.length()).trim());","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"☹ OOPS!!! The description of \u0027find\u0027 cannot be empty.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"ZhongXiangWong":199}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.File;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":" * This class deals with the opening, reading and writing of the saveFile.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final File FILE_PATH \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final File FILE_DIR \u003d new File(\"./data\");","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method opens file based on path. Then it will cll the readFile method to initialise the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list where tasks are stored. We will be initialising it later.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    public void openFile(TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"        File file \u003d new File(String.valueOf(FILE_PATH));","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"        readFile(file, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"    private void readFile(File file, TaskList taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"            java.io.FileReader fr \u003d new java.io.FileReader(file);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"            String line;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"            while((line\u003dbr.readLine())!\u003dnull) {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"                taskList.initialiseTaskList(line);","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"You have no pre-existing tasks :)\");","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"Error reading file :(\");","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method does the checking of file path and directory and rectify any issues encountered before calling","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"     * the writeTaskToFile method to input data into the save file.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskList The list of task to transfer the data from.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"            PrintWriter pw \u003d new PrintWriter(FILE_PATH);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"            writeTaskToFile(pw, taskList);","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"            if (!FILE_DIR.isDirectory()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.println(\"Data directory not found. Creating new data directory\");","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"                Path path \u003d Paths.get(String.valueOf(FILE_DIR));","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"                    Files.createDirectories(path);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"                } catch (IOException f) {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"                    System.out.println(\"Failed to create directory\");","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"            if (!FILE_PATH.isFile()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.println(\"File not found. Creating new text file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"                Path fileLoc \u003d Paths.get(String.valueOf(FILE_PATH));","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"                try {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"                    Files.createFile(fileLoc);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"                } catch (IOException f) {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"                    System.out.println(\"Failed to create file\");","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"    private void writeTaskToFile(PrintWriter pw, TaskList taskList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"        for (Task t : taskList.tasks) {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"            pw.println(t.printToFile());","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"        pw.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"ZhongXiangWong":87}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package duke;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.EmptyTaskException;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import exception.InvalidTaskNumberException;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import task.Event;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"import task.ToDo;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"public class TaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"     * Reads the saveFile and initialise the list of task based on it.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param line Line of text from the saveFile.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    public void initialiseTaskList(String line) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"        String[] task \u003d line.split(\"[|\\\\-]\");","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"        switch(task[0].trim()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"        case \"T\":","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"            try {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"                addTodoTask(task[2].trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printImpossible();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"        case \"D\":","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"            addDeadlineTask(task[2].trim(), task[3].trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"        case \"E\":","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"            addEventTask(task[2].trim(), task[3].trim(), task[4].trim());","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"        initialiseTaskStatus(task[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"    private void initialiseTaskStatus(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"        if (task.contains(\"X\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"            try {","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"                markTaskDone(tasks.size()-1);","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printNumberFormatException();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printInvalidTaskNumberException();","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"                ui.printIndexOutOfBoundsException();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"     * Prints to CLI the list of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"            ui.printEmptyTaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.print(i+1 + \".\");","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"                System.out.println(tasks.get(i));","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"        ui.printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"     * Marks task based on taskIndex as \u0027done\u0027.","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskIndex The position of task in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws InvalidTaskNumberException Task number inputted exceeds the range of the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"    public void markTaskDone(Integer taskIndex) throws InvalidTaskNumberException {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"            tasks.get(taskIndex).markDone();","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"ZhongXiangWong"},"content":"     * Marks task based on taskIndex as \u0027undone\u0027.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskIndex The position of task in the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws InvalidTaskNumberException Task number inputted exceeds the range of the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"ZhongXiangWong"},"content":"    public void markTaskUndone(Integer taskIndex) throws InvalidTaskNumberException {","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"ZhongXiangWong"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e tasks.size()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"ZhongXiangWong"},"content":"            tasks.get(taskIndex).markUndone();","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"ZhongXiangWong"},"content":"     * Adds todo task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws EmptyTaskException Description of task is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"ZhongXiangWong"},"content":"    public void addTodoTask(String task) throws EmptyTaskException {","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"ZhongXiangWong"},"content":"        if (task.equals(\"\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"ZhongXiangWong"},"content":"            tasks.add(new ToDo(task));","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ZhongXiangWong"},"content":"     * Adds deadline task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"ZhongXiangWong"},"content":"    public void addDeadlineTask(String task, String deadline) {","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"ZhongXiangWong"},"content":"        tasks.add(new Deadline(task, deadline));","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"ZhongXiangWong"},"content":"     * Adds event task to the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param fromDate Start date of event.","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param byDate End date of event.","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"ZhongXiangWong"},"content":"    public void addEventTask(String task, String fromDate, String byDate) {","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"        tasks.add(new Event(task, fromDate, byDate));","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"     * Prints message to show that task has been added successfully.","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printTaskAdded() {","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + tasks.get(tasks.size()-1)","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"ZhongXiangWong"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"     * Delete task based on taskIndex.","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param taskIndex The position of task in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws InvalidTaskNumberException Task number inputted exceeds the range of the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ZhongXiangWong"},"content":"    public void deleteTask(int taskIndex) throws InvalidTaskNumberException {","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"ZhongXiangWong"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + tasks.get(taskIndex)","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"ZhongXiangWong"},"content":"                    + \"\\nNow you have \" + (tasks.size()-1) + \" tasks in the list.\");","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"ZhongXiangWong"},"content":"            tasks.remove(tasks.get(taskIndex));","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"ZhongXiangWong"},"content":"    public void findTasks(String taskName) throws EmptyTaskException {","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"ZhongXiangWong"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"ZhongXiangWong"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"ZhongXiangWong"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"ZhongXiangWong"},"content":"                if (tasks.get(i).containsTask(taskName)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"ZhongXiangWong"},"content":"                    System.out.print(index + \".\");","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"ZhongXiangWong"},"content":"                    System.out.println(tasks.get(i));","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"ZhongXiangWong"},"content":"                    ++index;","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"ZhongXiangWong":177}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":" * This class contains the UI for the CLI.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"        String input;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"        return input;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printDivider() {","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printStartMessage() {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"        String logo \u003d \" ____\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"                + \"|    \\\\ ___ _ _ ___\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"                + \"|  |  | .\u0027| | | -_|\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"                + \"|____/|__,|\\\\_/|___|\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.print(logo);","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"Hi, I\u0027m Dave!\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printBye() {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printImpossible() {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"This shouldn\u0027t be happening :O\");","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printNumberFormatException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"☹ OOPS!!! Task number should be an integer.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printInvalidTaskNumberException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"☹ OOPS!!! The task specified does not exist in the task list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printIndexOutOfBoundsException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"☹ OOPS!!! The description of \u0027mark\u0027 cannot be empty.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"        printDivider();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printEmptyTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"You are free today :)\");","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"ZhongXiangWong":61}},{"path":"src/main/java/exception/CommandNotRecognisedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package exception;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * Exception when invalid command is entered.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class CommandNotRecognisedException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package exception;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ZhongXiangWong":5}},{"path":"src/main/java/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package exception;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * Exception when the task description is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/exception/IllegalCharacterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package exception;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * Exception when the input contains \u0027|\u0027 or \u0027-\u0027.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class IllegalCharacterException extends DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/exception/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package exception;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * Exception when task number inputted exceeds the task list.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * This class is for the Deadline task which is a subclass of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"    private String byDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    public String printToFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"D | \" + this.saveStatusIcon() + \" | \" + description + \" | \" + byDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ZhongXiangWong":23}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * This class is for the Event task which is a subclass of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"    private String fromDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"    private String toDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    public Event(String description, String fromDate, String toDate) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromDate + \" to: \" + toDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    public String printToFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"E | \" + this.saveStatusIcon() + \" | \" + description + \" | \" + fromDate + \"-\" + toDate;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ZhongXiangWong":25}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    protected final String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"     * Marks task done based on index of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"     * Prints to CLI to show that the mark command has been done successfully.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printMarkMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"     * Marks task undone based on index of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"     * Prints to CLI to show that the unmark command has been done successfully.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    public void printUnmarkMessage() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"        return description;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"    public String saveStatusIcon() {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        return (isDone ? \"X\" : \"O\");","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"    public String printToFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"    public boolean containsTask(String task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"        return description.contains(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ZhongXiangWong":66}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package task;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":" * This class is for the ToDo task which is a subclass of task.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"    public String printToFile() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"        return \"T | \" + this.saveStatusIcon() + \" | \" + description;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ZhongXiangWong":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"todo Zhong Xiang: Answer CS2113 tutorial questions","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"deadline weekly CS2113 quiz /by Monday 9pm","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"event CS2113 lecture /from Friday 4 /to 6pm","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"mark 1","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"todo","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"deadline","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"event","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"unmark -5","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"mark five","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"list","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"bye","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"ZhongXiangWong":11}}]
