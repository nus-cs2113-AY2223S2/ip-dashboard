[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"#### by [Ong Yuan](https://github.com/yuanners)","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"__Duke__ is a chat bot application created for tasks tracking, optimized for use via a Command Line Interface (CLI) while still having the ","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"## Table of Contents","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"* [1. Quick start](#1-quick-start)","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"* [2. Features](#2-features)","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"  * [2.1 Add Tasks](#21-add-tasks)","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"    * [2.1.1 Add Todo](#211-add-todo)","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"    * [2.1.2 Add Deadline](#212-add-deadline)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"    * [2.1.3 Add Event](#213-add-event)","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"  * [2.2 List tasks](#22-list-tasks)","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"  * [2.3 Change task status](#23-change-task-status)","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"    * [2.3.1 Mark task](#231-mark-task)","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"    * [2.3.2 Un-mark task](#232-un-mark-task)","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"  * [2.4 Delete task](#24-delete-task)","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"  * [2.5 Find tasks](#25-find-tasks)","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"  * [2.6 Exit program](#26-exit-program)","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"* [3. Summary of features](#3-summary-of-features)","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"# 1. Quick start","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"1. Download the latest release of `ip.jar` from [here](https://github.com/yuanners/ip/releases).","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Duke.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ip.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"1. A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"   Hello from","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":" ____        _        ","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"|  _ \\ _   _| | _____","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"What can I do for you?","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"yuanners"},"content":"# 2. Features","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"yuanners"},"content":"## 2.1 Add tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"yuanners"},"content":"Add different types of tasks by using different input formats.","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"yuanners"},"content":"## 2.1.1 Add Todo","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"yuanners"},"content":"Add a todo task.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"yuanners"},"content":"Format: ``todo \u003ctask description\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"yuanners"},"content":"Example: ``todo homework``","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"yuanners"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"yuanners"},"content":"[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"yuanners"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"yuanners"},"content":"## 2.1.2 Add Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"yuanners"},"content":"Add a deadline task.","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"yuanners"},"content":"Format: ``deadline \u003ctask description\u003e /by \u003cdeadline\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"yuanners"},"content":"Example: ``deadline assigment /by Mon 2pm``","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"yuanners"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"yuanners"},"content":"[D][ ] assigment (by: Mon 2pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"yuanners"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"yuanners"},"content":"## 2.1.3 Add Event","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"yuanners"},"content":"Add a event task.","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"yuanners"},"content":"Format: ``event \u003ctask description\u003e /from \u003cstart\u003e /to \u003cend\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"yuanners"},"content":"Example: ``event Attend class /from 4pm /to 6pm``","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"yuanners"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"yuanners"},"content":"[E][ ] Attend class (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"yuanners"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"yuanners"},"content":"## 2.2 List tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"yuanners"},"content":"List all the tasks stored.","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"yuanners"},"content":"Format: ``list``","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"yuanners"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"yuanners"},"content":"1. [T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"yuanners"},"content":"2. [D][ ] assignment (by: Mon 2pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"yuanners"},"content":"3. [E][ ] Attend class (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"yuanners"},"content":"## 2.3 Change task status","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"yuanners"},"content":"Change the task status by mark or unmark a task.","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"yuanners"},"content":"## 2.3.1 Mark task","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"yuanners"},"content":"Mark a task as completed using task number.","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"yuanners"},"content":"Format: ``mark \u003ctask number\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"yuanners"},"content":"Example: ``mark 1``","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"yuanners"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"yuanners"},"content":"[T][X] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"yuanners"},"content":"## 2.3.2 Un-mark task","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"yuanners"},"content":"Unmark a task as not completed using task number.","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"yuanners"},"content":"Format: ``unmark \u003ctask number\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"yuanners"},"content":"Example: ``unmark 1``","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"yuanners"},"content":"Nice! I\u0027ve marked this task as undone:","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"yuanners"},"content":"[T][ ] homework","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"yuanners"},"content":"## 2.4 Delete task","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"yuanners"},"content":"Delete a task using task number.","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"yuanners"},"content":"Format: ``delete \u003ctask number\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"yuanners"},"content":"Example: ``delete 2``","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"yuanners"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"yuanners"},"content":"\tD[ ] assignment(by:Mon 2pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"yuanners"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"yuanners"},"content":"## 2.5 Find tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"yuanners"},"content":"Find tasks using keyword.","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"yuanners"},"content":"Format: ``find \u003ckeyword\u003e``","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"yuanners"},"content":"Example: ``find book``","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"yuanners"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"yuanners"},"content":"1. [T][ ] read book","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"yuanners"},"content":"2. [D][ ] return book (by: Mon)","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"yuanners"},"content":"3. [E][ ] book club (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":208,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":209,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":210,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":211,"author":{"gitId":"yuanners"},"content":"## 2.6 Exit program","lastModifiedDate":"2023-03-01"},{"lineNumber":212,"author":{"gitId":"yuanners"},"content":"Exit the program.","lastModifiedDate":"2023-03-01"},{"lineNumber":213,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":214,"author":{"gitId":"yuanners"},"content":"Format: ``bye``","lastModifiedDate":"2023-03-01"},{"lineNumber":215,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":216,"author":{"gitId":"yuanners"},"content":"Expected output:","lastModifiedDate":"2023-03-01"},{"lineNumber":217,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":218,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":219,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":220,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":221,"author":{"gitId":"yuanners"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-01"},{"lineNumber":222,"author":{"gitId":"yuanners"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":223,"author":{"gitId":"yuanners"},"content":"````","lastModifiedDate":"2023-03-01"},{"lineNumber":224,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":225,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":226,"author":{"gitId":"yuanners"},"content":"## 3. Summary of features","lastModifiedDate":"2023-03-01"},{"lineNumber":227,"author":{"gitId":"yuanners"},"content":"Here is the table of summary for all the features.","lastModifiedDate":"2023-03-01"},{"lineNumber":228,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":229,"author":{"gitId":"yuanners"},"content":"| Feature      | Format                                               | Example                                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":230,"author":{"gitId":"yuanners"},"content":"|--------------|------------------------------------------------------|------------------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":231,"author":{"gitId":"yuanners"},"content":"| Add todo     | ``todo \u003ctask description\u003e``                          | ``todo homework``                        |","lastModifiedDate":"2023-03-01"},{"lineNumber":232,"author":{"gitId":"yuanners"},"content":"| Add deadline | ``deadline \u003ctask description\u003e /by \u003cdeadline\u003e``       | ``deadline assignment /by Mon 2pm``      |","lastModifiedDate":"2023-03-01"},{"lineNumber":233,"author":{"gitId":"yuanners"},"content":"| Add event    | ``event \u003ctask descirption\u003e /from \u003cstart\u003e /to \u003cend\u003e`` | ``event attend class /from 4pm /to 6pm`` |","lastModifiedDate":"2023-03-01"},{"lineNumber":234,"author":{"gitId":"yuanners"},"content":"| Mark task    | ``mark task number\u003e``                                | ``mark 1``                               |","lastModifiedDate":"2023-03-01"},{"lineNumber":235,"author":{"gitId":"yuanners"},"content":"| Unmark task  | ``unmark \u003ctask number\u003e``                             | ``unmark 1``                             |  ","lastModifiedDate":"2023-03-01"},{"lineNumber":236,"author":{"gitId":"yuanners"},"content":"| List tasks   | ``list``                                             | ``list``                                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":237,"author":{"gitId":"yuanners"},"content":"| Delete tasks | ``delete \u003ctask number\u003e``                             | ``delete 2``                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":238,"author":{"gitId":"yuanners"},"content":"| Find tasks   | ``find \u003ckeyword\u003e``                                   | ``find book``                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":239,"author":{"gitId":"yuanners"},"content":"| Exit program | ``exit``                                             | ``exit``                                 |","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"-":19,"yuanners":220}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"import Duke.cmd.Command;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"import Duke.exception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"import Duke.tasklist.taskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"import Duke.ui.textUI;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":" * A chatbot program, which interacts with the user to perform various tasks such as adding, deleting, and listing tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":" * The program uses ArrayList to store the tasks and text files to read and write the tasks data.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":" * The program also catches exceptions if the user enters invalid input.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main (String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"        textUI.printStart ();","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"        Scanner scan \u003d new Scanner (System.in);","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"        String input \u003d scan.nextLine ();","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"        taskList tasks \u003d new taskList ();","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"        /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"         * Main function that takes input from user and perform actions accordingly","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"         */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"        while (!(\"bye\".equalsIgnoreCase (input))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"                Command.checkInput (tasks, input);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"            } catch (DukeException de) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"                System.out.println (de.getMessage ());","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"                System.out.println (\"Please enter again: \");","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"                textUI.printLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"            } finally {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"                input \u003d scan.nextLine ();","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"        textUI.printEnd ();","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"-":3,"yuanners":36}},{"path":"src/main/java/Duke/cmd/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.cmd;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"import Duke.exception.DukeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"import Duke.tasklist.taskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"import Duke.ui.textUI;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"import static Duke.parser.parse.parseTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"import static Duke.ui.textUI.printLine;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":" * Deals with parsed user command and perform specified operations","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"public class Command {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"     * Validate user command according to the commands","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"     * @param input user input command","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"     * @return boolean whether input is in correct format","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"    public static boolean checkCmd (String input) {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"        if (\"mark\".equalsIgnoreCase (input) || \"unmark\".equalsIgnoreCase (input) || \"todo\".equalsIgnoreCase (input)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"                || \"event\".equalsIgnoreCase (input) || \"deadline\".equalsIgnoreCase (input)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"                || \"delete\".equalsIgnoreCase (input) || \"find\".equalsIgnoreCase (input)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"     * Validate user input","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"     * @param tasks stores task list","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"     * @param input user input","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"     * @throws DukeException exception message for incorrect input","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"    public static void checkInput (taskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"        if (input.isEmpty ()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"        String[] arrInput \u003d parseTask (input);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"yuanners"},"content":"        boolean hasDescription \u003d (arrInput.length \u003e 1);","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"        String cmd \u003d arrInput[0];","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"        if (\"list\".equalsIgnoreCase (cmd) \u0026\u0026 hasDescription) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"OOPS!!! Wrong command! Type list to list all tasks.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"yuanners"},"content":"        } else if (hasDescription \u0026\u0026 checkCmd (cmd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"yuanners"},"content":"            String description \u003d arrInput[1];","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"yuanners"},"content":"            readCmd (tasks, cmd, description);","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"yuanners"},"content":"        } else if (\"list\".equalsIgnoreCase (cmd)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"yuanners"},"content":"            textUI.listTasks (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"yuanners"},"content":"        } else if (checkCmd (cmd)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"OOPS!!! The description of a \" + cmd + \" cannot be empty.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"yuanners"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"yuanners"},"content":"     * For commands that require task index, check if user input is integer","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"yuanners"},"content":"     * @param tasks       stores task list","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"yuanners"},"content":"     * @param cmd         user input command","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"yuanners"},"content":"     * @param description user input","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"yuanners"},"content":"     * @return task index","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"yuanners"},"content":"     * @throws DukeException exception message if input is not an integer or not in the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"yuanners"},"content":"    public static int checkIndex (taskList tasks, String cmd, String description) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"yuanners"},"content":"        int index;","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"yuanners"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"yuanners"},"content":"            index \u003d Integer.parseInt (description) - 1;","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"yuanners"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"OOPS!!! The description of a \" + cmd + \" must be a number.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"yuanners"},"content":"        if (index \u003e\u003d tasks.size () || index \u003c 0) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"yuanners"},"content":"            printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"yuanners"},"content":"            throw new DukeException (\"Task \" + (index + 1) + \" does not exist.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"yuanners"},"content":"        } else {","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"yuanners"},"content":"            return index;","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"yuanners"},"content":"     * Perform operations as specified by the user command","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"yuanners"},"content":"     * @param tasks       stores task lists","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"yuanners"},"content":"     * @param cmd         user input command","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"yuanners"},"content":"     * @param description user input","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"yuanners"},"content":"     * @throws DukeException exception message for incorrect input","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"yuanners"},"content":"    public static void readCmd (taskList tasks, String cmd, String description) throws DukeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"yuanners"},"content":"        switch (cmd) {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"yuanners"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"yuanners"},"content":"                tasks.addTodo (description);","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"yuanners"},"content":"                textUI.printTask (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"yuanners"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"yuanners"},"content":"                if (description.contains (\"/by\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"yuanners"},"content":"                    String[] deadlineArr \u003d description.split (\" /by \");","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"yuanners"},"content":"                    if (deadlineArr.length \u003c 2) {","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"yuanners"},"content":"                        printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"yuanners"},"content":"                        throw new DukeException (\"The description and deadline of task cannot be empty.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"yuanners"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"yuanners"},"content":"                    tasks.addDeadline (description);","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"yuanners"},"content":"                    textUI.printTask (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"yuanners"},"content":"                } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"yuanners"},"content":"                    printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"yuanners"},"content":"                    throw new DukeException (\"Please use /by to add deadline. \");","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"yuanners"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"yuanners"},"content":"            case \"event\":","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"yuanners"},"content":"                if (description.contains (\"/from\") \u0026\u0026 description.contains (\"/to\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"yuanners"},"content":"                    String[] startArr \u003d description.split (\" /from \");","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"yuanners"},"content":"                    String[] endArr \u003d description.split (\" /to \");","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"yuanners"},"content":"                    if (startArr.length \u003c 2 || endArr.length \u003c 2) {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"yuanners"},"content":"                        printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"yuanners"},"content":"                        throw new DukeException (\"The description, start and end of event cannot be empty.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"yuanners"},"content":"                    }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"yuanners"},"content":"                    tasks.addEvent (description);","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"yuanners"},"content":"                    textUI.printTask (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"yuanners"},"content":"                } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"yuanners"},"content":"                    printLine ();","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"yuanners"},"content":"                    throw new DukeException (\"Please use /from and /to to add event.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"yuanners"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"yuanners"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"yuanners"},"content":"                int mIndex \u003d checkIndex (tasks, cmd, description);","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"yuanners"},"content":"                tasks.markTask (mIndex);","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"yuanners"},"content":"                textUI.printStatus (tasks, mIndex);","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"yuanners"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"yuanners"},"content":"                int uIndex \u003d checkIndex (tasks, cmd, description);","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"yuanners"},"content":"                tasks.unmarkTask (uIndex);","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"yuanners"},"content":"                textUI.printStatus (tasks, uIndex);","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"yuanners"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"yuanners"},"content":"                int dIndex \u003d checkIndex (tasks, cmd, description);","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"yuanners"},"content":"                textUI.printDelete (tasks, dIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"yuanners"},"content":"                tasks.deleteTask (dIndex);","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"yuanners"},"content":"            case \"find\":","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"yuanners"},"content":"                textUI.findTasks (tasks, description);","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"yuanners"},"content":"                break;","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"yuanners":155}},{"path":"src/main/java/Duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.exception;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":" * Deals with user input exception","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"\tpublic DukeException (String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"\t\tsuper (message);","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"yuanners":10}},{"path":"src/main/java/Duke/parser/parse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.parser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":" * Parser: deals with making sense of the user command","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"public class parse {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"\tpublic static String[] parseTask (String input) {","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t\treturn input.split (\" \", 2);","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"\tpublic static String[] parseDeadline (String input) {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"\t\treturn input.split (\"/by\");","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"\tpublic static String[] parseEventFrom (String input) {","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"\t\treturn input.split (\"/from\");","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"\tpublic static String[] parseEventTo (String input) {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"\t\treturn input.split (\"/to\");","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"yuanners":27}},{"path":"src/main/java/Duke/storage/fileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"import Duke.task.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"import Duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"import java.io.File;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":" * Storage: deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"public class fileIO {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"    private static final String FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e ();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"    protected static int count \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"    public static int getCount () {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"        return count;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"     * Read the tasks from file and add them to task list","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"     * @return updated task list","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"    public static ArrayList\u003cTask\u003e readFile () {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"            File dukeFile \u003d new File (FILEPATH);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"            BufferedReader reader \u003d new BufferedReader (new FileReader (dukeFile));","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"            String data \u003d reader.readLine ();","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"            try {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"                while (data !\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"                    String[] arrData \u003d data.split (\"\\\\|\");","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"                    if (data.startsWith (\"T\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"                        tasks.add (new Task (arrData[2].trim ()));","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"                    } else if (data.startsWith (\"D\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"yuanners"},"content":"                        tasks.add (new Deadline (arrData[2].trim (), arrData[3].trim ()));","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"                    } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"                        String[] arrEvent \u003d arrData[3].split (\"-\");","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"                        tasks.add (new Event (arrData[2].trim (), arrEvent[0].trim (), arrEvent[1].trim ()));","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"                    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"yuanners"},"content":"                    tasks.get (count).setIsDone ((arrData[1].trim ()).equals (\"1\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"yuanners"},"content":"                    count++;","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"yuanners"},"content":"                    data \u003d reader.readLine ();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"yuanners"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"yuanners"},"content":"                reader.close ();","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"yuanners"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"yuanners"},"content":"                System.out.println (\"File is empty\");","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"yuanners"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"yuanners"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"yuanners"},"content":"            File fold \u003d new File (\"data\");","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"yuanners"},"content":"            fold.mkdir ();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"yuanners"},"content":"            File data \u003d new File (\"data/duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"yuanners"},"content":"            try {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"yuanners"},"content":"                data.createNewFile ();","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"yuanners"},"content":"            } catch (IOException i) {","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"yuanners"},"content":"                System.out.println (\"Failed to create file\");","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"yuanners"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"yuanners"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"yuanners"},"content":"            System.out.println (\"Failed to read file.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"yuanners"},"content":"        return tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"yuanners"},"content":"     * Write tasks from task list to file","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"yuanners"},"content":"     * @param tasks task list","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"yuanners"},"content":"    public static void writeFile (ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"yuanners"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"yuanners"},"content":"            FileWriter fileWrite \u003d new FileWriter (FILEPATH, false);","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"yuanners"},"content":"            for (int i \u003d 0; i \u003c tasks.size (); i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"yuanners"},"content":"                fileWrite.write (tasks.get (i).toFile () + System.lineSeparator ());","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"yuanners"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"yuanners"},"content":"            fileWrite.close ();","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"yuanners"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"yuanners"},"content":"            System.out.println (\"Failed to write file.\");","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"yuanners"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"yuanners":89}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"\tprivate String by;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"\tpublic Deadline (String description, String by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"\t\tsuper (description);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"\t\tthis.by \u003d by;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t\tthis.type \u003d \"D\";","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"\t@Override","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"\tpublic String toString () {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"\t\treturn super.toString () + \"(by:\" + by + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"\t@Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"\tpublic String toFile () {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"\t\treturn super.toFile () + \" | \" + by;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"yuanners":22}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"\tprivate String startDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"\tprivate String endDate;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"\tpublic Event (String description, String startDate, String EndDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"\t\tsuper (description);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t\tthis.startDate \u003d startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"\t\tthis.endDate \u003d EndDate;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"\t\tthis.type \u003d \"E\";","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"\t@Override","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"\tpublic String toString () {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"\t\treturn super.toString () + \"(from:\" + startDate + \"to:\" + endDate + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"\t@Override","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"\tpublic String toFile () {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"\t\treturn super.toFile () + \" | \" + startDate + \"-\" + endDate;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"yuanners":25}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.task;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"public class Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"\tprotected String description;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"\tprotected String type;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"\tprotected boolean isDone;","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"\tpublic Task (String description) {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t\tthis.description \u003d description;","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"\t\tthis.isDone \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"\t\tthis.type \u003d \"T\";","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"\tpublic boolean getIsDone () {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"\t\treturn isDone;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"\tpublic void setIsDone (boolean done) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"\t\tisDone \u003d done;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"\tpublic String getDescription () {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"\t\treturn description;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"\tpublic String getType () {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"\t\treturn type;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"\t@Override","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"\tpublic String toString () {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"\t\treturn \"[\" + getStatusIcon () + \"] \" + description;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"\tpublic String toFile () {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"\t\treturn getType () + \" | \" + (getIsDone () ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"\tpublic String getStatusIcon () {","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"\t\treturn (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"yuanners":48}},{"path":"src/main/java/Duke/tasklist/taskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.tasklist;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"import Duke.exception.DukeException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"import Duke.parser.parse;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"import Duke.storage.fileIO;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"import Duke.task.Event;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"import Duke.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":" * contains the task list and all the operations related","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"public class taskList {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"     * When instantiated, read data from stored file and add lists to task list","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"    public taskList () {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"        tasks \u003d fileIO.readFile ();","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"     * Get task index","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"     * @param index task index","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"     * @return specified task","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"    public static Task get (int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"        return tasks.get (index);","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"     * get task list size","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"     * @return size","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"    public static int size () {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"yuanners"},"content":"        return tasks.size ();","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"     * Add todo task to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"yuanners"},"content":"     * @param description task description","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"yuanners"},"content":"    public static void addTodo (String description) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"yuanners"},"content":"        tasks.add (new Task (description));","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"yuanners"},"content":"     * Add deadline task to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"yuanners"},"content":"     * @param description task description","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"yuanners"},"content":"    public static void addDeadline (String description) {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"yuanners"},"content":"        String[] arrInput \u003d parse.parseDeadline (description);","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"yuanners"},"content":"        tasks.add (new Deadline (arrInput[0], arrInput[1]));","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"yuanners"},"content":"     * Add event task to the task list","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"yuanners"},"content":"     * @param description task description","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"yuanners"},"content":"    public static void addEvent (String description) {","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"yuanners"},"content":"        String[] arrInput \u003d parse.parseEventFrom (description);","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"yuanners"},"content":"        String[] eventInput \u003d parse.parseEventTo (arrInput[1]);","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"yuanners"},"content":"        tasks.add (new Event (arrInput[0], eventInput[0], eventInput[1]));","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"yuanners"},"content":"     * Mark specific task as complete","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"yuanners"},"content":"     * @param index task number","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"yuanners"},"content":"    public static void markTask (int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"yuanners"},"content":"        tasks.get (index).setIsDone (true);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"yuanners"},"content":"     * Mark specific task as incomplete","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"yuanners"},"content":"     * @param index task number","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"yuanners"},"content":"    public static void unmarkTask (int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"yuanners"},"content":"        tasks.get (index).setIsDone (false);","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"yuanners"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"yuanners"},"content":"     * Delete task from task list","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"yuanners"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"yuanners"},"content":"     * @param index task number","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"yuanners"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"yuanners"},"content":"    public static void deleteTask (int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"yuanners"},"content":"        tasks.remove (index);","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"yuanners"},"content":"        fileIO.writeFile (tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"yuanners"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"yuanners":110}},{"path":"src/main/java/Duke/ui/textUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"package Duke.ui;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"import Duke.tasklist.taskList;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":" * deals with interaction with user","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"public class textUI {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"\t * print welcome message","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"\tpublic static void printStart () {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"\t\tString logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"yuanners"},"content":"\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"yuanners"},"content":"\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"yuanners"},"content":"\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"What can I do for you?\");","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"yuanners"},"content":"\t * Print the newly added task","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"yuanners"},"content":"\t * @param tasks stores the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"yuanners"},"content":"\tpublic static void printTask (taskList tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"[\" + tasks.get (tasks.size () - 1).getType () + \"]\" + tasks.get (tasks.size () - 1).toString ());","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Now you have \" + tasks.size () + (tasks.size () \u003e 1 ? \" tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"yuanners"},"content":"\t * Print updated status of a specific task","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"yuanners"},"content":"\t * @param tasks stores the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"yuanners"},"content":"\t * @param index user specified task number","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"yuanners"},"content":"\tpublic static void printStatus (taskList tasks, int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Nice! I\u0027ve marked this task as \" + (tasks.get (index).getIsDone () ? \"done\" : \"undone\") + \":\");","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"[\" + tasks.get (index).getType () + \"]\" + tasks.get (index).toString ());","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"yuanners"},"content":"\t * Print the deleted task","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"yuanners"},"content":"\t * @param tasks stores the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"yuanners"},"content":"\t * @param index user specified task number","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"yuanners"},"content":"\tpublic static void printDelete (taskList tasks, int index) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"\t\" + tasks.get (index).getType () + tasks.get (index).toString ());","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Now you have \" + (tasks.size ()-1) + \" tasks in the list.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"yuanners"},"content":"\t * Print all the stored tasks in the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"yuanners"},"content":"\t * @param tasks stores the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"yuanners"},"content":"\tpublic static void listTasks (taskList tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"yuanners"},"content":"\t\tif (tasks.size () \u003e 0) {","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"yuanners"},"content":"\t\t\tSystem.out.println (\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"yuanners"},"content":"\t\t\tfor (int i \u003d 0; i \u003c tasks.size (); i++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"yuanners"},"content":"\t\t\t\tSystem.out.println ((i + 1) + \". \" + \"[\" + tasks.get (i).getType () + \"]\" + tasks.get (i).toString ());","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"yuanners"},"content":"\t\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"yuanners"},"content":"\t\t} else {","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"yuanners"},"content":"\t\t\tSystem.out.println (\"Your list is empty!\");","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"yuanners"},"content":"\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"yuanners"},"content":"\t * Print all the tasks that contains the search keyword","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"yuanners"},"content":"\t * @param tasks store the taskList","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"yuanners"},"content":"\t * @param description user specified keyword","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"yuanners"},"content":"\tpublic static void findTasks (taskList tasks, String description) {","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"yuanners"},"content":"\t\tboolean isFound \u003d false;","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"yuanners"},"content":"\t\tfor (int i \u003d 0; i \u003c tasks.size (); i++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"yuanners"},"content":"\t\t\tif (tasks.get (i).getDescription ().contains (description)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"yuanners"},"content":"\t\t\t\tisFound \u003d true;","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"yuanners"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"yuanners"},"content":"\t\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"yuanners"},"content":"\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"yuanners"},"content":"\t\tif (isFound) {","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"yuanners"},"content":"\t\t\tSystem.out.println (\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"yuanners"},"content":"\t\t\tfor (int i \u003d 0; i \u003c tasks.size (); i++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"yuanners"},"content":"\t\t\t\tif (tasks.get (i).getDescription ().contains (description)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"yuanners"},"content":"\t\t\t\t\tSystem.out.println ((i + 1) + \". \" + \"[\" + tasks.get (i).getType () + \"]\" + tasks.get (i).toString ());","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"yuanners"},"content":"\t\t\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"yuanners"},"content":"\t\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"yuanners"},"content":"\t\t} else {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"yuanners"},"content":"\t\t\tSystem.out.println (\"There is no matching task.\");","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"yuanners"},"content":"\t\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"yuanners"},"content":"\t * Print before exit program","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"yuanners"},"content":"\tpublic static void printEnd () {","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"yuanners"},"content":"\t\tprintLine ();","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"yuanners"},"content":"\t/**","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"yuanners"},"content":"\t * Print the line separator","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"yuanners"},"content":"\t */","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"yuanners"},"content":"\tpublic static void printLine () {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"yuanners"},"content":"\t\tSystem.out.println (\"____________________________________________________________\");","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"yuanners"},"content":"\t}","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"yuanners"},"content":"}","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"yuanners"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"yuanners":124}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"T | 0 | homework","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"D | 0 | assignment  |  Monday","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"yuanners":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuanners"},"content":"todo","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"yuanners"},"content":"todo homework","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"yuanners"},"content":"deadline assignment /by Monday","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"yuanners"},"content":"event meeting /from Tue 2pm /to 4pm","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"yuanners"},"content":"mark 1","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"yuanners"},"content":"mark 2","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"yuanners"},"content":"list","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"yuanners"},"content":"unmark 1","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"yuanners"},"content":"unmark 2","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"yuanners"},"content":"list","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"yuanners"},"content":"delete 3","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"yuanners"},"content":"list","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"yuanners"},"content":"bye","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"yuanners":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yuanners"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/Duke.java","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yuanners"},"content":"java -classpath ../bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"yuanners":2}}]
