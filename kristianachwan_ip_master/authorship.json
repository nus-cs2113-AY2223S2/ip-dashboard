[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristianachwan":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import duke.model.*;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import duke.utils.DataAccess;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_ADDED_PREFIX \u003d \"Got it. I\u0027ve added this task:\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_REMOVED_PREFIX \u003d \"Noted! I\u0027ve removed this task\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"    static DataAccess dataAccess \u003d new DataAccess(\"data/duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        printDuke();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        String input;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        while (true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"            Command command \u003d new Command(input);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"            String[] payloadData \u003d command.getPayload().getData();","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"                switch (command.getType()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"                    case \"list\":","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d getTasksList();","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"                    case \"mark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleMarkTask(command);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleUnmarkTask(command);","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"                    case \"task\":","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleAddTask(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"                    case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleAddTodo(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"                    case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleAddDeadline(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"                    case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleAddEvent(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"                    case \"delete\":","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d handleDeleteTask(payloadData);","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"                    case \"bye\":","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"                        outputMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"                        System.exit(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"                    default:","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"kristianachwan"},"content":"                        throw new InvalidCommandException();","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"kristianachwan"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"kristianachwan"},"content":"                outputMessage \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"\\t\" + outputMessage);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"kristianachwan"},"content":"            dataAccess.writeToFile(\"\\t\" + getTasksList());","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"kristianachwan"},"content":"    public static String handleDeleteTask(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"kristianachwan"},"content":"        int removedIndex \u003d Integer.parseInt(payloadData[0]);","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"kristianachwan"},"content":"        Task removedTask \u003d tasks.get(removedIndex - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"kristianachwan"},"content":"        tasks.remove(removedIndex - 1);","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d TASK_REMOVED_PREFIX + removedTask.toString() + System.lineSeparator() + \"\\t\" + getTasksInformation();","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"kristianachwan"},"content":"    public static String handleAddEvent(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"kristianachwan"},"content":"        Task newEvent \u003d new Event(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d TASK_ADDED_PREFIX + newEvent.toString() + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"kristianachwan"},"content":"                + getTasksInformation();","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"kristianachwan"},"content":"    public static String handleAddDeadline(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"kristianachwan"},"content":"        Deadline newDeadline \u003d new Deadline(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d TASK_ADDED_PREFIX + newDeadline.toString() + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"kristianachwan"},"content":"                + getTasksInformation();","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"kristianachwan"},"content":"    public static String handleAddTodo(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"kristianachwan"},"content":"        Task newTodo \u003d new ToDo(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d TASK_ADDED_PREFIX + newTodo.toString() + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"kristianachwan"},"content":"                + getTasksInformation();","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"kristianachwan"},"content":"    public static String handleAddTask(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"kristianachwan"},"content":"        Task newTask \u003d new Task(payloadData);","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d TASK_ADDED_PREFIX + newTask.toString() + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"kristianachwan"},"content":"                + getTasksInformation();","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"kristianachwan"},"content":"    public static String handleMarkTask(Command command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"kristianachwan"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"kristianachwan"},"content":"        taskIndex \u003d Integer.parseInt(command.getPayload().getData()[0]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"kristianachwan"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"kristianachwan"},"content":"                + tasks.get(taskIndex).toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"kristianachwan"},"content":"    public static String handleUnmarkTask(Command command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":125,"author":{"gitId":"kristianachwan"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-14"},{"lineNumber":126,"author":{"gitId":"kristianachwan"},"content":"        taskIndex \u003d Integer.parseInt(command.getPayload().getData()[0]) - 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"kristianachwan"},"content":"        tasks.get(taskIndex).unmarkAsDone();","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"kristianachwan"},"content":"        outputMessage \u003d \"Ok, I\u0027ve marked this task as not done:\" + System.lineSeparator() + \"\\t\"","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"kristianachwan"},"content":"                + tasks.get(taskIndex).toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"kristianachwan"},"content":"        return outputMessage;","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"kristianachwan"},"content":"    public static void printDuke() {","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"kristianachwan"},"content":"        String logo \u003d \" ____        _\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"kristianachwan"},"content":"                + \"|  _ \\\\ _   _| | _____\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"kristianachwan"},"content":"                + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"kristianachwan"},"content":"                + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"kristianachwan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"kristianachwan"},"content":"                + logo","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"kristianachwan"},"content":"                + \"Hello! I\u0027m duke.Duke!\" + System.lineSeparator()","lastModifiedDate":"2023-02-08"},{"lineNumber":142,"author":{"gitId":"kristianachwan"},"content":"                + \"What I can do for you?\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"kristianachwan"},"content":"                + \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"kristianachwan"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"kristianachwan"},"content":"    public static String getTasksInformation() {","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"kristianachwan"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"kristianachwan"},"content":"    public static String getTasksList() {","lastModifiedDate":"2023-02-14"},{"lineNumber":152,"author":{"gitId":"kristianachwan"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"kristianachwan"},"content":"            return \"Tasks is empty...\";","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"kristianachwan"},"content":"        String tasksList \u003d \"\";","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"kristianachwan"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"kristianachwan"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"kristianachwan"},"content":"            tasksList +\u003d String.format(\"%3d. \", (i + 1)) + tasks.get(i).toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"kristianachwan"},"content":"            if (i \u003c numberOfTasks - 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"kristianachwan"},"content":"                tasksList +\u003d System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"kristianachwan"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"kristianachwan"},"content":"        return tasksList;","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":165,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kristianachwan":162,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.exception;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    private static final String DUKE_PREFIX \u003d \"Duke Error: \";","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    public static String[] parseCommand (String command) throws InvalidCommandException{","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"        String[] commandArray \u003d command.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        if (commandArray.length \u003c 2){","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Description of  cannot be empty!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"        return Arrays.copyOfRange(commandArray, 1, commandArray.length);","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        super(DUKE_PREFIX + message);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":21}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.exception;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"I\u0027m sorry but I couldn\u0027t understand you :(\";","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    public InvalidCommandException(String message){","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    public InvalidCommandException () {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        super(DEFAULT_MESSAGE);","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":13}},{"path":"src/main/java/duke/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"public class Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"    protected String type;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"    protected Payload payload;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"    public Command(String input) {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"        String[] commandArray \u003d input.split(\" \");","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"        this.type \u003d commandArray[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"        String[] payloadStringArray \u003d input.split(this.type);","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        if (payloadStringArray.length \u003e 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"            payload \u003d new Payload(trimStringArray(payloadStringArray[1].split(\"/\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"            payload \u003d new Payload();","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"    public String getType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        return this.type;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"    public Payload getPayload() {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        return this.payload;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    public String[] trimStringArray(String[] stringArray) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"        String[] trimmedStringArray \u003d new String[stringArray.length];","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"        for (int i \u003d 0; i \u003c stringArray.length; i++) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"            trimmedStringArray[i] \u003d stringArray[i].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"        return trimmedStringArray;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"kristianachwan":33}},{"path":"src/main/java/duke/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    protected String deadlineBy;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    public Deadline(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 2) {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete deadline description!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"        this.deadlineBy \u003d descriptionArray[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePrefix \u003d \"[D]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePostfix \u003d \" (\" + \"by: \" + this.deadlineBy + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        return deadlinePrefix + taskString + deadlinePostfix;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":23}},{"path":"src/main/java/duke/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    protected String eventStart;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"    protected String eventEnd;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    public Event(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 3) {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete description of event!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"test\");","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"        this.eventStart \u003d descriptionArray[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        this.eventEnd \u003d descriptionArray[2];","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePrefix \u003d \"[E]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        String eventPostfix \u003d \" (\" + \"from: \" + this.eventStart + \" to: \" + this.eventEnd + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"        return deadlinePrefix + taskString + eventPostfix;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":27}},{"path":"src/main/java/duke/model/Payload.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"public class Payload {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"    protected String[] data;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    public Payload() {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"        this.data \u003d new String[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    public Payload(String[] data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    public String[] getData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"        return data;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"kristianachwan":18}},{"path":"src/main/java/duke/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    public Task() {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    public Task(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Description of task cannot be empty!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    public Task(String[] descriptionArray, boolean isDone) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        this(descriptionArray);","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \"\\t\" + this.taskName;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"kristianachwan":43}},{"path":"src/main/java/duke/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"    public ToDo(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete description of ToDo!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        String todoPrefix \u003d \"[T]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        return todoPrefix + taskString;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":20}},{"path":"src/main/java/duke/utils/DataAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.utils;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"public class DataAccess {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    String filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    public DataAccess(String filePath) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    public void writeToFile(String text) {","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"            emptyFile();","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.write(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"Error writing to file: \" + filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    public void emptyFile() {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.write(\"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"kristianachwan":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"todo","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"event /from mon","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"deadline","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"blah","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"test","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"mark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"delete 1","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"delete 2","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"bye","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/**/*.java","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristianachwan":1,"-":37}}]
