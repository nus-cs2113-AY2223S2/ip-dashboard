[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristianachwan":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"\t  1. [D][ ]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"\t  2. [E][ ]\tCS2113 tP Meeting (from: Friday 16.00pm to: 18.00pm)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"kristianachwan":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"Duke is a Command-Line Interface (CLI) task manager. It allows you to keep track of your tasks quickly and navigate","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"through those tasks quickly.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"- Adding different types of tasks:","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    - Todo: the most basic type of task","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    - Deadline: type of task which you can assign the due date of it","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    - Event: type of task which has a start and end date","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"- Searching based on keyword and listing all tasks are also supported","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"## Getting started","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"\u003e Java 11 is recommended to run `Duke`","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"1. Download the latest ip.jar from [here](https://github.com/kristianachwan/ip/releases)","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"2. Go to the directory where you downloaded","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"3. Run `java -jar ip.jar`","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"## Add ToDo","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"Adds todo to your list. Format: `todo \u003ctodo-name\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"### Adding `ToDo` example:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"todo CS2113 tP Meeting","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"    [T][ ]\tCS2113 tP Meeting","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"## Add Deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"Adds deadline to your list. Format: `deadline \u003cdeadline-name\u003e /\u003cdue-by\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"### Adding `Deadline` example:","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"deadline tP Meeting /Friday 16.00pm","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"    [D][ ]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"## Add Deadline","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"Adds event to your list. Format: `event \u003cevent-name\u003e /\u003cstart-time\u003e /\u003cend-time\u003e `","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"### Adding `Event` example:","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"kristianachwan"},"content":"event CS2113 tP Meeting /Friday 16.00pm /18.00pm","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"kristianachwan"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"kristianachwan"},"content":"    [E][ ]\tCS2113 tP Meeting (from: Friday 16.00pm to: 18.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"kristianachwan"},"content":"### Listing all tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"kristianachwan"},"content":"List all of your tasks. Format: `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"kristianachwan"},"content":"### Listing all tasks example:","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"kristianachwan"},"content":"      1. [T][ ]\tCS2113 tP Meeting","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"kristianachwan"},"content":"      2. [D][ ]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"kristianachwan"},"content":"      3. [E][ ]\tCS2113 tP Meeting (from: Friday 16.00pm to: 18.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"kristianachwan"},"content":"## Deleting a task:","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"kristianachwan"},"content":"Delete your task by indicate the index of the task. Format: `delete \u003ctask-index\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"kristianachwan"},"content":"### Deleting a task example:","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"kristianachwan"},"content":"delete 1","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"kristianachwan"},"content":"    Noted! I\u0027ve removed this task","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"kristianachwan"},"content":"    [T][ ]\tCS2113 tP Meeting","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"kristianachwan"},"content":"## Finding specific tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"kristianachwan"},"content":"Find your task based on specific keyword. Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"kristianachwan"},"content":"### Finding specific tasks example","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"kristianachwan"},"content":"find tP","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"kristianachwan"},"content":"    [D][ ]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"kristianachwan"},"content":"    [E][ ]\tCS2113 tP Meeting (from: Friday 16.00pm to: 18.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"kristianachwan"},"content":"## Marking task as done","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"kristianachwan"},"content":"Mark your task as done. It will have `[X]` when it is listed again.","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"kristianachwan"},"content":"Format: `mark \u003ctask-index\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"kristianachwan"},"content":"### Marking task as done example","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"kristianachwan"},"content":"mark 1 ","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"kristianachwan"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"kristianachwan"},"content":"    [D][X]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"kristianachwan"},"content":"### Marking task as undone","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"kristianachwan"},"content":"Mark your task as undone (or unmark). It will revert back to `[]`.","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"kristianachwan"},"content":"Format: `unmark \u003ctask-index\u003e`","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"kristianachwan"},"content":"unmark 1","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"kristianachwan"},"content":"    Ok, I\u0027ve marked this task as not done:","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"kristianachwan"},"content":"    [D][ ]\ttP Meeting (by: Friday 16.00pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"kristianachwan"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"kristianachwan"},"content":"### Exiting the program","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"kristianachwan"},"content":"bye","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"kristianachwan"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"kristianachwan"},"content":"    ____________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"kristianachwan":116,"-":27}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"\t  1. [T][ ]\tasd1","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"\t  2. [T][ ]\tasd23","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"\t  3. [T][ ]\tasd33","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"\t  4. [T][ ]\ta","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"\t  5. [D][ ]\tasd (by: 2pm)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"kristianachwan":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.boundary.Ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import duke.controller.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"import duke.utils.Parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"import duke.utils.Storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":" * A class that serves as an entry point to the application","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        Storage dataAccess \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        Ui ui \u003d new Ui(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        ui.printDuke();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        String input;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"        while (true) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"            ui.readCommand(command);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"            dataAccess.writeToFile(\"\\t\" + taskList.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kristianachwan":29,"-":3}},{"path":"src/main/java/duke/boundary/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.boundary;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.controller.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import duke.model.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":" * Class that is mainly responsible to display an information to the user","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"public class Ui {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     * Prefix used when the task is added","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_ADDED_PREFIX \u003d \"Got it. I\u0027ve added this task:\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"     * Prefix used when the task is deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_DELETED_PREFIX \u003d \"Noted! I\u0027ve removed this task\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"     * Prefix used when the task is marked","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_MARKED_PREFIX \u003d \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"     * Prefix used when the task is unmarked","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"    static final String TASK_UNMARKED_PREFIX \u003d \"Ok, I\u0027ve marked this task as not done:\" + System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"     * TaskList attached to this Ui object","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initiates an Ui object","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"     * @param taskList the TaskList object attached to this Ui object","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"        setTaskList(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"     * A method that classifies different cases of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"     * @param command The command object represents tokenized user command","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"    public void readCommand(Command command) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"        Payload payload \u003d command.getPayload();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"        String[] payloadData \u003d payload.getData();","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"        Task task;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"        Event event;","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"        Deadline deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"kristianachwan"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"            switch (command.getType()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"kristianachwan"},"content":"                case \"find\":","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"kristianachwan"},"content":"                    this.printSearchedTasks(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"kristianachwan"},"content":"                case \"list\":","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"kristianachwan"},"content":"                    this.printTaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"kristianachwan"},"content":"                case \"mark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"kristianachwan"},"content":"                    task \u003d taskList.handleMarkTask(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"kristianachwan"},"content":"                    this.printMarkMessage(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"kristianachwan"},"content":"                case \"unmark\":","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"kristianachwan"},"content":"                    task \u003d taskList.handleUnmarkTask(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"kristianachwan"},"content":"                    this.printUnmarkMessage(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"kristianachwan"},"content":"                case \"task\":","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"kristianachwan"},"content":"                    task \u003d taskList.handleAddTask(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"kristianachwan"},"content":"                    this.printAddMessage(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"kristianachwan"},"content":"                case \"todo\":","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"kristianachwan"},"content":"                    ToDo todo \u003d taskList.handleAddTodo(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"kristianachwan"},"content":"                    this.printAddMessage(todo);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"kristianachwan"},"content":"                case \"deadline\":","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"kristianachwan"},"content":"                    deadline \u003d taskList.handleAddDeadline(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"kristianachwan"},"content":"                    this.printAddMessage(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"kristianachwan"},"content":"                case \"event\":","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"kristianachwan"},"content":"                    event \u003d taskList.handleAddEvent(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"kristianachwan"},"content":"                    this.printAddMessage(event);","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"kristianachwan"},"content":"                case \"delete\":","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"kristianachwan"},"content":"                    task \u003d taskList.handleDeleteTask(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"kristianachwan"},"content":"                    this.printDeleteMessage(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"kristianachwan"},"content":"                    break;","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"kristianachwan"},"content":"                case \"bye\":","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"kristianachwan"},"content":"                    this.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"kristianachwan"},"content":"                    System.exit(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"kristianachwan"},"content":"                default:","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"kristianachwan"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"kristianachwan"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"kristianachwan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"kristianachwan"},"content":"            this.printMessage(e.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"kristianachwan"},"content":"     * Method to print the searched tasks i.e. if the taskName contains the searched keyword","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data the command object","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"kristianachwan"},"content":"    public void printSearchedTasks(String[] payloadData) {","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"kristianachwan"},"content":"        String keyword \u003d payloadData[0];","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"kristianachwan"},"content":"        ArrayList\u003cTask\u003e searchedTasks \u003d taskList.getSearchedTasks(keyword);","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"kristianachwan"},"content":"        this.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"kristianachwan"},"content":"        for (int i \u003d 0; i \u003c searchedTasks.size(); i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"kristianachwan"},"content":"            System.out.printf(\"\\t\" + \"%3d.\" + searchedTasks.get(i).toString() + System.lineSeparator(), i + 1);","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"kristianachwan"},"content":"        this.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"kristianachwan"},"content":"     * Method to print message after marking a task","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"kristianachwan"},"content":"     * @param task Task object to be marked","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"kristianachwan"},"content":"    public void printMarkMessage(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"kristianachwan"},"content":"        this.printMessage(TASK_MARKED_PREFIX + task.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"kristianachwan"},"content":"     * Method to print message after unmarking a task","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"kristianachwan"},"content":"     * @param task Task object to be unmarked","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"kristianachwan"},"content":"    public void printUnmarkMessage(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"kristianachwan"},"content":"        this.printMessage(TASK_UNMARKED_PREFIX + task.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"kristianachwan"},"content":"     * Method to print a message after adding a task","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"kristianachwan"},"content":"     * @param task Task object to be added","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"kristianachwan"},"content":"    public void printAddMessage(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"kristianachwan"},"content":"        this.printMessage(TASK_ADDED_PREFIX + task.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"kristianachwan"},"content":"     * Method to print a message after deleting a task","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"kristianachwan"},"content":"     * @param task Task object to be deleted","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"kristianachwan"},"content":"    public void printDeleteMessage(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"kristianachwan"},"content":"        this.printMessage(TASK_DELETED_PREFIX + task.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"kristianachwan"},"content":"     * Method to print a horizontla line","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"kristianachwan"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"kristianachwan"},"content":"     * Method to print a formatted message","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"kristianachwan"},"content":"     * @param message The message to be formatted","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"kristianachwan"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"kristianachwan"},"content":"        this.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"\\t\" + message);","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"kristianachwan"},"content":"        this.printHorizontalLine();","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"kristianachwan"},"content":"     * Method that set the taskList attached to this Ui object","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"kristianachwan"},"content":"     * @param taskList The attached taskList object","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"kristianachwan"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"kristianachwan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"kristianachwan"},"content":"     * Method to pritn a welcome message of Duke","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"kristianachwan"},"content":"    public void printDuke() {","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"kristianachwan"},"content":"        String logo \u003d \" ____        _\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"kristianachwan"},"content":"                + \"|  _ \\\\ _   _| | _____\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"kristianachwan"},"content":"                + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"kristianachwan"},"content":"                + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"kristianachwan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"kristianachwan"},"content":"                + logo","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"kristianachwan"},"content":"                + \"Hello! I\u0027m duke.Duke!\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"kristianachwan"},"content":"                + \"What I can do for you?\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"kristianachwan"},"content":"                + \"____________________________________________________________\" + System.lineSeparator()","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"kristianachwan"},"content":"        );","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"kristianachwan"},"content":"     * Method that prints the TaskList object representation","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"kristianachwan"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"kristianachwan"},"content":"        this.printMessage(taskList.toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"kristianachwan":207}},{"path":"src/main/java/duke/controller/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.controller;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"import duke.model.ToDo;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":" * A class that manages a collection of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"public class TaskList {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     * The collection of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initializes the collection of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"     * Method that unmarks a task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"     * @return The unmarked task","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    public Task handleUnmarkTask(String[] payloadData) {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"        int taskIndex \u003d taskIndex \u003d Integer.parseInt(payloadData[0]) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"        Task unmarkedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"        unmarkedTask.unmarkAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"        return unmarkedTask;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"     * Method that marks a task as done","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"     * @return The marked task","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"    public Task handleMarkTask(String[] payloadData) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"        int taskIndex \u003d Integer.parseInt(payloadData[0]) - 1;","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"        Task markedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"        markedTask.markAsDone();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"        return markedTask;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"     * Method that returns the number of tasks of a taskList","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"     * @return The number of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"kristianachwan"},"content":"    public int getTasksNumber() {","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"kristianachwan"},"content":"        return tasks.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"kristianachwan"},"content":"     * A method that deletes a specific task","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData THe payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"kristianachwan"},"content":"     * @return The deleted task","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException If the information provided is insufficient","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"kristianachwan"},"content":"    public Task handleDeleteTask(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"kristianachwan"},"content":"        int removedIndex \u003d Integer.parseInt(payloadData[0]);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"kristianachwan"},"content":"        Task removedTask \u003d tasks.get(removedIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"kristianachwan"},"content":"        tasks.remove(removedIndex - 1);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"kristianachwan"},"content":"        return removedTask;","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"kristianachwan"},"content":"     * Method that add an event to tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"kristianachwan"},"content":"     * @return The added Event","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException If the information provided is insufficient","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"kristianachwan"},"content":"    public Event handleAddEvent(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"kristianachwan"},"content":"        Event newEvent \u003d new Event(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"kristianachwan"},"content":"        return newEvent;","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"kristianachwan"},"content":"     * Method that add a deadline to tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"kristianachwan"},"content":"     * @return The added Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException If the information provided is insufficient","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"kristianachwan"},"content":"    public Deadline handleAddDeadline(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"kristianachwan"},"content":"        Deadline newDeadline \u003d new Deadline(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"kristianachwan"},"content":"        return newDeadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"kristianachwan"},"content":"     * Method that add a todo to tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"kristianachwan"},"content":"     * @return The added ToDo","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException If the information provided is insufficient","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"kristianachwan"},"content":"    public ToDo handleAddTodo(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"kristianachwan"},"content":"        ToDo newTodo \u003d new ToDo(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"kristianachwan"},"content":"        return newTodo;","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"kristianachwan"},"content":"     * Method that add a task to tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"kristianachwan"},"content":"     * @param payloadData The payload data of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"kristianachwan"},"content":"     * @return The added Task","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException If the information provided is insufficient","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"kristianachwan"},"content":"    public Task handleAddTask(String[] payloadData) throws InvalidCommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"kristianachwan"},"content":"        String outputMessage;","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"kristianachwan"},"content":"        Task newTask \u003d new Task(payloadData);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"kristianachwan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"kristianachwan"},"content":"        return newTask;","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"kristianachwan"},"content":"     * Method that converts a collection of tasks entity into its spring representation","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"kristianachwan"},"content":"     * @return The spring representation of tasks","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"kristianachwan"},"content":"        int size \u003d this.getTasksNumber();","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"kristianachwan"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"kristianachwan"},"content":"            return \"Task is empty...\";","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"kristianachwan"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"kristianachwan"},"content":"        int numberOfTasks \u003d size;","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"kristianachwan"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"kristianachwan"},"content":"            taskListString +\u003d String.format(\"%3d. \", (i + 1)) + tasks.get(i).toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"kristianachwan"},"content":"            if (i \u003c numberOfTasks - 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"kristianachwan"},"content":"                taskListString +\u003d System.lineSeparator() + \"\\t\";","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"kristianachwan"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"kristianachwan"},"content":"        return taskListString;","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"kristianachwan"},"content":"    public ArrayList\u003cTask\u003e getSearchedTasks(String keyword) {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"kristianachwan"},"content":"        ArrayList\u003cTask\u003e searchedTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"kristianachwan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"kristianachwan"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"kristianachwan"},"content":"                searchedTasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"kristianachwan"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"kristianachwan"},"content":"        return searchedTasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"kristianachwan":160}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.exception;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":" * A class that represents basic custom exception for Duke","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"     * Prefix for exception message","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    private static final String DUKE_PREFIX \u003d \"Duke Error: \";","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initiates the exception message","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"     * @param message The message corresponding to the exception","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        super(DUKE_PREFIX + message);","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":23}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.exception;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":" * A class that represents custom exception that is thrown when the command is considered invalid","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"     * Default message when message is not specified","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    private static final String DEFAULT_MESSAGE \u003d \"I\u0027m sorry but I couldn\u0027t understand you :(\";","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initializes the message of the exception","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     * @param message The message related to the exception","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"     * Empty constructor that initializes with default message","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"        super(DEFAULT_MESSAGE);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":27}},{"path":"src/main/java/duke/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":" * A class to represent the command type and the payload of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"public class Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"     * Represents the type of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    protected String type;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"     * Represents the payload of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    protected Payload payload;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"     * Method to return the type of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"     * @return The type of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"    public String getType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        return this.type;","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"     * Method to set the type of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"     * @param type The type of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"    public void setType(String type) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"     * Method to get the payload of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"     * @return The Payload object corresponding to the command object","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    public Payload getPayload() {","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"        return this.payload;","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"     * Method to set the payload of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"     * @param payload The payload of the command","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"    public void setPayload(Payload payload) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"        this.payload \u003d payload;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"kristianachwan":53}},{"path":"src/main/java/duke/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":" * A class to store the Deadline entity","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     * Represents the time when the deadline is due","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    protected String deadlineBy;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initializes the deadline\u0027s deadlineBy and the deadline name","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"     * @param descriptionArray","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    public Deadline(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 2) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete deadline description!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"        this.deadlineBy \u003d descriptionArray[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"     * Method to represent Deadline as a string","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"     * @return String representation of Deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePrefix \u003d \"[D]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePostfix \u003d \" (\" + \"by: \" + this.deadlineBy + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"        return deadlinePrefix + taskString + deadlinePostfix;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":40}},{"path":"src/main/java/duke/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":" * A class to store Event entity","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"     * Represents the start of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"    protected String eventStart;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     * Represents the end of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"    protected String eventEnd;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     * A constructor that intializes the start and end of the event, along with the name of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"     * @param descriptionArray","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    public Event(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 3) {","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete description of event!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"        System.out.println(\"test\");","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"        this.eventStart \u003d descriptionArray[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"        this.eventEnd \u003d descriptionArray[2];","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"     * Method to represent Event as a string","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"     * @return String representation of Event","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"        String deadlinePrefix \u003d \"[E]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"        String eventPostfix \u003d \" (\" + \"from: \" + this.eventStart + \" to: \" + this.eventEnd + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"        return deadlinePrefix + taskString + eventPostfix;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":49}},{"path":"src/main/java/duke/model/Payload.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":" * A class to represent the payload or argument of a Command object","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"public class Payload {","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"     * Represent the data of the payload","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    protected String[] data;","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that indicates an empty payload","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"    public Payload() {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"        this.data \u003d new String[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initializes the data of the payload","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"     * @param data","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"    public Payload(String[] data) {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"        this.data \u003d data;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     * Method to return the data of the payload","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"     * @return Array of string that represents multiple tokenized String","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"    public String[] getData() {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"        return data;","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"kristianachwan":38}},{"path":"src/main/java/duke/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":" * A class to store the Task entity","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     * Represents the name of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"    protected String taskName;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     * Represents the state of the task, whether is done or not","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"     * Empty constructor that does nothing","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"    public Task() {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"     * Task Constructor that takes an array of String to describe the entity","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"     * @param descriptionArray The array of String of information","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException When it is not given sufficient information","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"    public Task(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 1) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Description of task cannot be empty!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"     * Task Constructor that takes an array of String to describe the entity and extra argument to initialize the todo whether is done or not.","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"     * @param descriptionArray The array of String of information","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"     * @param isDone           The state of a Task object","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException When it is not given sufficient information","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"    public Task(String[] descriptionArray, boolean isDone) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"        this(descriptionArray);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"     * Method to mark as done a task","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"kristianachwan"},"content":"     * Method to unmark as done a task","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"kristianachwan"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"kristianachwan"},"content":"     * Method to return the state of a task using string. X means that it is done, while empty space means that it is still not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"kristianachwan"},"content":"     * @return String representation of the state of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"kristianachwan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"kristianachwan"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"kristianachwan"},"content":"     * Method to represent Task as a string","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"kristianachwan"},"content":"     * @return String representation of Task","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"kristianachwan"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \"\\t\" + this.taskName;","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"kristianachwan"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"kristianachwan"},"content":"        return this.taskName;","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"kristianachwan":88}},{"path":"src/main/java/duke/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.model;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":" * A class to store the ToDo entity","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"     * ToDo Constructor that takes an array of String to describe the entity","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"     * @param descriptionArray The array of String of information","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"     * @throws InvalidCommandException When it is not given sufficient information","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"    public ToDo(String[] descriptionArray) throws InvalidCommandException {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"        if (descriptionArray.length \u003c 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"            throw new InvalidCommandException(\"Incomplete description of ToDo!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        this.taskName \u003d descriptionArray[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"     * Method to represent ToDo as a string","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"     * @return String representation of ToDo","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"        String todoPrefix \u003d \"[T]\";","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"        return todoPrefix + taskString;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"kristianachwan":34}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.utils;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Command;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import duke.model.Payload;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":" * Class that serves as a parser to tokenize the input","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"public class Parser {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"     * Method to parse the input into command object","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"     * @param input The string input from the user","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"     * @return The corresponding command object that is tokenized","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"        String[] commandArray \u003d trimmedInput.split(\" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"        command.setType(commandArray[0].trim());","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"        String[] payloadStringArray \u003d trimmedInput.split(command.getType());","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"        if (payloadStringArray.length \u003e 1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"            command.setPayload(new Payload(trimStringArray(payloadStringArray[1].split(\"/\"))));","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"        } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"            command.setPayload(new Payload());","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"        return command;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"     * Method to trim every String inside an array","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"     * @param stringArray The string array about to be trimmed","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"     * @return The trimmed stringArray","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"    public static String[] trimStringArray(String[] stringArray) {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"        String[] trimmedStringArray \u003d new String[stringArray.length];","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"        for (int i \u003d 0; i \u003c stringArray.length; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"            trimmedStringArray[i] \u003d stringArray[i].trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"        return trimmedStringArray;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"kristianachwan":47}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"package duke.utils;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":" * Class that serves interaction between txt and CLI app","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"public class Storage {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"     * The base filepath of the saved txt","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"    String filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kristianachwan"},"content":"     * Constructor that initializes the Storage object","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kristianachwan"},"content":"     * @param filePath The filepath of the txt file","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kristianachwan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kristianachwan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kristianachwan"},"content":"     * Method to write to a file","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kristianachwan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kristianachwan"},"content":"     * @param text Text to be written to a file","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kristianachwan"},"content":"    public void writeToFile(String text) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"kristianachwan"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"kristianachwan"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"kristianachwan"},"content":"            this.emptyFile();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.write(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"kristianachwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"Error writing to file: \" + filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"kristianachwan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kristianachwan"},"content":"     * Method to empty the file","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kristianachwan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kristianachwan"},"content":"    public void emptyFile() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"kristianachwan"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"kristianachwan"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath, false));","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.write(\"\");","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"kristianachwan"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"kristianachwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"kristianachwan"},"content":"            System.out.println(\"Cannot empty the file: \" + filePath);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"kristianachwan"},"content":"            ;","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"kristianachwan"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"kristianachwan"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"kristianachwan"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"kristianachwan"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"kristianachwan":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kristianachwan"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"kristianachwan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"kristianachwan"},"content":"todo","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"kristianachwan"},"content":"event /from mon","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"kristianachwan"},"content":"deadline","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"kristianachwan"},"content":"blah","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"kristianachwan"},"content":"test","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"kristianachwan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"kristianachwan"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"kristianachwan"},"content":"mark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"kristianachwan"},"content":"delete 1","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"kristianachwan"},"content":"delete 2","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"kristianachwan"},"content":"unmark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"kristianachwan"},"content":"bye","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"kristianachwan":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kristianachwan"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/**/*.java","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kristianachwan":1,"-":37}}]
