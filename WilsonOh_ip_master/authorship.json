[{"path":"app/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"/*","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":" * This generated file contains a sample Java application project to get you started.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":" * For more details take a look at the \u0027Building Java \u0026 JVM projects\u0027 chapter in the Gradle","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":" * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"plugins {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    // Apply the application plugin to add support for building a CLI application in Java.","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    id \u0027com.adarshr.test-logger\u0027 version \u00273.2.0\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"/* checkstyle {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"\t// use one common config file for all subprojects","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"\tconfigFile \u003d project(\u0027:\u0027).file(\u0027config/checkstyle/checkstyle.xml\u0027)","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"\tconfigProperties \u003d [ \"suppressionFile\" : project(\u0027:\u0027).file(\u0027config/checkstyle/suppressions.xml\u0027)]","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"} */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"java {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"  archivesBaseName \u003d \"sagyo\"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"  options.release \u003d 11","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"repositories {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"    // Use Maven Central for resolving dependencies.","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"    mavenCentral()","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"testlogger {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"    theme \u0027mocha\u0027 // project level","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"    slowThreshold 5000","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"dependencies {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"    // Use JUnit test framework.","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"    testImplementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"    // This dependency is used by the application.","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"    implementation \u0027com.google.guava:guava:31.1-jre\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"application {","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"    // Define the main class for the application.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"    mainClass \u003d \u0027wilsonoh.sagyo.Main\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"run {","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"jar {","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"  manifest {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"    attributes(\"Main-Class\": \"wilsonoh.sagyo.Main\")","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"  }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":62}},{"path":"app/src/main/java/wilsonoh/sagyo/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.parser.TaskParser;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.ui.TextFormatter;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"public class Main {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"     * Get the current tasks formatted in the form:","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"     * 1. Task1","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"     * 2. Task2","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"     * ...","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"     * @return The list of task strings in formatted form","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"    public String[] getTasksFormatted() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"        return IntStream.rangeClosed(1, tasks.size())","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"            .mapToObj(idx -\u003e String.format(\"%d: %s\", idx, tasks.get(idx - 1)))","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"            .toArray(String[] ::new);","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"     * Adds a new task to the task list","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"     * Runner function of the class, executes the main loop","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"    public void run() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"        TaskParser parser \u003d new TaskParser();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"        TextFormatter ui \u003d new TextFormatter(2, 120);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"        ui.printLines(\"Welcome to sagyo, your task manager!\", \"What can I do for you?\");","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"        // try-with-resources to close the scanner automatically, preventing resource leaks","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"            while (isRunning) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"                System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"                String[] tokens \u003d line.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"                String command \u003d tokens[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"                switch (command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"                case \"bye\": {","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"                    ui.printLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"                case \"list\": {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"                    ui.printLines(getTasksFormatted());","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"                case \"mark\": {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"                    int idx \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"                    Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"                    task.markDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"                    ui.printLines(\"Nice! I\u0027ve marked this task as done:\", \"  \" + task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"WilsonOh"},"content":"                    int idx \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"                    Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"                    task.unMarkDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"WilsonOh"},"content":"                    ui.printLines(\"OK, I\u0027ve marked this task as not done yet:\", \"  \" + task.toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"                    break;","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"                default: {","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"WilsonOh"},"content":"                    Optional\u003cTask\u003e task \u003d parser.parseInput(line);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"WilsonOh"},"content":"                    if (task.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"WilsonOh"},"content":"                        ui.printLines(String.format(\"%s is not a valid command or task syntax\", line),","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"                                      \"Please try again.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"                    } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"WilsonOh"},"content":"                        addTask(task.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"WilsonOh"},"content":"                        ui.printLines(\"added task: \" + task.get());","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"WilsonOh"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"WilsonOh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"WilsonOh"},"content":"        new Main().run();","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"WilsonOh":92}},{"path":"app/src/main/java/wilsonoh/sagyo/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.parser;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"import java.util.List;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.DeadlineTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.EventTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.Task;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.TodoTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"public class TaskParser {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    private static final Pattern EVENT_REGEX \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        Pattern.compile(\"\\\\s*(?:event|e)\\\\s*(?\u003cname\u003e.+?)\\\\s*/from\\\\s*(?\u003cfrom\u003e.+?)\\\\s*/to\\\\s*(?\u003cto\u003e.+)\\\\s*\");","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    private static final Pattern DEADLINE_REGEX \u003d","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"        Pattern.compile(\"\\\\s*(?:deadline|d)\\\\s*(?\u003cname\u003e.+?)\\\\s*/by\\\\s*(?\u003cby\u003e.+)\\\\s*\");","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    private static final Pattern TODO_REGEX \u003d Pattern.compile(\"\\\\s*(?:todo|t)\\\\s*(?\u003cname\u003e.+)\\\\s*\");","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"    public Optional\u003cTask\u003e parseInput(String input) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cPattern\u003e patterns \u003d new ArrayList\u003c\u003e(List.of(EVENT_REGEX, DEADLINE_REGEX, TODO_REGEX));","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"        for (Pattern pattern : patterns) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"            Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"            if (matcher.find()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"                if (matcher.pattern().equals(EVENT_REGEX)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"                    return Optional.of(","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"                        new EventTask(matcher.group(\"name\"), matcher.group(\"from\"), matcher.group(\"to\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"                } else if (matcher.pattern().equals(DEADLINE_REGEX)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"                    return Optional.of(new DeadlineTask(matcher.group(\"name\"), matcher.group(\"by\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"                } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"                    return Optional.of(new TodoTask(matcher.group(\"name\")));","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"        return Optional.empty();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"WilsonOh":39}},{"path":"app/src/main/java/wilsonoh/sagyo/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"    private String by;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"    public DeadlineTask(String taskName, String by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"WilsonOh":16}},{"path":"app/src/main/java/wilsonoh/sagyo/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"    private String from;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"    private String to;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"    public EventTask(String taskName, String from, String to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"WilsonOh":18}},{"path":"app/src/main/java/wilsonoh/sagyo/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"    private String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"    private boolean done;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        this.name \u003d taskName;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"    public void unMarkDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"[%s] %s\", this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":25}},{"path":"app/src/main/java/wilsonoh/sagyo/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"        super(taskName);","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    public String toString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"WilsonOh":13}},{"path":"app/src/main/java/wilsonoh/sagyo/ui/ColorCodes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":" * ANSI colorcodes taken from https://stackoverflow.com/a/5762502","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"public class ColorCodes {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"    public static final String RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"    public static final String BLACK \u003d \"\\u001B[30m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    public static final String RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    public static final String GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    public static final String YELLOW \u003d \"\\u001B[33m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    public static final String BLUE \u003d \"\\u001B[34m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    public static final String PURPLE \u003d \"\\u001B[35m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    public static final String CYAN \u003d \"\\u001B[36m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    public static final String WHITE \u003d \"\\u001B[37m\";","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":16}},{"path":"app/src/main/java/wilsonoh/sagyo/ui/TextFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo.ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static wilsonoh.sagyo.ui.ColorCodes.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":" * Helper class for printing out formatted text","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"public class TextFormatter {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    public static final int DEFAULT_MAX_WIDTH \u003d 50;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    private int numIndent;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    private int maxWidth;","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    public TextFormatter(int indentation, int maxWidth) {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        this.numIndent \u003d indentation;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"        this.maxWidth \u003d maxWidth;","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"    public TextFormatter(int indentation) {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"        this.numIndent \u003d indentation;","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        this.maxWidth \u003d DEFAULT_MAX_WIDTH;","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"     * Clear screen method which only works on unix systems for now","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"    private void clearScreen() {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"        System.out.print(\"\\033\\143\");","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"     * Prints lines of text and prints them in a nice little box","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"     * Partially adapted from https://stackoverflow.com/a/58780542 with","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"     * a little python to java translation (java string formatting isn\u0027t the best...)","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"     * @param lines Variable argument. Takes in any number of lines to be printed in a box","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"    public void printLines(String... lines) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"        clearScreen();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(BLUE);","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"        String indentation \u003d \" \".repeat(numIndent);","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"        // Stream and map the lines into their respectives lengths, and then get the max length","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"        // while making sure it does not exceed the maxWidth set","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"        int textWidth \u003d Math.min(Arrays.stream(lines).mapToInt(String::length).max().orElse(0), maxWidth);","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"        StringBuilder toPrint \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"        toPrint.append(String.format(\"┌%s┐\\n\", \"─\".repeat((numIndent * 2) + textWidth)));","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"            if (line.length() \u003e maxWidth - 3) {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"                line \u003d line.substring(0, maxWidth - 4);","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"                line +\u003d \"...\";","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"            String format \u003d String.format(\"│%%s%%-%ds%%s│\\n\", textWidth);","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"            toPrint.append(String.format(format, indentation, line, indentation));","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"        toPrint.append(String.format(\"└%s┘\\n\", \"─\".repeat((numIndent * 2) + textWidth)));","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(toPrint);","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(RESET);","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":62}},{"path":"app/src/test/java/wilsonoh/sagyo/AppTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"/*","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":" * This Java source file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"package wilsonoh.sagyo;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.Assert.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"import org.junit.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.DeadlineTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.EventTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"import wilsonoh.sagyo.tasks.TodoTask;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"public class AppTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"    public void testAddTasks() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"        Main duke \u003d new Main();","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        duke.addTask(new TodoTask(\"foo\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"        duke.addTask(new DeadlineTask(\"bar\", \"Friday 4pm\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"        duke.addTask(new EventTask(\"baz\", \"monday\", \"tuesday\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"        String[] expected \u003d new String[] {\"1: [T][ ] foo\", \"2: [D][ ] bar (by: Friday 4pm)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"                                          \"3: [E][ ] baz (from: monday to: tuesday)\"};","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"        String[] output \u003d duke.getTasksFormatted();","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"        assertArrayEquals(\"Add tasks works\", expected, output);","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"    public void testResources() throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"        InputStream resourceStream \u003d AppTest.class.getClassLoader().getResourceAsStream(\"test.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(resourceStream));","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"        assertEquals(br.readLine(), \"testing 123\");","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":38}},{"path":"app/src/test/resources/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"testing 123","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"@rem","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"@rem This is normally unused","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"@rem Find java.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"goto fail","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"echo.","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"goto fail","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":":execute","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"WilsonOh"},"content":"@rem Setup the command line","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"@rem Execute Gradle","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"WilsonOh"},"content":":end","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"WilsonOh"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"WilsonOh"},"content":":fail","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"WilsonOh"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"WilsonOh"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"WilsonOh"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"WilsonOh"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"WilsonOh"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"WilsonOh"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"WilsonOh"},"content":":mainEnd","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"WilsonOh"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":":omega","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":92}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"/*","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":" * in the user manual at https://docs.gradle.org/7.6/userguide/multi_project_builds.html","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"rootProject.name \u003d \u0027sagyo\u0027","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"include(\u0027app\u0027)","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"WilsonOh":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"todo borrow book","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"deadline return book /by Tuesday","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"event gym /from 1pm /to 3pm","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"event programming exam /from Friday 2pm to Monday 10pm!!","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"bye","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"WilsonOh":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"# Must run this script from the root directory","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"# Build the jar file using gradle","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"./gradlew jar -q","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"# run the jar file, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"java -jar app/build/libs/sagyo.jar \u003c text-ui-test/input.txt \u003e text-ui-test/ACTUAL.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"diff text-ui-test/ACTUAL.TXT text-ui-test/EXPECTED.TXT","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":14,"WilsonOh":6}}]
