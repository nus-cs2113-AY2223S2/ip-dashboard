[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"# Duke individual project","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"This is a project for a task organiser app. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"## User Guide","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"1. [Setting up](#setting-up)","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"2. [Features](#features)","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"   1. [Adding a task```todo```](#adding-a-task-todo),[Adding a task```deadline```](#adding-a-task-deadline),[Adding a task```event```](#adding-a-task-event)","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"   2. [Deleting a task```delete```](#deleting-a-task-delete)","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"   3. [Marking a task as done```mark```](#Marking-a-task-as-done-mark)","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"   4. [Unmarking a task as done```unmark```](#Unmarking-a-task-as-done-unmark)","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"   5. [Finding tasks```find```](#Finding-tasks-find)","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"   6. [Displaying all tasks```list```](#Displaying-all-tasks-list)","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"   7. [Exit Duke`bye`](#exit-duke-bye)","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"## Setting Up","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"When run correctly, you should see something like this below as the output:","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"   ````","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"   ````","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"## Features","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"This section includes the functionalities of Duke, as well as the commands\u0027 formats.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"### Adding a task `todo`","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"The ```todo``` command allows you to add in tasks that do not have a deadline or duration.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"Format: ```todo [TASK_NAME]```","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"todo sleep","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"### Adding a task ```deadline```","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"The `deadline` command allows you to add in tasks that have a specific deadline. Separate the `[TASK_NAME]` and `[DEADLINE]` with a `/`.","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"Format: `deadline [TASK_NAME] /[DEADLINE]`","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"### Adding a task ```event```","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"The `event` command allows you to add in tasks that occurs within a period of time. Separate the `[TASK_NAME]`,`[FROM]` and `[TO]` with `/`.","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"Format: `event [TASK_NAME] /[FROM] /[TO]`","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"event sleep /from 10pm /to 8am","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"### Deleting a task ```delete```","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"The `delete` command allows you to delete any current task specified by `[INDEX]` in the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"Format: `delete [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"delete 1","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"will remove task *sleep* from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"*Note: `delete` command could not be undo once called.*","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"### Marking a task as done ```mark```","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"The `mark` command allows you to mark any task specified by the`[INDEX]` as done. Marking the task as done does not delete the task from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"Format: `mark [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"mark 1","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"will mark task *sleep* as done, indicated by `[x]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"### unmarking a task as done ```unmark```","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"The `unmark` command allows you to unmark any previously marked task. The task to be unmarked is specified by the`[INDEX]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"Format: `unmark [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"unmark 1","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"will unmark task *sleep*, indicated by `[ ]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"### Finding tasks ```find```","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"The `find` command allows you to find any tasks containing the substring `[NAME]`. It will return a list of tasks containing `[NAME]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"Format: `find [NAME]`","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"find sleep","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"or","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"find lee","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"will return task *sleep*.","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"### Displaying all tasks ```list```","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"The `list` command displays a list of current tasks.","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"Format: `list`","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"list","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"will display `1. [T][X] sleep`","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"### Exit duke ```bye```","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"The `bye` command will exit the program.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"-":11,"YC-Michael":123}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"# Duke individual project","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"This is a project for a task organiser app. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"## User Guide","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"1. [Setting up](#setting-up)","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"2. [Features](#features)","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    1. [Adding a task```todo```](#adding-a-task-todo),[Adding a task```deadline```](#adding-a-task-deadline),[Adding a task```event```](#adding-a-task-event)","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    2. [Deleting a task```delete```](#deleting-a-task-delete)","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    3. [Marking a task as done```mark```](#Marking-a-task-as-done-mark)","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    4. [Unmarking a task as done```unmark```](#Unmarking-a-task-as-done-unmark)","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    5. [Finding tasks```find```](#Finding-tasks-find)","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    6. [Displaying all tasks```list```](#Displaying-all-tasks-list)","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    7. [Exit Duke`bye`](#exit-duke-bye)","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"## Setting Up","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"When run correctly, you should see something like this below as the output:","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"   ````","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"   Hello from","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    ____        _        ","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"   ````","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"This section includes the functionalities of Duke, as well as the commands\u0027 formats.","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"### Adding a task `todo`","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"The ```todo``` command allows you to add in tasks that do not have a deadline or duration.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"Format: ```todo [TASK_NAME]```","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"todo sleep","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"### Adding a task ```deadline```","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"The `deadline` command allows you to add in tasks that have a specific deadline. Separate the `[TASK_NAME]` and `[DEADLINE]` with a `/`.","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"Format: `deadline [TASK_NAME] /[DEADLINE]`","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"deadline sleep /by 10pm","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"### Adding a task ```event```","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"The `event` command allows you to add in tasks that occurs within a period of time. Separate the `[TASK_NAME]`,`[FROM]` and `[TO]` with `/`.","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"Format: `event [TASK_NAME] /[FROM] /[TO]`","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"event sleep /from 10pm /to 8am","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"### Deleting a task ```delete```","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"The `delete` command allows you to delete any current task specified by `[INDEX]` in the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"Format: `delete [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"delete 1","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"will remove task *sleep* from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"*Note: `delete` command could not be undo once called.*","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"### Marking a task as done ```mark```","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"The `mark` command allows you to mark any task specified by the`[INDEX]` as done. Marking the task as done does not delete the task from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"Format: `mark [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"mark 1","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"will mark task *sleep* as done, indicated by `[x]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"### unmarking a task as done ```unmark```","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"The `unmark` command allows you to unmark any previously marked task. The task to be unmarked is specified by the`[INDEX]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"Format: `unmark [INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"unmark 1","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"will unmark task *sleep*, indicated by `[ ]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"### Finding tasks ```find```","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"The `find` command allows you to find any tasks containing the substring `[NAME]`. It will return a list of tasks containing `[NAME]`.","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"Format: `find [NAME]`","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"find sleep","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"or ","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"find lee","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"will return task *sleep*.","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"### Displaying all tasks ```list```","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"The `list` command displays a list of current tasks.","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"Format: `list`","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"Example: ","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"```","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"list","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"``` ","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"will display `1. [T][X] sleep`","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"### Exit duke ```bye```","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"The `bye` command will exit the program.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"-":28,"YC-Michael":106}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":" * Represents tasks that are labelled as \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    protected String by;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"     * Add label \"[D]\" and due date \"by\" to a task.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"     * @return tasks in deadline format.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"YC-Michael":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":" * Main class of Duke that calls the various functionalities of Duke","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    private static final int REMOVE_FROM \u003d 5;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"    private static final int REMOVE_TO \u003d 3;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    private static final int REMOVE_BY \u003d 3;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"     * Read file from the filepath and load it to the list. Takes in and process user inputs before","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"     * storing into lists.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"     * @param filepath path of the file that stores user inputs.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"    public Duke (String filepath){","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"        try{","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"            storeTasksInList(storage.loadFileContents());","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        while(true){","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"            processUserInput(userInput,true);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"    private void storeTasksInList(ArrayList\u003cString\u003e commandsFromFile){","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        for(String s: commandsFromFile){","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"            processUserInput(s,false);","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"        new Duke(\"DUKE/Duke.txt\");","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"    private void processUserInput(String userInput, boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"        String[] commandAndDescription \u003d parser.splitIntoCommand(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"        String command \u003d commandAndDescription[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"        String description \u003d commandAndDescription[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"            switch (command) {","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_BYE:","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"                    ui.printByeMessage();","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_EVENT: //append","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"                    executeEventCommand(description,canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"                    if(canPrintFeedback){","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"                        storage.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_DEADLINE: //append","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"                    executeDeadlineCommand(description,canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"                    if(canPrintFeedback){","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"                        storage.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_LIST:","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"                    executeListCommand(canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_TODO: //append","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"                    executeTodoCommand(description,canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"                    if(canPrintFeedback){","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"                        storage.appendToFile(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_MARK: //write","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"                    executeMarkCommand(description,canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"                    if(canPrintFeedback){","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"                        storage.writeToFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_UNMARK://write","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"YC-Michael"},"content":"                    executeUnmarkCommand(description,canPrintFeedback);","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"YC-Michael"},"content":"                    if(canPrintFeedback){","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"YC-Michael"},"content":"                        storage.writeToFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"YC-Michael"},"content":"                    }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_DELETE:","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"YC-Michael"},"content":"                    executeDeleteCommand(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"YC-Michael"},"content":"                case COMMAND_FIND:","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"YC-Michael"},"content":"                    executeFindCommand(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"YC-Michael"},"content":"                    break;","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"YC-Michael"},"content":"                default:","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"YC-Michael"},"content":"                    ui.showInvalidCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":114,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"YC-Michael"},"content":"        }catch(IOException e){","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"YC-Michael"},"content":"            ui.showCannotEditFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"YC-Michael"},"content":"    private void executeUnmarkCommand(String description,boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"YC-Michael"},"content":"        //description is the list number","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"YC-Michael"},"content":"        //convert description(string) to description(int)","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"YC-Michael"},"content":"        Integer index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"YC-Michael"},"content":"        tasks.unmarkTaskAtIndex(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"YC-Michael"},"content":"        if(canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"YC-Michael"},"content":"            ui.printUnmarkFeedback(tasks.getTasks(), index);","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"YC-Michael"},"content":"    private void executeFindCommand(String description){","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"YC-Michael"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"YC-Michael"},"content":"        foundTasks \u003d tasks.findTasks(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Tasks found:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":133,"author":{"gitId":"YC-Michael"},"content":"        ui.printList(foundTasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"YC-Michael"},"content":"    private  void executeDeleteCommand(String description){","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"YC-Michael"},"content":"        Integer index \u003d Integer.parseInt(description)-1;","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"YC-Michael"},"content":"        String deletedTask \u003d tasks.deleteTaskAtIndex(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"YC-Michael"},"content":"        ui.printDeleteFeedback(tasks.getTasks(),deletedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"YC-Michael"},"content":"    private void executeMarkCommand(String description,boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"YC-Michael"},"content":"        Integer index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"YC-Michael"},"content":"        tasks.markTaskAtIndex(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"YC-Michael"},"content":"        if (canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"YC-Michael"},"content":"            ui.printMarkFeedback(tasks.getTasks(), index);","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"YC-Michael"},"content":"    private void executeTodoCommand(String description,boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"YC-Michael"},"content":"            tasks.addTodoToList(description);","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"YC-Michael"},"content":"            if(canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"YC-Michael"},"content":"                ui.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"YC-Michael"},"content":"        }catch (Exception e){","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"YC-Michael"},"content":"            ui.showInsufficientTodoArgs();","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"YC-Michael"},"content":"    private void executeDeadlineCommand(String description,boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":163,"author":{"gitId":"YC-Michael"},"content":"            String[] indexArr \u003d splitDescriptionDeadline(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"YC-Michael"},"content":"            String name \u003d indexArr[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"YC-Michael"},"content":"            String byDate \u003d indexArr[1].substring(REMOVE_BY).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"YC-Michael"},"content":"            tasks.addDeadlineToList(name,byDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"YC-Michael"},"content":"            if(canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"YC-Michael"},"content":"                ui.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"YC-Michael"},"content":"        }catch(DukeException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"YC-Michael"},"content":"            ui.showInsufficientDeadlineArgs();","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"YC-Michael"},"content":"    private static String[] splitDescriptionDeadline(String description) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"YC-Michael"},"content":"        String[] indexArr \u003d description.split(\"/\", 2);","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"YC-Michael"},"content":"        if(indexArr.length \u003c 2){","lastModifiedDate":"2023-02-07"},{"lineNumber":178,"author":{"gitId":"YC-Michael"},"content":"            throw new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-07"},{"lineNumber":179,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"YC-Michael"},"content":"        return indexArr;","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"YC-Michael"},"content":"    private void executeListCommand(boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"YC-Michael"},"content":"        if(canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"YC-Michael"},"content":"            ui.printList(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":188,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"YC-Michael"},"content":"    private void executeEventCommand(String description,boolean canPrintFeedback) {","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"YC-Michael"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"YC-Michael"},"content":"            String[] indexArr \u003d splitDescriptionEvent(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":192,"author":{"gitId":"YC-Michael"},"content":"            String name \u003d indexArr[0].trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"YC-Michael"},"content":"            String fromDate \u003d indexArr[1].substring(REMOVE_FROM).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"YC-Michael"},"content":"            String toDate \u003d indexArr[2].substring(REMOVE_TO).trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"YC-Michael"},"content":"            tasks.addEventToList(name, fromDate, toDate);","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"YC-Michael"},"content":"            if(canPrintFeedback) {","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"YC-Michael"},"content":"                ui.printAcknowledgement(tasks.getTasks());","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":199,"author":{"gitId":"YC-Michael"},"content":"        }catch (DukeException e){","lastModifiedDate":"2023-02-07"},{"lineNumber":200,"author":{"gitId":"YC-Michael"},"content":"            ui.showInsufficientEventArgs();","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":202,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"YC-Michael"},"content":"    private static String[] splitDescriptionEvent(String description) throws DukeException {","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"YC-Michael"},"content":"        String[] indexArr \u003d description.split(\"/\", 3);","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"YC-Michael"},"content":"        if(indexArr.length \u003c 3){","lastModifiedDate":"2023-02-07"},{"lineNumber":208,"author":{"gitId":"YC-Michael"},"content":"            throw new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-07"},{"lineNumber":209,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":210,"author":{"gitId":"YC-Michael"},"content":"        return indexArr;","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":213,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"YC-Michael":212}},{"path":"src/main/java/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"todo eat","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"todo sleep","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"todo play","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"todo eat","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"todo eat","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"todo play","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"todo eat","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"YC-Michael":7}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"    public DukeException(Throwable cause){","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"        super(cause);","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"YC-Michael":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":" * Represents tasks that are labelled as \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"    protected String from;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    protected String to;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    public Event(String description, String from,String to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"     * Add label \"[E]\" and duration \"from\" and \"to\" to a task.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"     * @return tasks in event format.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"YC-Michael":21}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"public class Parser {","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    private String userInput;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    public Parser() {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"     * Splits user input into 2 parts: commandAndArgs[0] and commandAndArgs[1],","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"     * which are command and description of task respectively.","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"     * @param userInput Sentence that user has typed in CLI.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"     * @return 2d string array that contains command and description in index 0 and 1 respectively.","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    public String[] splitIntoCommand(String userInput){","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"        String[] commandAndArgs \u003d userInput.split(\" \",2);","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"        if(commandAndArgs.length \u003d\u003d 1){","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"            return new String[]{commandAndArgs[0],\"\"};","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        return commandAndArgs;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"YC-Michael":28}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":" * deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"public class Storage {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"    private String filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    private ArrayList\u003cString\u003e fileContents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    private ArrayList\u003cString\u003e commandsFromUser \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    private boolean canPrintFeedback \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"     * Read file specified by \u003ccode\u003efilePath\u003c/code\u003e, if it does not exist, create a new file","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"     * named \"duke.txt\". If the file is not empty, read the file contents.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"     * @return File contents in ArrayList \u003cString\u003e type.","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"     * @throws IOException when file does not exist.","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"    public ArrayList\u003cString\u003e loadFileContents() throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        File F \u003d  new File(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        if(!F.exists()){","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"            F \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"            this.filePath \u003d F.getPath().toString();","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"        Scanner s \u003d new Scanner(F);","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"        while(s.hasNext()){","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"            fileContents.add(s.nextLine());","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"        return fileContents;","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"     * iterate an ArrayList with valid user inputs from CLI and write each line into the file.","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"     * Write to file when commands are COMMAND_MARK or COMMAND_UNMARK.","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"     * @throws IOException when program is unable to write to file.","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"        for(String s:commandsFromUser){","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"            fw.write(s);","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"            fw.write(\u0027\\n\u0027);","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        fw.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"     * Appends the most recent valid user inputs from CLI to file.","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"     * Append to file when commands are COMMAND_EVENT, COMMAND_DEADLINE, COMMAND_TODO.","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"     * @param userInput valid commands from CLI.","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"     * @throws IOException when program is unable to append to file.","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"    public void appendToFile(String userInput) throws IOException{","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath,true);","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"        fw.write(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"        fw.write(\u0027\\n\u0027);","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"        fw.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"    public void addGetCommandsFromUser(String userInput){","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"        commandsFromUser.add(userInput);","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"YC-Michael":72}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"    protected String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"    public Task() {","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"        this.name \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        this.name \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"     * Mark if a task is done and unmark if it is not done.","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"     * @return String containing status and name of task.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"    public String toString(){","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"        return(isDone?\"[X] \"+this.name:\"[ ] \"+this.name);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"YC-Michael":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":" * contains and performs operations on the task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":" * Operations include adding, deleting and marking tasks etc.","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"public class TaskList {","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"        return tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"     * Add [T] tasks to list","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"     * @param description name of the task","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"     * @throws DukeException if description is empty","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    public void addTodoToList(String description) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        if(description\u003d\u003d\"\"){","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"            throw new DukeException(new IllegalArgumentException());","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    public void markTaskAtIndex(Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"        tasks.get(index).isDone \u003d true;","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"    public void unmarkTaskAtIndex(Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"        tasks.get(index).isDone \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"    public void addDeadlineToList(String description, String byDate) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"        tasks.add(new Deadline(description, byDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"    public void addEventToList(String description, String fromDate, String toDate) {","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"        tasks.add(new Event(description, fromDate, toDate));","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"     * Delete task from list at specific index.","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"     * @param index index of task to be deleted from the list.","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"     * @return name of deleted task.","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"    public String deleteTaskAtIndex(Integer index){","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        String nameOfToBeDeletedTask \u003d tasks.get(index).name;","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"        tasks.remove((int)index);","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"        return nameOfToBeDeletedTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"     * Find tasks from list that contains a substring \u003ccode\u003edescription\u003c/code\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"     * @param description substring requested by user","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"     * @return list of tasks that contains \u003ccode\u003edescription\u003c/code\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"    public ArrayList\u003cTask\u003e findTasks(String description){","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"        for(Task s:tasks){","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"            if (s.name.contains(description)){","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"                matchedTasks.add(s);","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"        return matchedTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"YC-Michael":72}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":" * Represents tasks that are labelled as \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"     * Add label \"[T]\" to a task.","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"     * @return labelled task.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"YC-Michael":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YC-Michael"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"YC-Michael"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"YC-Michael"},"content":" * Contains interactions with the user","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"YC-Michael"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"YC-Michael"},"content":"public class Ui {","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"YC-Michael"},"content":"    private static final String LINE \u003d \"___________________________________________________\";","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"YC-Michael"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"YC-Michael"},"content":"    public Ui() {","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"YC-Michael"},"content":"    public void printWelcomeMessage(){","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"YC-Michael"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"YC-Michael"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"YC-Michael"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"YC-Michael"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"YC-Michael"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"YC-Michael"},"content":"    public void printAcknowledgement(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"YC-Michael"},"content":"        int lastIndexOfTasks \u003d tasks.size() - 1;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(tasks.get(lastIndexOfTasks).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"YC-Michael"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"YC-Michael"},"content":"     * Iterate the list of tasks and print out to the user. Add 1 to the index as indexing for user","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"YC-Michael"},"content":"     * interface starts from 1.","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"YC-Michael"},"content":"     * @param tasks type and name of tasks.","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"YC-Michael"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"YC-Michael"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"YC-Michael"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"YC-Michael"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"YC-Michael"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"YC-Michael"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"YC-Michael"},"content":"    public void printMarkFeedback(ArrayList\u003cTask\u003e tasks, Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"YC-Michael"},"content":"    public void printDeleteFeedback(ArrayList\u003cTask\u003e tasks, String nameOfDeletedTask){","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Roger. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(nameOfDeletedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"YC-Michael"},"content":"    public void printUnmarkFeedback(ArrayList\u003cTask\u003e tasks, Integer index) {","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(tasks.get(index).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"YC-Michael"},"content":"    public void showCannotEditFile(){","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Unable to write/append to file.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"YC-Michael"},"content":"    public void showLoadingError(){","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Could not read file.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"YC-Michael"},"content":"    public void showInvalidCommand(){","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"No such commands found! Please try again!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"YC-Michael"},"content":"    public void showInsufficientEventArgs(){","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Not enough commands to execute \\\"event\\\"\");","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"YC-Michael"},"content":"    public void showInsufficientDeadlineArgs(){","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Not enough commands to execute \\\"deadline\\\"\");","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"YC-Michael"},"content":"    public void showInsufficientTodoArgs(){","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(\"Unable to add todo: No tasks given.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"YC-Michael"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"YC-Michael"},"content":"    public void printByeMessage() {","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"YC-Michael"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"YC-Michael"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"YC-Michael"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"YC-Michael"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"YC-Michael":99}}]
