[{"path":"src/main/java/app/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.Command;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.MainParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"public class Duke {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor for Duke","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @param filePath The address for storage to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"     * Method to initialise Duke, and execute commands based on user","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"     * input until exit condition is met.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    public void run() {","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"                Command c \u003d MainParser.parse(fullCommand);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"            } finally {","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MustafaAH10"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"MustafaAH10"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":56}},{"path":"src/main/java/app/commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.AddTaskParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":" * Represents a new Deadline command.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"public class AddDeadline extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    private Task newTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to add a new deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandWord First word of user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Remaining user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"    public AddDeadline(String commandWord, String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        this.newTask \u003d AddTaskParser.parseCommand(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print message.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in saving task.","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"        ui.newTaskAddedMessage(newTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":43}},{"path":"src/main/java/app/commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.AddTaskParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" * Represents a new Event command.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"public class AddEvent extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    private Task newTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to add a new event.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandWord First word of user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Remaining user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public AddEvent(String commandWord, String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        this.newTask \u003d AddTaskParser.parseCommand(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print message.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in saving task.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"        ui.newTaskAddedMessage(newTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":39}},{"path":"src/main/java/app/commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.AddTaskParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" * Represents a new Todo command.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"public class AddTodo extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    private Task newTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to add a new todo.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandWord First word of user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Remaining user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public AddTodo(String commandWord, String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        this.newTask \u003d AddTaskParser.parseCommand(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print message.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in saving task.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"        ui.newTaskAddedMessage(newTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":38}},{"path":"src/main/java/app/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":" * Represents the command class to be used by different user commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    public Command(){","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"        setIsExit(false);","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"        return this.isExit;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public void setIsExit(boolean exit) {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        this.isExit \u003d exit;","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":27}},{"path":"src/main/java/app/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" * Represents a command to delete a task from Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    private int index;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to delete a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Contains information about which task to delete.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the input.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public DeleteCommand(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        parseInput(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    private void parseInput(String commandDescriptor) throws DukeException{","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"        if (commandDescriptor.length() \u003d\u003d 0){","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            this.index \u003d Integer.parseInt(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"        Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"        ui.taskDeletedMessage(deletedTask, tasks.getTasksCount());","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":43}},{"path":"src/main/java/app/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" * Represents a command to exit and stop running Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     * Sets exit condition to true to stop running Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print exit message.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in exiting Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        ui.showExit();","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        setIsExit(true);","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":27}},{"path":"src/main/java/app/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    private String keyword;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    public FindCommand(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"        parseInput(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    private void parseInput(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"        if (commandDescriptor.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        this.keyword \u003d commandDescriptor;","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d tasks.getTasksWithKeyword(tasks, keyword);","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        ui.printTasksWithKeyword(tasksWithKeyword);","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":31}},{"path":"src/main/java/app/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":" * Represents a command to print all tasks in current Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     * Prints tasks in correct format given current tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print lists.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in printing task.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":24}},{"path":"src/main/java/app/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" * Represents a command to record a task as done and mark it.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    private int index;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to mark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Contains information about which task to mark.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public MarkCommand (String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        parseInput(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    private void parseInput(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"        if (commandDescriptor.length() \u003d\u003d 0){","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            this.index \u003d Integer.parseInt(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print relevant information.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in saving task.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"        Task updatedTask \u003d tasks.markTask(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        ui.taskMarkedMessage(updatedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":49}},{"path":"src/main/java/app/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.save.Storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.ui.Ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" * Represents a command to record a task as not done and unmark it.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    private int index;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to unmark a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @param commandDescriptor Contains information about which task to unmark.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in parsing the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public UnmarkCommand(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        parseInput(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    private void parseInput(String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"        if (commandDescriptor.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"            throw new IncompleteCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            this.index \u003d Integer.parseInt(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks Task-list containing the existing tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"     * @param ui User interface to print relevant information.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"     * @param storage Saving of tasks to memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error in saving task.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"        Task updatedTask \u003d tasks.unmarkTask(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        ui.taskUnmarkedMessage(updatedTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"        storage.write(tasks);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":49}},{"path":"src/main/java/app/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":7}},{"path":"src/main/java/app/exceptions/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"public class IncompleteCommandException extends DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"    public IncompleteCommandException(String commandWord) {","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"        super(\"ONO! The description of \u0027\" + commandWord + \"\u0027 cannot be empty.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"    public IncompleteCommandException(){","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"        super(\"ONO! The description of this command cannot be empty.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":10}},{"path":"src/main/java/app/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"        super(\"ONO! Please enter a valid command.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":8}},{"path":"src/main/java/app/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.exceptions;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"public class InvalidTaskException extends DukeException{","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"        super(\"ONO! Please enter a valid task index.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":8}},{"path":"src/main/java/app/parser/AddTaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.parser;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.IncompleteCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.ToDo;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"public class AddTaskParser {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"    private static Task newTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    public static Task parseCommand(String commandWord, String commandDescriptor) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"        if (commandDescriptor.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"            throw new IncompleteCommandException(commandWord);","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"            String taskDescription;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"                taskDescription \u003d commandDescriptor;","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"                newTask \u003d new ToDo(taskDescription, false);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"                String[] parts \u003d commandDescriptor.split(\"/by\");","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"                taskDescription \u003d parts[0].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"                String deadline \u003d parts[1].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"                newTask \u003d new Deadline(taskDescription, false, deadline);","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            case \"event\":","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"                String[] fromParts \u003d commandDescriptor.split(\"/from\");","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"                taskDescription \u003d fromParts[0].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"                String[] toParts \u003d fromParts[1].split(\"/to\");","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"                String startTime \u003d toParts[0].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"                String endTime \u003d toParts[1].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"                newTask \u003d new Event(taskDescription, false, startTime, endTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"                break;","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"        return newTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":45}},{"path":"src/main/java/app/parser/MainParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.parser;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.Command;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.DeleteCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.ExitCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.ListCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.MarkCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.UnmarkCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.AddDeadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.AddTodo;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.AddEvent;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"import app.commands.FindCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":" * Represents Duke\u0027s main parser used to distinguish the","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":" * main command of the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"public class MainParser {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to enter various cases and assign","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"     * command type based on user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"     * @param input The entire user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"     * @return The type of command that the user input.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If input is invalid or error in processing new command.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"        String[] userInputArray \u003d input.split(\" \");","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        String commandWord \u003d userInputArray[0];","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"        String commandDescriptor \u003d input.substring(commandWord.length()).trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        Command c;","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new ExitCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"        case \"list\":","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new DeleteCommand(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new AddTodo(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new AddDeadline(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"MustafaAH10"},"content":"        case \"event\":","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new AddEvent(commandWord, commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MustafaAH10"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new MarkCommand(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MustafaAH10"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new UnmarkCommand(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MustafaAH10"},"content":"        case \"find\":","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"MustafaAH10"},"content":"            c \u003d new FindCommand(commandDescriptor);","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MustafaAH10"},"content":"        default:","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"MustafaAH10"},"content":"        return c;","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"MustafaAH10":71}},{"path":"src/main/java/app/parser/StringParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.parser;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.ToDo;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" * Used to load existing tasks into a Task-list when Duke is first run.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"public class StringParser {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to reconstruct a task from a given line in the text file.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     * @param line The string containing all the relevant information about a task.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"     * @return A new task to be added to a task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If there was an error in processing string and returning task.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    public static Task convertStringToTask(String line) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"        Task task;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"        String delimiter \u003d \"\\\\|\";","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        String[] taskDetails \u003d line.split(delimiter);","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        String taskType \u003d taskDetails[0].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"        boolean isDone \u003d taskDetails[1].trim().equals(\"1\");","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        String taskDescription \u003d taskDetails[2].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"        String startTime, endTime;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        case \"T\":","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"            task \u003d new ToDo(taskDescription, isDone);","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        case \"D\":","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"            endTime \u003d taskDetails[3].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"            task \u003d new Deadline(taskDescription, isDone, endTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"        case \"E\":","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"            startTime \u003d taskDetails[3].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"            endTime \u003d taskDetails[4].trim();","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"            task \u003d new Event(taskDescription, isDone, startTime, endTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"            break;","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"        default:","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"            throw new DukeException(\"ONO! There was an error loading your task list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"        return task;","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":46}},{"path":"src/main/java/app/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.parser;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Event;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.ToDo;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" * Used to convert existing tasks in task-list to text for storage in text file.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"public class TaskParser {","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to convert a particular task into a string with the correct format.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     * @param task The Task to be represented as a string.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"     * @return A string containing all the attributes of the Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If error occurs when processing a Task in the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    public static String convertTaskToString(Task task) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"        String outputString;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"        String delimiter \u003d \" | \";","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        String taskStatus \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        String taskDescription \u003d task.getTaskDescription();","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"            String taskType \u003d \"T\";","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"            outputString \u003d String.join(delimiter, taskType, taskStatus, taskDescription);","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"            String taskType \u003d \"D\";","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"            String endTime \u003d deadline.getDeadline();","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"            outputString \u003d String.join(delimiter, taskType, taskStatus, taskDescription, endTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"            String taskType \u003d \"E\";","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"            String startTime \u003d event.getStartTime();","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"            String endTime \u003d event.getEndTime();","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"            outputString \u003d String.join(delimiter, taskType, taskStatus, taskDescription, startTime, endTime);","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"        } else {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"            throw new DukeException(\"ONO! There was an error saving your task list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"        return outputString + \"\\n\";","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":44}},{"path":"src/main/java/app/save/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.save;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.StringParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import app.parser.TaskParser;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":" * Class used to deal with reading and writing of Tasks from memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"public class Storage {","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    private File taskFile;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        this.taskFile \u003d new File(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to load tasks from memory and add them to a Task-list, if there are any.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"     * @return An ArrayList containing all the Tasks currently in memory.","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If text file containing Tasks does not exist.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"            Scanner scanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"                Task currentTask \u003d StringParser.convertStringToTask(scanner.nextLine());","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"                if (currentTask !\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"                    savedTasks.add(currentTask);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"                }","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"            scanner.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"            return savedTasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"            throw new DukeException(\"You do not have an existing task list.\\n Initialising a new one.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to write tasks from the current iteration of Duke into a text file","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"MustafaAH10"},"content":"     * with the specified directory. Creates a folder and file if it doesn\u0027t yet exist.","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks The Task-list containing all the tasks from the most recent iteration of Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If there was an error in writing tasks to the text file.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"MustafaAH10"},"content":"    public void write(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MustafaAH10"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MustafaAH10"},"content":"        File file \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MustafaAH10"},"content":"        FileWriter fw;","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MustafaAH10"},"content":"            if (!folder.exists() || !file.exists()){","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MustafaAH10"},"content":"                folder.mkdir();","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"MustafaAH10"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MustafaAH10"},"content":"            fw \u003d new FileWriter(taskFile);","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MustafaAH10"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MustafaAH10"},"content":"                if (task \u003d\u003d null) break;","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"MustafaAH10"},"content":"                fw.write(TaskParser.convertTaskToString(task));","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MustafaAH10"},"content":"            fw.close();","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MustafaAH10"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MustafaAH10"},"content":"            throw new DukeException(\"ONO! There was an error when saving your task list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":75}},{"path":"src/main/java/app/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":" * Class used to represent a Deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to create a new Deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"     * @param taskDescription Description of the Deadline inherited from Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"     * @param isDone Boolean value indicating if the Deadline is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"     * @param deadline The actual deadline (due date / expiry / end date etc.).","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    public Deadline(String taskDescription, boolean isDone, String deadline) {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"     * Getter to obtain the actual deadline of a given Deadline Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"     * @return The deadline of a particular Deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        return deadline;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print a Deadline in specified format with its given attributes.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"     * @return A string representation of a Deadline.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"    public String toString(){","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        return \" [D][\" + getStatusIcon() + \"] \" + taskDescription + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":36}},{"path":"src/main/java/app/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":" * Class used to represent an Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"    protected String startTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"    protected String endTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to create a new Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"     * @param taskDescription Description of the Event inherited from Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     * @param isDone Boolean value indicating if the Event is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     * @param startTime Starting time of the Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"     * @param endTime Ending time of the Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"    public Event(String taskDescription, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"     * Getter to obtain starting time of an event.","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"     * @return Starting time of the Event","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"        return startTime;","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"     * Getter to obtain ending time of an event.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"     * @return Ending time of the Event","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"        return endTime;","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print an Event in specified format with its given attributes.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"     * @return A string representation of an Event.","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        return \" [E][\" + getStatusIcon() + \"] \" + taskDescription + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":48}},{"path":"src/main/java/app/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":" * The class used to represent any form of Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to create a new Task type.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"     * @param taskDescription Description of the Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"     * @param isDone Boolean value indicating if the Task is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"        setTaskDescription(taskDescription);","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"        setDone(isDone);","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"        return taskDescription;","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"     * Method used to determine status icon of a Task depending on whether its done.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"     * @return A string containing an \u0027X\u0027 if it\u0027s done and an empty space otherwise.","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"        return (isDone() ? \"X\" : \" \"); //Marks a task done with an X","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"    public String toString() {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"        return null;","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"MustafaAH10":49}},{"path":"src/main/java/app/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.InvalidTaskException;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":" * Class to store the current tasks and useful functions related to the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"public class TaskList {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"        setTasks(tasks);","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"    private void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"        return this.tasks;","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"     * Returns a specific Task using a given index.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"     * @param index The index of the Task that needs to be obtained.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"     * @return The specified Task","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If index is outside the range of the current valid indexes.","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"            return tasks.get(index);","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"     * Method to add a Task to the existing Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"     * @param task The Task to be added to the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MustafaAH10"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"MustafaAH10"},"content":"     * Method to get the current number of Tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"MustafaAH10"},"content":"     * @return The size of the current Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"MustafaAH10"},"content":"    public int getTasksCount() {","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MustafaAH10"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"MustafaAH10"},"content":"     * Method to remove a Task from the existing Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"MustafaAH10"},"content":"     * @param index The index of the Task to be deleted from the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"MustafaAH10"},"content":"     * @return The Task that was deleted from the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If index is outside the range of the current valid indexes.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"MustafaAH10"},"content":"    public Task deleteTask(int index) throws DukeException{","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"MustafaAH10"},"content":"        Task taskToDelete \u003d getTask(index - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"MustafaAH10"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"MustafaAH10"},"content":"     * Method to mark a Task status.","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"MustafaAH10"},"content":"     * @param index The index of the Task to be marked as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"MustafaAH10"},"content":"     * @return The Task that was marked as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If index is outside the range of the current valid indexes.","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"MustafaAH10"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"MustafaAH10"},"content":"        Task markedTask \u003d getTask(index - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"MustafaAH10"},"content":"        markedTask.setDone(true);","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"MustafaAH10"},"content":"        return markedTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"MustafaAH10"},"content":"     * Method to unmark a Task status.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"MustafaAH10"},"content":"     * @param index The index of the Task to be marked as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"MustafaAH10"},"content":"     * @return The Task that was marked as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If index is outside the range of the current valid indexes.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"MustafaAH10"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"MustafaAH10"},"content":"        Task unmarkedTask \u003d getTask(index - 1);","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"MustafaAH10"},"content":"        unmarkedTask.setDone(false);","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"MustafaAH10"},"content":"        return unmarkedTask;","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"MustafaAH10"},"content":"    public ArrayList\u003cTask\u003e getTasksWithKeyword(TaskList tasks, String keyword) {","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"MustafaAH10"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"MustafaAH10"},"content":"        for (Task t : tasks.getTasks()) {","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"MustafaAH10"},"content":"            if (t.getTaskDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"MustafaAH10"},"content":"                tasksWithKeyword.add(t);","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"MustafaAH10"},"content":"        return tasksWithKeyword;","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"MustafaAH10":105}},{"path":"src/main/java/app/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":" * Class used to represent a ToDo.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"     * Constructor to create a new ToDo.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"     * @param taskDescription Description of the ToDo inherited from Task.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"     * @param isDone Boolean value indicating if the ToDo is done or not.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"    public ToDo(String taskDescription, boolean isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print a ToDo in specified format with its given attributes.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     * @return A string representation of a ToDo.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"        return \" [T][\" + getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"MustafaAH10":26}},{"path":"src/main/java/app/ui/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"public class Constants {","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"    public static String LINE \u003d (\"─\".repeat(70));","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print divider that wraps each user input and UI message.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"    public static void printLine(){","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":13}},{"path":"src/main/java/app/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"package app.ui;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"import app.exceptions.DukeException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.Task;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"import app.tasks.TaskList;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"MustafaAH10"},"content":" * Class to handle all interactions with the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"MustafaAH10"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"MustafaAH10"},"content":"public class Ui {","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"MustafaAH10"},"content":"    public static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"MustafaAH10"},"content":"     * Method to take in the input from a user.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"MustafaAH10"},"content":"     * @return The input from the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"MustafaAH10"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"MustafaAH10"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"MustafaAH10"},"content":"        while (command.length() \u003d\u003d 0) {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"MustafaAH10"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"MustafaAH10"},"content":"        return command;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print welcome message after initialisation of Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"MustafaAH10"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"MustafaAH10"},"content":"        Constants.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"MustafaAH10"},"content":"        Constants.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print divider.","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"MustafaAH10"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"MustafaAH10"},"content":"        Constants.printLine();","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"MustafaAH10"},"content":"     * Method to inform user upon initialisation that there are no existing Tasks.","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"MustafaAH10"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"No saved tasks detected! Creating a new list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print exit message before exiting Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"MustafaAH10"},"content":"    public void showExit() {","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"MustafaAH10"},"content":"     * Method to print an error message in-case any Exception occurs during the running of Duke.","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"MustafaAH10"},"content":"     * @param errorMessage The specific message to be displayed to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"MustafaAH10"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"MustafaAH10"},"content":"     * Method to display successful adding of Task to the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"MustafaAH10"},"content":"     * @param newTask The new Task that was just added.","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasksCount The current size of the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"MustafaAH10"},"content":"    public void newTaskAddedMessage(Task newTask, int tasksCount) {","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + newTask.toString() +","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"MustafaAH10"},"content":"                \"\\nYou now have \" + tasksCount + \" tasks in your list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"MustafaAH10"},"content":"     * Method to display all the current Tasks with their attributes in a list format.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasks The current Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"MustafaAH10"},"content":"     * @throws DukeException If there is an error in accessing a specific index.","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"MustafaAH10"},"content":"    public void printTasks(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"MustafaAH10"},"content":"        if (tasks.getTasksCount() \u003d\u003d 0){","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"MustafaAH10"},"content":"            System.out.println(\"There are no tasks in your task list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"MustafaAH10"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasksCount(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"MustafaAH10"},"content":"            String taskDescription \u003d tasks.getTask(i).toString();","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"MustafaAH10"},"content":"            System.out.println((i + 1) + \". \" + taskDescription);","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"MustafaAH10"},"content":"     * Method to display successful deletion of a Task from the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"MustafaAH10"},"content":"     * @param deletedTask The Task that was just deleted.","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"MustafaAH10"},"content":"     * @param tasksCount The current size of the Task-list.","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"MustafaAH10"},"content":"    public void taskDeletedMessage(Task deletedTask, int tasksCount) {","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task.\\n\" + deletedTask.toString() +","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"MustafaAH10"},"content":"                \"\\nYou now have \" + tasksCount + \" tasks left in your list.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"MustafaAH10"},"content":"     * Method to display successful marking of a Task as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"MustafaAH10"},"content":"     * @param markedTask The Task that was marked as done.","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"MustafaAH10"},"content":"    public void taskMarkedMessage(Task markedTask) {","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"MustafaAH10"},"content":"                markedTask.toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"MustafaAH10"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"MustafaAH10"},"content":"     * Method to display successful unmarking of a Task as not done yet.","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"MustafaAH10"},"content":"     * @param unmarkedTask The Task that was unmarked as not done yet.","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"MustafaAH10"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"MustafaAH10"},"content":"    public void taskUnmarkedMessage(Task unmarkedTask) {","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"MustafaAH10"},"content":"        System.out.println(\"OK! I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"MustafaAH10"},"content":"                unmarkedTask.toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"MustafaAH10"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"MustafaAH10"},"content":"    public void printTasksWithKeyword(ArrayList\u003cTask\u003e tasksWithKeyword) {","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"MustafaAH10"},"content":"        if (tasksWithKeyword.size() \u003d\u003d 0){","lastModifiedDate":"2023-02-25"},{"lineNumber":121,"author":{"gitId":"MustafaAH10"},"content":"            System.out.println(\"There are no tasks containing that keyword.\");","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"MustafaAH10"},"content":"        else {","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"MustafaAH10"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"MustafaAH10"},"content":"            for (int i \u003d 0; i \u003c tasksWithKeyword.size(); i++) {","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"MustafaAH10"},"content":"                String taskDescription \u003d tasksWithKeyword.get(i).toString();","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"MustafaAH10"},"content":"                System.out.println((i + 1) + \". \" + taskDescription);","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"MustafaAH10"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":129,"author":{"gitId":"MustafaAH10"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"MustafaAH10"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"MustafaAH10"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MustafaAH10":131}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MustafaAH10"},"content":"event cs2113 tutorial /from wed 3pm /to 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"MustafaAH10"},"content":"todo attend cs2113 lecture","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"MustafaAH10"},"content":"deadline cs2113 ip increment /by fri 4pm","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"MustafaAH10"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"MustafaAH10"},"content":"mark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"MustafaAH10"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"MustafaAH10"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"MustafaAH10"},"content":"unmark 1","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"MustafaAH10"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"MustafaAH10"},"content":"bye","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"MustafaAH10":10}}]
