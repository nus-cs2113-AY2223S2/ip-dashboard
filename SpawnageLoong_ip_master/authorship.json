[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"# Shizuka project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SpawnageLoong"},"content":"3. After that, locate the `src/main/java/Shizuka.java` file, right-click it, and choose `Run Shizuka.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SpawnageLoong":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"SpawnageLoong"},"content":"    private String deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SpawnageLoong"},"content":"    public Deadline(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SpawnageLoong"},"content":"        super(args[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SpawnageLoong"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SpawnageLoong"},"content":"        this.deadline \u003d args[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SpawnageLoong"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SpawnageLoong"},"content":"        return deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SpawnageLoong"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SpawnageLoong"},"content":"        return this.getTaskIcon() + this.getStatusIcon() + \u0027 \u0027 + this.description + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SpawnageLoong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SpawnageLoong":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"public class Event extends Todo {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"SpawnageLoong"},"content":"    private String startDate, endDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SpawnageLoong"},"content":"    public Event(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SpawnageLoong"},"content":"        super(args[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SpawnageLoong"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SpawnageLoong"},"content":"        this.startDate \u003d args[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SpawnageLoong"},"content":"        this.endDate \u003d args[2];","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SpawnageLoong"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SpawnageLoong"},"content":"        return this.getTaskIcon() + this.getStatusIcon() + \u0027 \u0027 + this.description + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SpawnageLoong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SpawnageLoong":13}},{"path":"src/main/java/Shizuka.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"SpawnageLoong"},"content":"public class Shizuka {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"SpawnageLoong"},"content":"    public static String[] parseCommand(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SpawnageLoong"},"content":"        String[] command \u003d new String[2];","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SpawnageLoong"},"content":"        int endIndex \u003d args.indexOf(\u0027 \u0027) + 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"SpawnageLoong"},"content":"        if (endIndex !\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"SpawnageLoong"},"content":"            command[0] \u003d args.substring(0, endIndex - 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SpawnageLoong"},"content":"            command[1] \u003d args.substring(endIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SpawnageLoong"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"SpawnageLoong"},"content":"            command[0] \u003d args;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SpawnageLoong"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"SpawnageLoong"},"content":"        return command;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"SpawnageLoong"},"content":"    public static int parseNumber(String args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"SpawnageLoong"},"content":"        int endIndex \u003d args.indexOf(\u0027 \u0027) + 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"SpawnageLoong"},"content":"        return Integer.parseInt(args.substring(endIndex));","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"SpawnageLoong"},"content":"        final String LOGO \u003d \"   _____  __     _               __        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"SpawnageLoong"},"content":"                + \"  / ___/ / /_   (_)____  __  __ / /__ ____ _\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"SpawnageLoong"},"content":"                + \"  \\\\__ \\\\ / __ \\\\ / //_  / / / / // //_// __ `/\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"SpawnageLoong"},"content":"                + \" ___/ // / / // /  / /_/ /_/ // ,\u003c  / /_/ /\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"SpawnageLoong"},"content":"                + \"/____//_/ /_//_/  /___/\\\\__,_//_/|_| \\\\__,_/ \\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"SpawnageLoong"},"content":"        final String LINE_BREAK \u003d \"____________________\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"SpawnageLoong"},"content":"        final String GREETING \u003d \"Hello, I am Shizuka.\\nHow can I be of assistance?\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"SpawnageLoong"},"content":"        final String EXIT \u003d \"Goodbye.\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"SpawnageLoong"},"content":"        final String PARSE_ERROR \u003d \"I\u0027m sorry, but I don\u0027t recognise that command.\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + LOGO + LINE_BREAK + GREETING + LINE_BREAK);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"SpawnageLoong"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"SpawnageLoong"},"content":"        String line, lineTrimmed, command, commandArgs;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SpawnageLoong"},"content":"        do {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"SpawnageLoong"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"SpawnageLoong"},"content":"            lineTrimmed \u003d line.trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"SpawnageLoong"},"content":"            String[] commandArray \u003d parseCommand(lineTrimmed);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SpawnageLoong"},"content":"            command \u003d commandArray[0];","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SpawnageLoong"},"content":"            commandArgs \u003d commandArray[1];","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SpawnageLoong"},"content":"            int taskNum;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"SpawnageLoong"},"content":"            switch (command) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SpawnageLoong"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"SpawnageLoong"},"content":"            case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.list();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"SpawnageLoong"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"SpawnageLoong"},"content":"                taskNum \u003d parseNumber(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.mark(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"SpawnageLoong"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"SpawnageLoong"},"content":"                taskNum \u003d parseNumber(commandArgs);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.unmark(taskNum);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"SpawnageLoong"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.add(commandArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SpawnageLoong"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.add(commandArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"SpawnageLoong"},"content":"            case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"SpawnageLoong"},"content":"                TodoList.add(commandArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"SpawnageLoong"},"content":"                break;","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SpawnageLoong"},"content":"            default:","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"SpawnageLoong"},"content":"                System.out.println(LINE_BREAK + PARSE_ERROR + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"SpawnageLoong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"SpawnageLoong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"SpawnageLoong"},"content":"        while (!lineTrimmed.equals(\"bye\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + EXIT + LINE_BREAK);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SpawnageLoong":68,"-":3}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"public class Todo {","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"SpawnageLoong"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"SpawnageLoong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"SpawnageLoong"},"content":"    protected String taskType;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"SpawnageLoong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"SpawnageLoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"SpawnageLoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"SpawnageLoong"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SpawnageLoong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SpawnageLoong"},"content":"        return \u0027[\u0027 + (isDone ? \"X\" : \" \") + \u0027]\u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SpawnageLoong"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SpawnageLoong"},"content":"        return \u0027[\u0027 + taskType + \u0027]\u0027;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"SpawnageLoong"},"content":"    public String printTask(){","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SpawnageLoong"},"content":"        return this.getTaskIcon() + getStatusIcon() + \u0027 \u0027 + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SpawnageLoong"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"SpawnageLoong":23}},{"path":"src/main/java/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SpawnageLoong"},"content":"public class TodoList {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"SpawnageLoong"},"content":"    static final String LINE_BREAK \u003d \"____________________\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"SpawnageLoong"},"content":"    static final String YOUR_TODO_LIST \u003d \"This is your todo list.\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"SpawnageLoong"},"content":"    static final String HAVE_ADDED \u003d \"I have added \";","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"SpawnageLoong"},"content":"    static final String TO_LIST \u003d \" to your todo list.\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"SpawnageLoong"},"content":"    static final String MARKED_TASK \u003d \"I have marked Task \";","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"SpawnageLoong"},"content":"    static final String UNMARKED_TASK \u003d \"I have unmarked Task \";","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"SpawnageLoong"},"content":"    static final String IN_LIST \u003d \" in your todo list.\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"SpawnageLoong"},"content":"    static final int MAX_COMMAND_ARGS \u003d 3;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"SpawnageLoong"},"content":"    static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"SpawnageLoong"},"content":"    static final String BY_COMMAND \u003d \" /by\";","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"SpawnageLoong"},"content":"    static final int BY_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"SpawnageLoong"},"content":"    static final String FROM_COMMAND \u003d \" /from\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"SpawnageLoong"},"content":"    static final int FROM_COMMAND_LENGTH \u003d 7;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"SpawnageLoong"},"content":"    static final String TO_COMMAND \u003d \" /to\";","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"SpawnageLoong"},"content":"    static final int TO_COMMAND_LENGTH \u003d 5;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"SpawnageLoong"},"content":"    private static int tasksNumber \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"SpawnageLoong"},"content":"    private static Todo[] todos \u003d new Todo[MAX_TASKS];","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"SpawnageLoong"},"content":"    private static String[] parseDates(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"SpawnageLoong"},"content":"        String[] commandArray \u003d new String[MAX_COMMAND_ARGS];","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"SpawnageLoong"},"content":"        int byIndex \u003d args.indexOf(BY_COMMAND);","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"SpawnageLoong"},"content":"        if (byIndex !\u003d -1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"SpawnageLoong"},"content":"            commandArray[0] \u003d args.substring(0, byIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"SpawnageLoong"},"content":"            commandArray[1] \u003d args.substring(byIndex + BY_COMMAND_LENGTH);","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"SpawnageLoong"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"SpawnageLoong"},"content":"            int fromIndex \u003d args.indexOf(FROM_COMMAND);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"SpawnageLoong"},"content":"            int toIndex \u003d args.indexOf(TO_COMMAND);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"SpawnageLoong"},"content":"            commandArray[0] \u003d args.substring(0, fromIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"SpawnageLoong"},"content":"            commandArray[1] \u003d args.substring(fromIndex + FROM_COMMAND_LENGTH, toIndex);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"SpawnageLoong"},"content":"            commandArray[2] \u003d args.substring(toIndex + TO_COMMAND_LENGTH);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"SpawnageLoong"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"SpawnageLoong"},"content":"        return commandArray;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"SpawnageLoong"},"content":"    public static void add(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"SpawnageLoong"},"content":"        switch (args[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"SpawnageLoong"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"SpawnageLoong"},"content":"            addTodo(args[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"SpawnageLoong"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"SpawnageLoong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"SpawnageLoong"},"content":"            String[] deadlineArray \u003d parseDates(args[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"SpawnageLoong"},"content":"            addDeadline(deadlineArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"SpawnageLoong"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"SpawnageLoong"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"SpawnageLoong"},"content":"            String[] eventArray \u003d parseDates(args[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"SpawnageLoong"},"content":"            addEvent(eventArray);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"SpawnageLoong"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"SpawnageLoong"},"content":"    public static void addTodo(String args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"SpawnageLoong"},"content":"        todos[tasksNumber] \u003d new Todo(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"SpawnageLoong"},"content":"        tasksNumber +\u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + HAVE_ADDED + args + TO_LIST + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"SpawnageLoong"},"content":"    public static void addDeadline(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"SpawnageLoong"},"content":"        todos[tasksNumber] \u003d new Deadline(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"SpawnageLoong"},"content":"        tasksNumber +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + HAVE_ADDED + args[0] + TO_LIST + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"SpawnageLoong"},"content":"    public static void addEvent(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"SpawnageLoong"},"content":"        todos[tasksNumber] \u003d new Event(args);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"SpawnageLoong"},"content":"        tasksNumber +\u003d 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + HAVE_ADDED + args[0] + TO_LIST + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"SpawnageLoong"},"content":"    public static void list() {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.print(LINE_BREAK + YOUR_TODO_LIST + LINE_BREAK);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"SpawnageLoong"},"content":"        for (int i \u003d 0; i \u003c tasksNumber; i +\u003d 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"SpawnageLoong"},"content":"            System.out.println(i + 1 + \".\" + todos[i].printTask());","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"SpawnageLoong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.print(LINE_BREAK);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"SpawnageLoong"},"content":"    public static void mark(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"SpawnageLoong"},"content":"        todos[num - 1].isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + MARKED_TASK + num + IN_LIST + todos[num - 1].getStatusIcon()","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"SpawnageLoong"},"content":"                + \u0027 \u0027 + todos[num - 1].description + \"\\n\" + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"SpawnageLoong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"SpawnageLoong"},"content":"    public static void unmark(int num) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"SpawnageLoong"},"content":"        todos[num - 1].isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"SpawnageLoong"},"content":"        System.out.println(LINE_BREAK + UNMARKED_TASK + num + IN_LIST + todos[num - 1].getStatusIcon()","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"SpawnageLoong"},"content":"                + \u0027 \u0027 + todos[num - 1].description + \"\\n\" + LINE_BREAK);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"SpawnageLoong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"SpawnageLoong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"SpawnageLoong":88}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SpawnageLoong"},"content":"java -classpath ..\\bin Shizuka \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SpawnageLoong":1,"-":20}}]
