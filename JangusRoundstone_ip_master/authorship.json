[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"wang silang","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":4,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"# Duke: Your Personal Agenda Assistant  ðŸ“‘","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"Duke is a Java personal agenda keeper. He is smart enough to assist in your daily activity planning. Below are his functionalities:","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"1. [Add Task](#add)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"    1. [Todo](#t) ","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"    2. [Event](#e)","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"    3. [Deadline](#d)    ","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"2. [Mark/Unmark Task](#mum)","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    1. [Mark Task](#mt)","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"    2. [Unmark Task](#u)","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"3. [Delete Task](#dt)","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"4. [List Task](#lt)","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"5. [Find Task](#ft)","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"6. [Exit](#end)","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"# NOTE:","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"* Follow the input format as mentioned below to avoid errors.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"# 1. Add Task \u003ca name \u003d \"add\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"You can add 3 types of tasks, Todos, Events and Deadlines.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"## 1.1. Todo \u003ca name \u003d \"t\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: todo {task}","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"```todo return book```","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"As per requested Sire, this task has been added to your calendar.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"[T][ ] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"You now have 7 items left","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"## 1.2. Event \u003ca name \u003d \"e\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: event {task} \\from {string} \\to {string}","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"```event meeting with friend /from 4pm /to 6pm```","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"As per requested Sire, this task has been added to your calendar.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"[E][ ] meeting with friend (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"You now have 8 items left","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"## 1.3. Deadline \u003ca name \u003d \"d\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"* Command: deadline {task} \\by {string}","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"```deadline finish CS2113 assignment/by Sunday```","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"JangusRoundstone"},"content":"As per requested Sire, this task has been added to your calendar.","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"JangusRoundstone"},"content":"[D][ ] finish CS2113 assignmen (by: Sunday)","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"JangusRoundstone"},"content":"You now have 9 items left","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"JangusRoundstone"},"content":"# 2. Mark/Unmark Task \u003ca name \u003d \"mum\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"JangusRoundstone"},"content":"Mark the task at the index keyed in by users as done, or unmark it as unfinished.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"JangusRoundstone"},"content":"For index of all current tasks, please see [List Task](#lt).","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"JangusRoundstone"},"content":"## 2.1. Mark Task \u003ca name\u003d\"mt\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: mark {enter task_index}","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"JangusRoundstone"},"content":"```mark 1```","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"JangusRoundstone"},"content":"Sir, your task has been marked as completed.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"JangusRoundstone"},"content":"[T][X] Finish CS2113 iP","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"JangusRoundstone"},"content":"## 2.2. Unmark Task \u003ca name\u003d\"u\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: unmark {enter task_index}","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"JangusRoundstone"},"content":"```unmark 2```","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"JangusRoundstone"},"content":"``` ","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"JangusRoundstone"},"content":"Sir, your task has been unmarked as requested.","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"JangusRoundstone"},"content":"[T][ ] sleep","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"JangusRoundstone"},"content":"# 3. Delete Task \u003ca name \u003d \"dt\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"JangusRoundstone"},"content":"Delete task at keyed in index as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: delete {enter task_index}","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"JangusRoundstone"},"content":"```delete 1```","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"JangusRoundstone"},"content":"Sire, I have removed this task from your schedule","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"JangusRoundstone"},"content":"[T][X] Finish CS2113 iP","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"JangusRoundstone"},"content":"You now have 8 items left","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"JangusRoundstone"},"content":"# 4. List Task \u003ca name \u003d \"lt\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"JangusRoundstone"},"content":"List all tasks in the list as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: list","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"JangusRoundstone"},"content":"```list```","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"JangusRoundstone"},"content":"Your current list of items as requested, sir.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"JangusRoundstone"},"content":"1.[T][ ] sleep","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"JangusRoundstone"},"content":"2.[E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"JangusRoundstone"},"content":"3.[T][ ] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"JangusRoundstone"},"content":"4.[E][ ] meeting with friend (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"JangusRoundstone"},"content":"# 5. Find Task \u003ca name \u003d \"ft\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"JangusRoundstone"},"content":"Find the desired tasks by keying in a term they contain as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"JangusRoundstone"},"content":"* COMMAND: find {keyword}","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"JangusRoundstone"},"content":"```find friend```","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"JangusRoundstone"},"content":"Here are the matching items Sire:","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"JangusRoundstone"},"content":"[E][ ] meeting with friend (from: 4pm to: 6pm)","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"JangusRoundstone"},"content":"# 6. Exit \u003ca name \u003d \"end\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"JangusRoundstone"},"content":"Exit the program as follows:","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"JangusRoundstone"},"content":"Input:","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"JangusRoundstone"},"content":"```bye```","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"JangusRoundstone"},"content":"Output:","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"JangusRoundstone"},"content":"Glad I could be of help!","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"JangusRoundstone"},"content":"```","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"JangusRoundstone"},"content":"# End of user guide","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"JangusRoundstone":150,"-":21}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"    private Ui ui; ","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"    private TaskList tasklist;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"    private Parser parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"    private final int PARSERINDEX \u003d 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"        tasklist \u003d new TaskList(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"    public void run() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        ui.greet();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"        while (parser.getIsRunning()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"            String commandToBeParsed \u003d ui.readCommand();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"            String commandParsed \u003d parser.parseCommand(commandToBeParsed);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"            if (commandParsed.startsWith(\"B\")) { // bye from user, terminate program","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"                parser.setIsRunning(false);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"L\")) { // print list","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.printCurrentList();","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"F\")) { // find tasks in list","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.printTasksFound(commandParsed.substring(PARSERINDEX));","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"M\")) { // mark task","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.mark(commandParsed.substring(PARSERINDEX));","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"U\")) { // unmark task","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.unmark(commandParsed.substring(PARSERINDEX));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"D\")) { // delete task","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.delete(commandParsed.substring(PARSERINDEX));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (commandParsed.startsWith(\"XNC\")) { // null command error","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"                ui.printErrorMessage(\"Sire, I am not trained to understand gibberish.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"            } else { // task keyed in by users","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"                tasklist.addTask(commandParsed.substring(PARSERINDEX));","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"        ui.bye();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"        new Duke(\"dukeData.txt\").run();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JangusRoundstone":44,"-":2}},{"path":"src/main/java/Duke/Exception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"public class EmptyDeadlineException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"JangusRoundstone":4}},{"path":"src/main/java/Duke/Exception/EmptyEventsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"public class EmptyEventsException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"JangusRoundstone":4}},{"path":"src/main/java/Duke/Exception/EmptyToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"public class EmptyToDoException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"JangusRoundstone":4}},{"path":"src/main/java/Duke/Exception/NullCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"public class NullCommandException extends Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"JangusRoundstone":4}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.NullCommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"public class Parser {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"     * Parse the input from user to determine what to do with the given input by appending","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"     * a characteristic letter in front.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"     * @param line input from user to be parsed.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"     * @return a string of user\u0027s input with characteristic letter appended to the front.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws NullCommandException If input is in invalid format.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"    public String parseCommand(String line) {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"            return \"B\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"        } else if (line.equals(\"list\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"            return \"L\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"        } else if (line.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"            return \"M\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"        } else if (line.startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"            return \"U\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"            return \"D\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"            return \"F\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"                Task newTask \u003d new Task(line);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"                if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"                    return \"T\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"                } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"                    return \"A\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"                } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"                    return \"E\" + line;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"                    throw new NullCommandException();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"            } catch (NullCommandException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"                return \"XNC\";","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"     * Gets the boolean value of parser object, for termination check of program","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"     * @return boolean value of isRunning.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"    public boolean getIsRunning() {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"JangusRoundstone"},"content":"        return this.isRunning;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"     * Sets the boolean value of parser object, to terminate the program","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"     * @param bool boolean value of parser object to be set.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"    public void setIsRunning(boolean bool) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"JangusRoundstone"},"content":"        this.isRunning \u003d bool;","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"JangusRoundstone":65}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyDeadlineException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyEventsException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyToDoException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Deadlines;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Events;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.ToDos;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"public class Storage {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int BRACKETSKIP_INDEX \u003d 7;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int FIRSTBRACKET_FRONT \u003d 0;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int FIRSTBRACKET_BACK \u003d 3;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int SECONDBRACKET_FRONT \u003d 3;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int SECONDBRACKET_BACK \u003d 6;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"        fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"     * Write the data to the default file location","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"     * @param taskToBeStored info to be written to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws IOException If default file location is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"    public static void dukeDataStorage(String taskToBeStored) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"        File f \u003d new File(\"dukeData.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"            if (!f.exists()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"                f.createNewFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"            writeToFile(\"dukeData.txt\", taskToBeStored);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"File creation of writing invalid\");","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"     * Parse data stored in file into String object.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"     * @param filePath file path of data file to be read.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"JangusRoundstone"},"content":"     * @return String object representing all the data in the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws FileNotFoundException If file path is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"JangusRoundstone"},"content":"    public static String parseFileContentsToString(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"JangusRoundstone"},"content":"        String fileContent \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"        if (!f.exists()) { // for first log in, there is no file","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"JangusRoundstone"},"content":"            return fileContent;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"JangusRoundstone"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"JangusRoundstone"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"JangusRoundstone"},"content":"            String taskStored \u003d s.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"JangusRoundstone"},"content":"            fileContent \u003d fileContent + taskStored + System.lineSeparator();","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"JangusRoundstone"},"content":"        return fileContent;","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"JangusRoundstone"},"content":"     * Parse data stored in an arraylist to a single String object to be stored in data file. Used","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"JangusRoundstone"},"content":"     * in writing to data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"JangusRoundstone"},"content":"     * @param list arraylist to be parsed.","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"JangusRoundstone"},"content":"     * @return String object representing all the data in the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"JangusRoundstone"},"content":"    public static String arraylistToStringConverter(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"JangusRoundstone"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"JangusRoundstone"},"content":"        for (Task t : list) {","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"JangusRoundstone"},"content":"            output \u003d output + t.toString() + System.lineSeparator();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"JangusRoundstone"},"content":"        return output;","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"JangusRoundstone"},"content":"     * Parse data stored as a single String object into an arrayList. Used in reading from data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"JangusRoundstone"},"content":"     * @param fileContent a String object representing data in the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"JangusRoundstone"},"content":"     * @return arraylist which stores all the tasks stored in file as elements.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyDeadlineException If task read is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyToDoException If task read is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyEventsException If task read is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"JangusRoundstone"},"content":"    public static ArrayList\u003cTask\u003e stringToArraylistConverter(String fileContent) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"JangusRoundstone"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"JangusRoundstone"},"content":"        if (fileContent.equals(\"\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"JangusRoundstone"},"content":"            return list;","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"JangusRoundstone"},"content":"        String[] bufferArray \u003d fileContent.split(System.lineSeparator());","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"JangusRoundstone"},"content":"        for (String t : bufferArray) {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"JangusRoundstone"},"content":"            Task task \u003d new Task(t);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"JangusRoundstone"},"content":"            try {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"JangusRoundstone"},"content":"                if (t.substring(FIRSTBRACKET_FRONT, FIRSTBRACKET_BACK).equals(\"[T]\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"JangusRoundstone"},"content":"                    String todoDetail \u003d \"todo \" + t.substring(BRACKETSKIP_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"JangusRoundstone"},"content":"                    task \u003d new ToDos(todoDetail);","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"JangusRoundstone"},"content":"                    task.setMark(t.substring(SECONDBRACKET_FRONT, SECONDBRACKET_BACK));","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"JangusRoundstone"},"content":"                } else if (t.substring(FIRSTBRACKET_FRONT, FIRSTBRACKET_BACK).equals(\"[D]\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"JangusRoundstone"},"content":"                    String deadlineDetail \u003d \"deadline \" + t.substring(BRACKETSKIP_INDEX, t.indexOf(\"(\")) + \"/\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"JangusRoundstone"},"content":"                            t.substring(t.indexOf(\"(\") + 1, t.indexOf(\")\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"JangusRoundstone"},"content":"                    task \u003d new Deadlines(deadlineDetail);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"JangusRoundstone"},"content":"                    task.setMark(t.substring(SECONDBRACKET_FRONT, SECONDBRACKET_BACK));","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"JangusRoundstone"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"JangusRoundstone"},"content":"                    String eventDetail \u003d \"event \" + t.substring(BRACKETSKIP_INDEX, t.indexOf(\"(\")) + \"/\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"JangusRoundstone"},"content":"                            t.substring(t.indexOf(\"(\") + 1, t.indexOf(\"to\")) + \"/\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"JangusRoundstone"},"content":"                            t.substring(t.indexOf(\"to\"), t.indexOf(\")\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"JangusRoundstone"},"content":"                    eventDetail \u003d eventDetail.replace(\":\", \"\");","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"JangusRoundstone"},"content":"                    task \u003d new Events(eventDetail);","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"JangusRoundstone"},"content":"                    task.setMark(t.substring(SECONDBRACKET_FRONT, SECONDBRACKET_BACK));","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"JangusRoundstone"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"JangusRoundstone"},"content":"            } catch (EmptyToDoException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"JangusRoundstone"},"content":"                System.out.println(\"Corrupt todo detected, it is empty\");","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"JangusRoundstone"},"content":"            } catch (EmptyDeadlineException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"JangusRoundstone"},"content":"                System.out.println(\"Corrupt Deadline detected, it is empty\");","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"JangusRoundstone"},"content":"            } catch (EmptyEventsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"JangusRoundstone"},"content":"                System.out.println(\"Corrupt Events detected, it is empty\");","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"JangusRoundstone"},"content":"            list.add(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"JangusRoundstone"},"content":"        return list;","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"JangusRoundstone":133}},{"path":"src/main/java/Duke/Task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyDeadlineException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int DEADLINE_INDEX \u003d 9;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int COLON_INDEX \u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"    private String endTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    private String taskLabel \u003d \"[D]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"     * Represents a Deadlines object which is identified by the type D. Contains description and deadline info.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"    public Deadlines(String input) throws EmptyDeadlineException {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"        super(input.substring(DEADLINE_INDEX, input.indexOf(\u0027/\u0027) - 1)); // Sanitize input by removing \"deadline\" at the start","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"        super.setTaskLabel(taskLabel);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        endTime \u003d \"(\" + getEndTime(input) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"        if (input.substring(DEADLINE_INDEX, input.indexOf(\u0027/\u0027) - 1).isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"            throw new EmptyDeadlineException();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"    // Method of StringBuffer operation taken from","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"    // https://www.geeksforgeeks.org/insert-a-string-into-another-string-in-java/","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"     * Returns the deadline of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"     * @return deadline of the tasked from parsing.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"    public String getEndTime(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"        String deadline \u003d input.substring(input.indexOf(\u0027/\u0027) + 1); // endTime of task is the string after \u0027/\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"        StringBuffer deadlineCorrectFormat \u003d new StringBuffer(deadline); // convert to StringBuffer for inserting \u0027:\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"        deadlineCorrectFormat.insert(COLON_INDEX, \":\");","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"        return deadlineCorrectFormat.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"        return this.taskLabel + this.mark + \" \" + this.description + \" \" + this.endTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":44}},{"path":"src/main/java/Duke/Task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyEventsException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"public class Events extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int EVENT_INDEX \u003d 6;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int FIRST_COLON_INDEX \u003d 4;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int SECOND_COLON_INDEX \u003d 2;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"    private String timeLine;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    private String taskLabel \u003d \"[E]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"     * Represents an Events object which is identified by the type E. Contains description, start time","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"     * and end time.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"    public Events(String input) throws EmptyEventsException {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"        super(input.substring(EVENT_INDEX, input.indexOf(\u0027/\u0027) - 1));","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"        super.setTaskLabel(taskLabel);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        timeLine \u003d \"(\" + getStartTime(input) + getEndTime(input) + \")\";","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"        if (input.substring(EVENT_INDEX, input.indexOf(\u0027/\u0027) - 1).isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"            throw new EmptyEventsException();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"    public String[] splitInput(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"        String[] inputAfterSplit \u003d input.split(\"/\", 3); // split twice to generate three strings","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"        return inputAfterSplit;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"     * Returns the starting time of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"     * @return starting time of the tasked from parsing.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"    public String getStartTime(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"        String[] inputAfterSplit \u003d splitInput(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"        String startTime \u003d inputAfterSplit[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"        StringBuffer startTimeCorrectFormat \u003d new StringBuffer(startTime);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"        startTimeCorrectFormat.insert(FIRST_COLON_INDEX, \":\");","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"        return startTimeCorrectFormat.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"     * Returns the ending time of the task.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"     * @return ending time of the tasked from parsing.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"    public String getEndTime(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"        String[] inputAfterSplit \u003d splitInput(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"        String startTime \u003d inputAfterSplit[2];","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"JangusRoundstone"},"content":"        StringBuffer endTimeCorrectFormat \u003d new StringBuffer(startTime); // convert to StringBuffer for inserting \u0027:\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"        endTimeCorrectFormat.insert(SECOND_COLON_INDEX, \":\");","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"        return endTimeCorrectFormat.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"JangusRoundstone"},"content":"        return this.taskLabel + this.mark + \" \" + this.description + \" \" + this.timeLine;","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":63}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":" * Represents a Task object which is identified by the type of task it is (taskLabel), its content (description)","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":" * and whether it is completed or not (mark).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"    protected String taskLabel;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    protected String mark;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"    public Task(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"        this.description \u003d input;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"        this.taskLabel \u003d \"To be replaced by labels\";","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"        this.mark \u003d \"[ ]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"    public String getTaskLabel() {","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"        return taskLabel;","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"        return description;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"    public String getStartTime(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"        return \"To be overridden by subclass\u0027 methods\";","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"    public String getEndTime(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"        return \"To be overridden by subclass\u0027 methods\";","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"    public void setTaskLabel(String taskLabel) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"        this.taskLabel \u003d taskLabel;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"    public void markTask() {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"        this.mark \u003d \"[X]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"        this.mark \u003d \"[ ]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"    public void setMark(String mark) {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":49}},{"path":"src/main/java/Duke/Task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke.Task;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyToDoException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":" * Represents a ToDos object which is identified by the type of task T. Contains only description.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int TODOS_INDEX \u003d 5;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"    private String taskLabel \u003d \"[T]\";","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"    public ToDos(String input) throws EmptyToDoException {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"        super(input.substring(TODOS_INDEX)); // for ToDos tasks, description \u003d input","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"        super.setTaskLabel(taskLabel);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"        if (input.substring(TODOS_INDEX).isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"            throw new EmptyToDoException();","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"        return this.taskLabel + this.mark + \" \" + this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":24}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyDeadlineException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyEventsException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.EmptyToDoException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Exception.NullCommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Deadlines;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Events;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.ToDos;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"public class TaskList {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int MARK_INDEX \u003d 5;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int UNMARK_INDEX \u003d 7;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int DELETE_INDEX \u003d 7;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"    private static final int FIND_INDEX \u003d 5;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"    public static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"     * Represents an arraylist of Task objects that can be modified.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"    public TaskList(String filepath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"            list \u003d Storage.stringToArraylistConverter(Storage.parseFileContentsToString(filepath));","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"Illegal file path\");","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"     * Adds a Task object to the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"     * @param line input from user indicating the task to be added.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyToDoException If line is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyDeadlineException If line is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws EmptyEventsException If line is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws IndexOutOfBoundsException If line\u0027s input format violates that of Deadlines or Events object.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"    public void addTask(String line) {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.addTaskSuccess();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"            Task newTask \u003d new Task(line);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"            if (line.startsWith(\"todo\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"                newTask \u003d new ToDos(line);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"                newTask \u003d new Deadlines(line);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"                newTask \u003d new Events(line);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"JangusRoundstone"},"content":"            this.list.add(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"            Ui.printTask(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"            Ui.printListSize(this.list);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"JangusRoundstone"},"content":"            Storage.dukeDataStorage(Storage.arraylistToStringConverter(this.list));","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (EmptyToDoException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"Sire, you have yet to tell me what is it you want to do.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (EmptyDeadlineException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"Sire, what is it that is due your specified time?\");","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (EmptyEventsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"Sire, your event is unclear. Please specify.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(\"Don\u0027t hold back Sire. I am here to serve.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"JangusRoundstone"},"content":"     * Deletes the Task object from the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"JangusRoundstone"},"content":"     * @param task input from user indicating the task to be deleted.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"JangusRoundstone"},"content":"    public void delete(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"JangusRoundstone"},"content":"        String indexOfTask \u003d task.substring(DELETE_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.deleteSuccess(this.list, indexOfTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"JangusRoundstone"},"content":"        this.list.remove(Integer.parseInt(indexOfTask) - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.printListSize(this.list);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"JangusRoundstone"},"content":"        Storage.dukeDataStorage(Storage.arraylistToStringConverter(this.list));","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"JangusRoundstone"},"content":"     * Marks the Task object in the TaskList as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"JangusRoundstone"},"content":"     * @param task input from user indicating the task to be marked.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"JangusRoundstone"},"content":"    public void mark(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"JangusRoundstone"},"content":"        String indexOfTask \u003d task.substring(MARK_INDEX); // get the number of task to be marked","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"JangusRoundstone"},"content":"        Task taskToBeMarked \u003d this.list.get(Integer.parseInt(indexOfTask) - 1); // convert from 1-based to 0-based","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"JangusRoundstone"},"content":"        taskToBeMarked.markTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.markSuccess(list, indexOfTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"JangusRoundstone"},"content":"        Storage.dukeDataStorage(Storage.arraylistToStringConverter(this.list));","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"JangusRoundstone"},"content":"     * Unmarks the Task object in the TaskList as undone.","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"JangusRoundstone"},"content":"     * @param task input from user indicating the task to be unmarked.","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"JangusRoundstone"},"content":"    public void unmark(String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"JangusRoundstone"},"content":"        String indexOfTask \u003d task.substring(UNMARK_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"JangusRoundstone"},"content":"        Task taskToBeUnmarked \u003d this.list.get(Integer.parseInt(indexOfTask) - 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"JangusRoundstone"},"content":"        taskToBeUnmarked.unmarkTask();","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.unmarkSuccess(list, indexOfTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"JangusRoundstone"},"content":"        Storage.dukeDataStorage(Storage.arraylistToStringConverter(this.list));","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"JangusRoundstone"},"content":"     * Prints the Task object in the TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"JangusRoundstone"},"content":"     * @param task task object to be printed.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"JangusRoundstone"},"content":"    public void printTasksFound (String task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"JangusRoundstone"},"content":"        String taskToBeFound \u003d task.substring(FIND_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.findSuccess();","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"JangusRoundstone"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); ++i) {","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"JangusRoundstone"},"content":"            if (this.list.get(i).getDescription().contains(taskToBeFound)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"JangusRoundstone"},"content":"                Ui.printTask(this.list.get(i));","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"JangusRoundstone"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"JangusRoundstone"},"content":"     * Prints the current TaskList.","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"JangusRoundstone"},"content":"    public void printCurrentList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"JangusRoundstone"},"content":"        Ui.printCurrentList(this.list);","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"JangusRoundstone":129}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"package Duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"JangusRoundstone"},"content":"import Duke.Task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"JangusRoundstone"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"JangusRoundstone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"JangusRoundstone"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"JangusRoundstone"},"content":"public class Ui {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"JangusRoundstone"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"JangusRoundstone"},"content":"    public Ui() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"JangusRoundstone"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"JangusRoundstone"},"content":"    public void greet() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"JangusRoundstone"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"JangusRoundstone"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"JangusRoundstone"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"JangusRoundstone"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"JangusRoundstone"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"JangusRoundstone"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"JangusRoundstone"},"content":"            printFileContents(\"dukeData.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"JangusRoundstone"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"JangusRoundstone"},"content":"            printErrorMessage(\"File not found\");","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"How may I be of service today?\");","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"JangusRoundstone"},"content":"    public void bye() {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Glad I could be of help!\");","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"JangusRoundstone"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"JangusRoundstone"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"JangusRoundstone"},"content":"    public static void addTaskSuccess() {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"As per requested Sire, this task has been added to your calendar.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"JangusRoundstone"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(task);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"JangusRoundstone"},"content":"    public static void markSuccess(ArrayList\u003cTask\u003e list, String indexOfTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Sir, your task has been marked as completed.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(list.get(Integer.parseInt(indexOfTask) - 1));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"JangusRoundstone"},"content":"    public static void unmarkSuccess(ArrayList\u003cTask\u003e list, String indexOfTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Sir, your task has been unmarked as requested.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(list.get(Integer.parseInt(indexOfTask) - 1));","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"JangusRoundstone"},"content":"    public static void deleteSuccess(ArrayList\u003cTask\u003e list, String indexOfTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Sire, I have removed this task from your schedule\");","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(list.get(Integer.parseInt(indexOfTask) - 1));","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"JangusRoundstone"},"content":"    public static void findSuccess() {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Here are the matching items Sire:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"JangusRoundstone"},"content":"     * Prints out the number of elements in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"JangusRoundstone"},"content":"     * @param list arraylist whose number of elements is to be printed out.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"JangusRoundstone"},"content":"    public static void printListSize(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"You now have \" + list.size() + \" items left\");","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"JangusRoundstone"},"content":"     * Prints out all tasks currently in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"JangusRoundstone"},"content":"     * @param list arraylist whose elements are to be printed out.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"JangusRoundstone"},"content":"    public static void printCurrentList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Your current list of items as requested, sir.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"JangusRoundstone"},"content":"        for (int i \u003d 0; i \u003c list.size(); ++i) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"JangusRoundstone"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"JangusRoundstone"},"content":"     * Prints out all tasks saved in the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"JangusRoundstone"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"JangusRoundstone"},"content":"     * @param filePath file path of the data file whose content is to be printed out.","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"JangusRoundstone"},"content":"     * @throws FileNotFoundException If file path is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"JangusRoundstone"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"JangusRoundstone"},"content":"    public void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"JangusRoundstone"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"JangusRoundstone"},"content":"        if (!f.exists()) { // for first log in, there is no file","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"JangusRoundstone"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(\"Good day sire, I have listed down your current plan below for you:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"JangusRoundstone"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"JangusRoundstone"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"JangusRoundstone"},"content":"            String taskStored \u003d s.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"JangusRoundstone"},"content":"            System.out.println(taskStored);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"JangusRoundstone"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"JangusRoundstone"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"JangusRoundstone"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"JangusRoundstone"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"JangusRoundstone"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"JangusRoundstone"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"JangusRoundstone":110}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JangusRoundstone"},"content":"todo CS2113 assignment","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"JangusRoundstone"},"content":"bye","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"JangusRoundstone":2}}]
