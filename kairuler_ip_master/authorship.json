[{"path":"src/main/java/Bro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"public class Bro {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"    public static final String HORIZONTAL_LINE \u003d \"\\n───────────────────────────────────────────────────────────────\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"    public static final String GREETING \u003d \" Sup bro. I\u0027m Bro.\\n\" + \" What do you want?\";","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"    public static final String TASK_DOES_NOT_EXIST \u003d \" Bro that task number does not exist...\";","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"        System.out.println(HORIZONTAL_LINE + GREETING + HORIZONTAL_LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        // User Input","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"        String line;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        StringBuilder reply \u003d new StringBuilder();  // Use StringBuilder as we concatenate Strings in a loop later on","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();  // Dynamic array to store text entered by user","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"        boolean endInput \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"        while (!endInput) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"            switch (words[0]) {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"                reply \u003d new StringBuilder(\" Bye bye bro.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"                endInput \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"            case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"                reply \u003d new StringBuilder(\" Your tasks:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"                    Task task \u003d tasks.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"                    String mark \u003d task.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"                    reply.append(\" \").append(i + 1).append(\".[\").append(task.getType()).append(\"]\").append(\"[\")","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"                            .append(mark).append(\"] \").append(task).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"                int indexOfMarkedTask \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"                boolean isValidated1 \u003d validateTask(tasks.size(), indexOfMarkedTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"                if (isValidated1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"                    reply \u003d new StringBuilder(\" Marked \" + tasks.get(indexOfMarkedTask) + \" as done.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"                    tasks.get(indexOfMarkedTask).setCompleted();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"                else {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"                    reply \u003d new StringBuilder(TASK_DOES_NOT_EXIST);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"                int indexOfUnmarkedTask \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"                boolean isValidated2 \u003d validateTask(tasks.size(), indexOfUnmarkedTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"                if (isValidated2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"                    reply \u003d new StringBuilder(\" Marked \" + tasks.get(indexOfUnmarkedTask) + \" as not done.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"                    tasks.get(indexOfUnmarkedTask).setUncompleted();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"                else {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"                    reply \u003d new StringBuilder(TASK_DOES_NOT_EXIST);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"                Task todo \u003d new ToDo(line);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"                reply \u003d new StringBuilder(\" added: \" + todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"                StringBuilder deadlineName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"                StringBuilder by \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"                int indexOfDeadline \u003d Arrays.asList(words).indexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d 1; i \u003c indexOfDeadline; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"                    deadlineName.append(\" \").append(words[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d indexOfDeadline + 1; i \u003c words.length; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"                    by.append(\" \").append(words[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"                Task deadline \u003d new Deadline(deadlineName.toString().trim(), by.toString().trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"                reply \u003d new StringBuilder(\" added: \" + deadline);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"            case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"                StringBuilder eventName \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"                StringBuilder startTime \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"                StringBuilder endTime \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"                int indexOfStartTime \u003d Arrays.asList(words).indexOf(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"                int indexOfEndTime \u003d Arrays.asList(words).indexOf(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d 1; i \u003c indexOfStartTime; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"                    eventName.append(\" \").append(words[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d indexOfStartTime + 1; i \u003c indexOfEndTime; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"                    startTime.append(\" \").append(words[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"                for (int i \u003d indexOfEndTime + 1; i \u003c words.length; ++i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"                    endTime.append(\" \").append(words[i]);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"                Task event \u003d new Event(eventName.toString().trim(), startTime.toString().trim(), endTime.toString().trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"                tasks.add(event);","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"                reply \u003d new StringBuilder(\" added: \" + event);","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"            System.out.println(HORIZONTAL_LINE + reply + HORIZONTAL_LINE);  // Output reply","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"     * Checks if Task Index input is in range of the current list of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"     * @param tasks List of Tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"     * @param taskIndex Index of Task being validated","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"     * @return true if Task is valid, false if Task is invalid","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"    private static boolean validateTask(int tasks, int taskIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"        return taskIndex + 1 \u003c\u003d tasks \u0026\u0026 taskIndex \u003e\u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kairuler":107,"-":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"    private String deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"    public Deadline(String name, String deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"        super(name);","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"        this.setType(\"D\");","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"        return super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kairuler":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"    private String startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"    private String endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"        super(name);","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"        this.setType(\"E\");","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"        return super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kairuler":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"public class Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"    private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"    private boolean completed;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"    private String type;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"        this.type \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"    public String getName() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"        return name;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"        return completed;","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"    public void setUncompleted() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    public String getType() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"        return type;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"    public void setType(String type) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    public String mark() {      // Method to return completion mark \"✔\"","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"        if (this.completed) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"            return \"✔\";","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"            return \" \";","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        return name;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"kairuler":50}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"public class ToDo extends Task{","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"        super(name);","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"        this.setType(\"T\");","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"kairuler":6}}]
