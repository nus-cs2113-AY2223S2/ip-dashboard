[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"import java.io.File;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"//TODO: specify error: empty description vs event/ddl timing not found","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"//TODO: check print new line for printtask","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    public static String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    //    public static int countTask \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"//    public static Task[] tasks \u003d new Task[100];","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"    // reading file from hard disc","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    public static String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"    //    public static Path filePath \u003d java.nio.file.Paths.get(home, \"ip\", \"task_list.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    public static String filePath \u003d \"./task_list.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    public static void createFile(String filePath) {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"            } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"File already exists\");","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"An error occurred while creating file.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"    public static void readTasksFromFile(File f) throws FileNotFoundException {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"            String[] taskElements \u003d task.trim().split(\"\\\\|\");","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"            String taskType \u003d taskElements[0].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"            boolean taskStatus \u003d taskElements[1].trim().equals(\"X\");","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"            String taskDescription \u003d taskElements[2].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"            case \"T\":","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new ToDo(taskDescription, taskStatus));","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"            case \"D\":","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"                String deadlineDate \u003d taskElements[3].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new Deadline(taskDescription, taskStatus, deadlineDate));","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"            case \"E\":","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"                String startDate \u003d taskElements[3].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"                String endDate \u003d taskElements[4].trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new Event(taskDescription, taskStatus, startDate, endDate));","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"    /*","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"     T | X | description","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"     D |   | description | time","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"     E |   | description | start time | end time","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"    public static void saveTasksToFile(String filePath) throws IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"            String completeTaskDescription \u003d t.printTask();","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"            String taskType \u003d completeTaskDescription.substring(1, 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"            case \"T\":","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() +","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"                        System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"            case \"D\":","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"Ju-Can"},"content":"                        ((Deadline) t).getDeadline() + System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"            case \"E\":","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"                        ((Event) t).getStartTime() + \" | \" + ((Event) t).getEndTime() + System.lineSeparator());","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"            default:","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"Ju-Can"},"content":"        fw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"Ju-Can"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"Ju-Can"},"content":"        createFile(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"Ju-Can"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"Ju-Can"},"content":"            readTasksFromFile(f);","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"Ju-Can"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"Ju-Can"},"content":"        String greet \u003d line +","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"Ju-Can"},"content":"                \"Hello! I\u0027m Duke.\\n\" +","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Ju-Can"},"content":"                \"To add general tasks to the todo list, simply type in the task and press enter.\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"Ju-Can"},"content":"                \"You can specify the type of tasks by using \" +","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"Ju-Can"},"content":"                \"\u0027todo\u0027 / \u0027deadline\u0027 / \u0027event\u0027 keyword before the task description.\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"Ju-Can"},"content":"                \"You can keep track of deadlines by typing \u0027deadline\u0027 \" +","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"Ju-Can"},"content":"                \"followed by task description + \u0027/by\u0027 to specify the time of the deadline.\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"Ju-Can"},"content":"                \"You can also add events to the list by typing \u0027event\u0027 \" +","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"Ju-Can"},"content":"                \"followed by task description + \u0027/from\u0027 + starting time of event + \u0027/to\u0027 ending time of event.\\n\" +","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"Ju-Can"},"content":"                \"Type \u0027list\u0027 to view the current todo list.\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"Ju-Can"},"content":"                \"Type \u0027mark\u0027 and task event index to mark the task as done \" +","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"Ju-Can"},"content":"                \"and type \u0027unmark\u0027 and index to undo the task.\\n\" +","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"Ju-Can"},"content":"                \"Type \u0027bye\u0027 to exit Duke.\\n\" +","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"Ju-Can"},"content":"                line;","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(greet);","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"Ju-Can"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"Ju-Can"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"Ju-Can"},"content":"            String userInput \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"Ju-Can"},"content":"            if (in.hasNextLine()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"Ju-Can"},"content":"                userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"Ju-Can"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"Ju-Can"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":133,"author":{"gitId":"Ju-Can"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"Ju-Can"},"content":"                    System.out.println(\"Thank you for using Duke. Hope to see you soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"Ju-Can"},"content":"                    printTaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"Ju-Can"},"content":"                    markTask(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"Ju-Can"},"content":"                    unmarkTask(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"Ju-Can"},"content":"                    try {","lastModifiedDate":"2023-02-08"},{"lineNumber":144,"author":{"gitId":"Ju-Can"},"content":"                        createTodo(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"Ju-Can"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":146,"author":{"gitId":"Ju-Can"},"content":"                        System.out.println(\"Description of a todo cannot be empty. Adding todo failed.\\n\" + line);","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"Ju-Can"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":148,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"Ju-Can"},"content":"                    try {","lastModifiedDate":"2023-02-08"},{"lineNumber":150,"author":{"gitId":"Ju-Can"},"content":"                        createDeadline(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"Ju-Can"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":152,"author":{"gitId":"Ju-Can"},"content":"                        System.out.println(\"Insufficient input for deadline. Adding deadline failed.\\n\" + line);","lastModifiedDate":"2023-02-08"},{"lineNumber":153,"author":{"gitId":"Ju-Can"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":154,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"Ju-Can"},"content":"                    try {","lastModifiedDate":"2023-02-08"},{"lineNumber":156,"author":{"gitId":"Ju-Can"},"content":"                        createEvent(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"Ju-Can"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":158,"author":{"gitId":"Ju-Can"},"content":"                        System.out.println(\"Insufficient input for event. Adding event failed.\\n\" + line);","lastModifiedDate":"2023-02-08"},{"lineNumber":159,"author":{"gitId":"Ju-Can"},"content":"                    }","lastModifiedDate":"2023-02-08"},{"lineNumber":160,"author":{"gitId":"Ju-Can"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"Ju-Can"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"Ju-Can"},"content":"                } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"Ju-Can"},"content":"                    throw new TaskTypeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":164,"author":{"gitId":"Ju-Can"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"Ju-Can"},"content":"            } catch (TaskTypeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":166,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"Sorry, Duke does not recognise the task. \" +","lastModifiedDate":"2023-02-08"},{"lineNumber":167,"author":{"gitId":"Ju-Can"},"content":"                        \"Type \u0027todo\u0027/\u0027deadline\u0027/\u0027event\u0027 to add task of respective type.\\n\" + line);","lastModifiedDate":"2023-02-08"},{"lineNumber":168,"author":{"gitId":"Ju-Can"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"Task number not specified. Please try again.\\n\" + line);","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"Ju-Can"},"content":"            } catch (EventTimingException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"Starting and ending time for event are in the wrong order. \" +","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"Ju-Can"},"content":"                        \"Please try again.\\n\" + line);","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"Ju-Can"},"content":"            try {","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"Ju-Can"},"content":"                saveTasksToFile(filePath);","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"Ju-Can"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"Error saving file.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"Ju-Can"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"No task found.\");","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":181,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"Ju-Can"},"content":"    public static void printTaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(line + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"Ju-Can"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"Ju-Can"},"content":"            int taskIndex \u003d i + 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"Ju-Can"},"content":"            System.out.print(taskIndex + \". \" + tasks.get(i).printTask());","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"Ju-Can"},"content":"    public static void markTask(String input) throws NumberFormatException {","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"Ju-Can"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(4).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":196,"author":{"gitId":"Ju-Can"},"content":"        if (taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"Ju-Can"},"content":"            tasks.get(taskIndex - 1).markAsDone();","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(line + \"Task \" + taskIndex + \" marked as done:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":199,"author":{"gitId":"Ju-Can"},"content":"                    tasks.get(taskIndex - 1).printTask() + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + taskIndex + \" not found. Please try again.\\n\" + line);","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"Ju-Can"},"content":"    public static void unmarkTask(String input) throws NumberFormatException {","lastModifiedDate":"2023-02-09"},{"lineNumber":206,"author":{"gitId":"Ju-Can"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(6).trim());","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"Ju-Can"},"content":"        if (taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"Ju-Can"},"content":"            tasks.get(taskIndex - 1).markAsUndone();","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(line + \"Task \" + taskIndex + \" marked as not done yet:\\n\" +","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"Ju-Can"},"content":"                    tasks.get(taskIndex - 1).printTask() + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":212,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + taskIndex + \" not found. Please try again.\\n\" + line);","lastModifiedDate":"2023-02-09"},{"lineNumber":213,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":215,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":216,"author":{"gitId":"Ju-Can"},"content":"    public static void createTodo(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-08"},{"lineNumber":217,"author":{"gitId":"Ju-Can"},"content":"        ToDo todoTask \u003d new ToDo(input.substring(5));","lastModifiedDate":"2023-02-02"},{"lineNumber":218,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(todoTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(line + \"Great! I\u0027ve added this task:\\n\" + \"   \" + todoTask.printTask());","lastModifiedDate":"2023-02-01"},{"lineNumber":220,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":222,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":223,"author":{"gitId":"Ju-Can"},"content":"    public static void createDeadline(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-08"},{"lineNumber":224,"author":{"gitId":"Ju-Can"},"content":"        if (!input.contains(\"/by\") || input.indexOf(\"/by\") + 4 \u003e input.length()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":225,"author":{"gitId":"Ju-Can"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-08"},{"lineNumber":226,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":227,"author":{"gitId":"Ju-Can"},"content":"        String deadlineDate \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"Ju-Can"},"content":"        Deadline deadlineTask \u003d new Deadline(input.substring(9, input.indexOf(\"/by\")), deadlineDate);","lastModifiedDate":"2023-02-16"},{"lineNumber":229,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":230,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(line + \"Great! I\u0027ve added this task:\\n\" + \"   \" + deadlineTask.printTask());","lastModifiedDate":"2023-02-01"},{"lineNumber":231,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":232,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":233,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":234,"author":{"gitId":"Ju-Can"},"content":"    public static void createEvent(String input) throws IndexOutOfBoundsException, EventTimingException {","lastModifiedDate":"2023-02-09"},{"lineNumber":235,"author":{"gitId":"Ju-Can"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\") || input.indexOf(\"/from\") + 6 \u003e input.length()","lastModifiedDate":"2023-02-08"},{"lineNumber":236,"author":{"gitId":"Ju-Can"},"content":"                || input.indexOf(\"/to\") + 4 \u003e input.length()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":237,"author":{"gitId":"Ju-Can"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-08"},{"lineNumber":238,"author":{"gitId":"Ju-Can"},"content":"        } else if (input.indexOf(\"/from\") \u003e input.indexOf(\"/to\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":239,"author":{"gitId":"Ju-Can"},"content":"            throw new EventTimingException();","lastModifiedDate":"2023-02-09"},{"lineNumber":240,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":241,"author":{"gitId":"Ju-Can"},"content":"        String startTime \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"Ju-Can"},"content":"        String endTime \u003d input.substring(input.indexOf(\"/to\") + 4);","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"Ju-Can"},"content":"        Event eventTask \u003d new Event(input.substring(6, input.indexOf(\"/from\")), startTime, endTime);","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":245,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(line + \"Great! I\u0027ve added this task:\\n\" + \"   \" + eventTask.printTask());","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":247,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":248,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":249,"author":{"gitId":"Ju-Can"},"content":"    public static void deleteTask(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-16"},{"lineNumber":250,"author":{"gitId":"Ju-Can"},"content":"        int index \u003d Integer.parseInt(input.substring(6).trim());","lastModifiedDate":"2023-02-16"},{"lineNumber":251,"author":{"gitId":"Ju-Can"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":252,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(line + \"I\u0027ve removed task \" + index + \":\\n\" + \"   \" + tasks.get(index - 1).printTask());","lastModifiedDate":"2023-02-16"},{"lineNumber":253,"author":{"gitId":"Ju-Can"},"content":"            tasks.remove(index - 1); // change to 0-base indexing","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":256,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + index + \" not found. Please try again.\\n\" + line);","lastModifiedDate":"2023-02-16"},{"lineNumber":257,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":261,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Ju-Can":257,"-":4}},{"path":"src/main/java/EventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"public class EventTimingException extends Exception{","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Ju-Can":2}},{"path":"src/main/java/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"public class TaskTypeException extends Exception{","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Ju-Can":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    public String deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"    public Deadline(String description, String deadlineDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    public Deadline(String description, boolean isDone, String deadlineDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"        return \"[D]\" + super.printTask() + \"(by: \" + getDeadline() + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    public String startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    public String endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"        return this.startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"        return \"[E]\" + super.printTask() +","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"                \"(from: \" + getStartTime() + \" to: \" + getEndTime() + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"    protected String taskType;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Ju-Can":37}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"        return \"[T]\" + super.printTask();","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":18}},{"path":"task_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"T | X | lkdfj","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"T | X | sdlkjf","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"T |   | running","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"D |   | honepk  | jlkdf","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Ju-Can":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"todo submit CS2113 project","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"deadline individual project /by Thursday 2359","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"event CS2113 lecture /from Friday 4 /to 6pm","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"read a book","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"todo laundry","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"event meeting /from 10pm /to 11pm","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"mark 4","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"unmark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"list","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Ju-Can":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ju-Can":2,"-":37}}]
