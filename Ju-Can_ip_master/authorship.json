[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"# User Guide for Duke","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"### Add tasks to your to-do list","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"Add different types of tasks to your to-do list and Duke will keep track of it for you.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"### Delete tasks from your to-do list","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"Delete irrelevant tasks from your to-do list.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"### Keep track of task status","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"Mark or unmark tasks in the to-do list to keep track of what you have completed.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"### Find tasks in to-do list","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"Find all tasks containing certain keywords. ","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"### `todo` - Add a todo task.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"Adds a todo task to the to-do list.","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:** ","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"`todo finish lecture 6`","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"Great! I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"   [T][ ] finish lecture 6","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"### `deadline` - Add a deadline task.","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"Adds a deadline task to the to-do list. Specify the deadline using `/by` followed by the actual deadline.","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"`deadline Assignment 2 /by Monday 2359`","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"Great! I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"   [D][ ] Assignment 2  (by: Monday 2359)","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"### `event` - Add an event task.","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"Adds an event task to the to-do list.  ","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"Specify starting time using `/from` followed by the actual starting time.  ","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"Specify ending time using `/to` followed by the actual ending time.","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"`event project meeting /from Tue 8pm /to Tue 9pm`","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"**Example of outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"Great! I\u0027ve added this task:","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"   [E][ ] project meeting (from: Tue 8pm to: Tue 9pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"### `list` - List all the tasks in the to-do list.","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"`list`","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"**Example of outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"1. [T][ ] finish lecture 6","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"2. [D][ ] Assignment 2  (by: Monday 2359)","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"3. [E][ ] project meeting (from: Tue 8pm to: Tue 9pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"Ju-Can"},"content":"### `mark` - Mark a task as done.","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"Ju-Can"},"content":"Marks a task as done based on the index specified.","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"Ju-Can"},"content":"`mark 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"Ju-Can"},"content":"**Example of outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"Ju-Can"},"content":"Task 1 marked as done:","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"Ju-Can"},"content":"[T][X] finish lecture 6","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"Ju-Can"},"content":"### `unmark` - Unmark a task that has been done.","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"Ju-Can"},"content":"Unmarks a task that has been done based on the index specified.","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"Ju-Can"},"content":"`unmark 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"Ju-Can"},"content":"**Example of outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"Ju-Can"},"content":"Task 1 marked as not done yet:","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"Ju-Can"},"content":"[T][ ] finish lecture 6","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"Ju-Can"},"content":"### `delete` - Delete task.","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"Ju-Can"},"content":"Deletes a task based on the index specified.","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"Ju-Can"},"content":"**Example usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"Ju-Can"},"content":"`delete 1`","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"Ju-Can"},"content":"**Example outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"Ju-Can"},"content":"I\u0027ve removed task 1:","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"Ju-Can"},"content":"   [T][X] finish lecture 6","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"Ju-Can"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"Ju-Can"},"content":"### `find` - Find tasks.","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"Ju-Can"},"content":"Finds and displays all tasks containing the search word, including their index number and full description.","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"Ju-Can"},"content":"**Example of usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"Ju-Can"},"content":"`find watch`","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"Ju-Can"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"Ju-Can"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"Ju-Can"},"content":"4. [T][ ] watch lecture","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"Ju-Can"},"content":"5. [E][ ] watch movie with sister (from: 9pm to: 11pm)","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"Ju-Can"},"content":"________________________________________________________________","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"Ju-Can"},"content":"```","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"Ju-Can"},"content":"### `bye` - Exist Duke.","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"Ju-Can"},"content":"**Expected usage:**","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"Ju-Can"},"content":"`bye`","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":169,"author":{"gitId":"Ju-Can"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":171,"author":{"gitId":"Ju-Can"},"content":"Thank you for using Duke. Hope to see you soon!","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Ju-Can":148,"-":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"import exceptions.EventTimingException;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"import exceptions.TaskTypeException;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"import tasklist.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"public class Duke extends TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for Duke with file path specified. Initialise tasks array list from storage.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"     * @param filePath path for the txt file that stores the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"        super();","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"            initialiseStorage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"            taskList \u003d new TaskList(storage.getTasks());","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"     * Create file if not found before reading in existing tasks to store in an array list.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"     * @param filePath path for the txt file that stores the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"     * @throws FileNotFoundException is no file containing the task list is found","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"    private void initialiseStorage(String filePath) throws FileNotFoundException {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"        storage.createFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"        storage.readTasksFromFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"     * Save modified task list to the task_list txt file.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"    private void saveTasks() {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"            storage.saveTasksToFile();","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Error saving file.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"No task found.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"     * Launch and run Duke.","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"    private void run() {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"        loop:","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"            String userInput \u003d \"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"            if (in.hasNextLine()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"                userInput \u003d in.nextLine().trim();","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"                switch (parser.keyWord(userInput)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"                case \"bye\":","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"                    ui.showByeMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"                    break loop;","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"                case \"list\":","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"                    taskList.printTaskList();","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"                case \"mark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"                    taskList.markTask(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"                case \"unmark\":","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"                    taskList.unmarkTask(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"                case \"todo\":","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"Ju-Can"},"content":"                    taskList.createTodo(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"Ju-Can"},"content":"                case \"deadline\":","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"Ju-Can"},"content":"                    taskList.createDeadline(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"Ju-Can"},"content":"                case \"event\":","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"Ju-Can"},"content":"                    taskList.createEvent(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"Ju-Can"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"Ju-Can"},"content":"                    taskList.deleteTask(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"Ju-Can"},"content":"                case \"find\":","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"Ju-Can"},"content":"                    taskList.findTask(userInput);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"Ju-Can"},"content":"                    break;","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"Ju-Can"},"content":"                default:","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"Ju-Can"},"content":"                    throw new TaskTypeException();","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"Ju-Can"},"content":"                }","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"Ju-Can"},"content":"            } catch (TaskTypeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"Ju-Can"},"content":"                e.printError();","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"Ju-Can"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"Ju-Can"},"content":"                ui.showNumberFormatError();","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"Ju-Can"},"content":"            } catch (EventTimingException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"Ju-Can"},"content":"                e.printError();","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"Ju-Can"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"Ju-Can"},"content":"                ui.showInsufficientInputError();","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"Ju-Can"},"content":"            saveTasks();","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"Ju-Can"},"content":"        new Duke(\"./task_list.txt\").run();","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Ju-Can":124,"-":3}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package common;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":" * Define output messages to readers as constants.","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"public class Messages {","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    public static final String LINE \u003d \"________________________________________________________________\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"    public static final String MESSAGE_WELCOME \u003d LINE +","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"            \"Hello! I\u0027m Duke, your to-do list manager.\\n\" +","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"            \"You can add tasks to your to-do list, mark them as done, view your entire to-do list and many more!\\n\" +","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"            \"To get started, key in \u0027help\u0027 to check out all the functions and how to use them.\\n\" +","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"            LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Thank you for using Duke. Hope to see you soon!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    public static final String PRINT_TASK_HEADING \u003d LINE + \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    public static final String TASK_TYPE_EXCEPTION_ERROR \u003d \"Sorry, Duke does not recognise the task.\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"            \"Type \u0027todo\u0027/\u0027deadline\u0027/\u0027event\u0027 to add task of respective type.\\n\" + LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    public static final String EVENT_TIMING_EXCEPTION_ERROR \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"            \"Starting and ending time for event are in the wrong order. \" + \"Please try again.\\n\" + LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    public static final String INSUFFICIENT_INPUT_ERROR \u003d \"Insufficient input. Adding task failed.\\n\" + LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"    public static final String NUMBER_FORMAT_EXCEPTION_ERROR \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"            \"Task number not specified. Please try again.\\n\" + LINE;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":24}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    public String deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"     * Initial constructor for Deadline task. Status is set to false (undone) by default.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     * @param description description of deadline task content","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"     * @param deadlineDate date / time of the deadline of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"    public Deadline(String description, String deadlineDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for Deadline task when the task status is given.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"     * @param description description of deadline test content","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"     * @param isDone status of the deadline task. True if done and false if not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"     * @param deadlineDate date / time of the deadline of the task","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"    public Deadline(String description, boolean isDone, String deadlineDate) {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"        return this.deadlineDate;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"     * Returns Deadline task with all the details.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"     * @return Full deadline task in the format \"[D][status symbol] task description (by: deadline date)\"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"        return \"[D]\" + super.printTask() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    public String startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    public String endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"     * Initial constructor for event task. Status is set to false (undone) by default.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"     * @param description description of the event task content","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"     * @param startTime starting date/time of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"     * @param endTime ending data/time of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for event task when task status is given.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"     * @param description event task description","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"     * @param isDone status of the event task. True if done and false if not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"     * @param startTime starting date/time of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"     * @param endTime ending date/time of the event","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"        return this.startTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"        return this.endTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"     * Returns event task with all the details.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"     * @return Full event task in the format of \"[E][status symbol] Task description (from: starting time to: ending time)","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"        return \"[E]\" + super.printTask() +","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"                \"(from: \" + getStartTime() + \" to: \" + getEndTime() + \")\";","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"    protected String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"     * Initial constructor for task. Status is set to false (undone) by default.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"     * @param description task description","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for task when status is provided.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"     * @param description task description","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"     * @param isDone      status of the task. True if done and false if not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"     * Return status symbol of the task.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"     * @return status symbol, \"X\" if done and whitespace if not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"        return description;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"     * Print out the task with all the details.","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"     * @return Full task in the format of \"[status symbol] task description\".","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Ju-Can":56}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package duke.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"     * Initial constructor for ToDo task. Status is set to false (undone) by default.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"     * @param description description of the task content","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for event task when task status is given.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"     * @param description description of the ToDo task content","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"     * @param isDone status of the ToDO\u003do task. True if done and false if not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"     * Returns todo task with all the details.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"     * @return Full todo task in the format of \"[T][status symbol] Task description\".","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    public String printTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"        return \"[T]\" + super.printTask();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Ju-Can":34}},{"path":"src/main/java/exceptions/EventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"public class EventTimingException extends Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     * Prints out error message for invalid event timing.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    public void printError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"        ui.showEventTimingExceptionError();","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":14}},{"path":"src/main/java/exceptions/TaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"public class TaskTypeException extends Exception{","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"     * Prints out error message for invalid task type.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"    public void printError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"        ui.showTaskTypeExceptionError();","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":13}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer MARK_LEN \u003d 4;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer UNMARK_LEN \u003d 6;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer DELETE_LEN \u003d 6;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer _BY_LEN \u003d 4;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer _FROM_LEN \u003d 6;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer _TO_LEN \u003d 4;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer FIND_LEN \u003d 4;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"     * Get index of the task to be marked from user input.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"     * @return index of the task to be marked as done as Integer","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    public Integer markTaskIndex(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"        return Integer.parseInt(command.substring(MARK_LEN).trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"     * Get index of the task to be unmarked from user input.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"     * @return index of the task to be unmarked as Integer","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"    public Integer unmarkTaskIndex(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"        return Integer.parseInt(command.substring(UNMARK_LEN).trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"     * Get the index of the task to be deleted from user input.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"     * @return index of the task to be deleted as Integer","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"    public Integer deleteTaskIndex(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"        return Integer.parseInt(command.substring(DELETE_LEN).trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"     * Extracts the first word of a command as the keyword.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"     * @return first word of the command indicating the type of command entered as String","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"    public String keyWord(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"        return command.contains(\" \") ? command.split(\" \")[0] : command;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"     * Extracts time/date of the deadline in a Deadline task.","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"     * @return time/date of the deadline of a Deadline task as String","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"    public String deadlineDate(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"        return command.substring(command.indexOf(\"/by\") + _BY_LEN).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"     * Extracts starting time/date of an event.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"     * @return starting time/date of an event as String","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"    public String eventStartTime(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"        return command.substring(command.indexOf(\"/from\") + _FROM_LEN, command.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"     * Extracts ending time/date of an event.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"     * @return ending time/date of an event as String","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"    public String eventEndTime(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"        return command.substring(command.indexOf(\"/to\") + _TO_LEN);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"     * Extracts the keyword to be searched.","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"     * @param command user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"     * @return the keyword to perform search on as String","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"    public String searchKeyWord(String command) {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"        return command.substring(FIND_LEN).trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":92}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"import java.io.File;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"public class Storage {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    protected String filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    protected File f;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"     * Constructor for Storage/","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"     * @param filePath where the file is saved in String","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"     * Create txt file that stores task list if it has not been created.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    public void createFile() {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"            f \u003d new File(filePath);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"                System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"An error occurred while creating file.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"     * Initialise tasks array list using tasks stored in the file. Retrieve history.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"     * @throws FileNotFoundException if no file can be found.","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"    public void readTasksFromFile() throws FileNotFoundException {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"            String[] taskElements \u003d task.trim().split(\"\\\\|\");","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"            String taskType \u003d taskElements[0].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"            boolean taskStatus \u003d taskElements[1].trim().equals(\"X\");","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"            String taskDescription \u003d taskElements[2].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"            case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new ToDo(taskDescription, taskStatus));","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"            case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"                String deadlineDate \u003d taskElements[3].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new Deadline(taskDescription, taskStatus, deadlineDate));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"            case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"                String startDate \u003d taskElements[3].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"                String endDate \u003d taskElements[4].trim();","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"                tasks.add(new Event(taskDescription, taskStatus, startDate, endDate));","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"     * Save newly added tasks to file based on different task type.","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"     * @throws IOException if saving failed.","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"    public void saveTasksToFile() throws IOException {","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"            String completeTaskDescription \u003d t.printTask();","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Ju-Can"},"content":"            String taskType \u003d completeTaskDescription.substring(1, 2); // task description starts with [TaskType]","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"            case \"T\":","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() +","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"                        System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"            case \"D\":","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"Ju-Can"},"content":"                        ((Deadline) t).getDeadline() + System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"Ju-Can"},"content":"            case \"E\":","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"Ju-Can"},"content":"                fw.write(taskType + \" | \" + t.getStatusIcon() + \" | \" + t.getDescription() + \" | \" +","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"Ju-Can"},"content":"                        ((Event) t).getStartTime() + \" | \" + ((Event) t).getEndTime() + System.lineSeparator());","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"Ju-Can"},"content":"                break;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"Ju-Can"},"content":"            default:","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"Ju-Can"},"content":"        fw.close();","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Ju-Can"},"content":"     * Getter for the arraylist of task list initialised.","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Ju-Can"},"content":"     * @return tasks as ArrayList of Task.","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Ju-Can"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Ju-Can"},"content":"        return tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":113}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package tasklist;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"import exceptions.EventTimingException;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"import common.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer DEADLINE_LEN \u003d 9;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer TODO_LEN \u003d 5;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer EVENT_LEN \u003d 6;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer _FROM_LEN \u003d 6;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    private static final Integer _TO_LEN \u003d 4;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    public TaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"     * Constructor of TaskList when an ArrayList of Task is passed in.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"     * @param tasks ArrayList of Task already initialised.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Ju-Can"},"content":"     * Print out the list of tasks stored in the ArrayList of Task in sequence.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Ju-Can"},"content":"    public void printTaskList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(Messages.PRINT_TASK_HEADING);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Ju-Can"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Ju-Can"},"content":"            int taskIndex \u003d i + 1; // change to one-based indexing","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(taskIndex + \". \" + tasks.get(i).printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Ju-Can"},"content":"     * Check if index is valid.","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Ju-Can"},"content":"     * @param taskIndex index to be checked, as Integer","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Ju-Can"},"content":"     * @return True if index is within the available tasks range. False if out of range.","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Ju-Can"},"content":"    boolean isValidIndex(int taskIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Ju-Can"},"content":"        return taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d tasks.size();","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Ju-Can"},"content":"     * Marks task as done.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Ju-Can"},"content":"     * @param input User input as String.","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Ju-Can"},"content":"     * @throws NumberFormatException if task index is not specified","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Ju-Can"},"content":"    public void markTask(String input) throws NumberFormatException {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Ju-Can"},"content":"        int taskIndex \u003d parser.markTaskIndex(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"Ju-Can"},"content":"        if (isValidIndex(taskIndex)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Ju-Can"},"content":"            tasks.get(taskIndex - 1).markAsDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(Messages.LINE + \"Task \" + taskIndex + \" marked as done:\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"Ju-Can"},"content":"                    tasks.get(taskIndex - 1).printTask() + \u0027\\n\u0027 + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + taskIndex + \" not found. Please try again.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Ju-Can"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Ju-Can"},"content":"     * @throws NumberFormatException if task index is not specified","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Ju-Can"},"content":"    public void unmarkTask(String input) throws NumberFormatException {","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"Ju-Can"},"content":"        int taskIndex \u003d parser.unmarkTaskIndex(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Ju-Can"},"content":"        if (isValidIndex(taskIndex)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Ju-Can"},"content":"            tasks.get(taskIndex - 1).markAsUndone();","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(Messages.LINE + \"Task \" + taskIndex + \" marked as not done yet:\\n\" +","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"Ju-Can"},"content":"                    tasks.get(taskIndex - 1).printTask() + \u0027\\n\u0027 + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + taskIndex + \" not found. Please try again.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Ju-Can"},"content":"     * Creates ToDo task and adds it to the tasks list.","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Ju-Can"},"content":"     * @throws IndexOutOfBoundsException if insufficient information is given to create ToDo task.","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Ju-Can"},"content":"    public void createTodo(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"Ju-Can"},"content":"        ToDo todoTask \u003d new ToDo(input.substring(TODO_LEN));","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(todoTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(Messages.LINE + \"Great! I\u0027ve added this task:\\n\" + \"   \" + todoTask.printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Ju-Can"},"content":"     * Checks if date/time for deadline is specified.","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Ju-Can"},"content":"     * @return true if no date/time provided, false if provided","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Ju-Can"},"content":"    boolean isNotValidDeadlineInput(String input) {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Ju-Can"},"content":"        boolean isKeywordFound \u003d input.contains(\"/by\");","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Ju-Can"},"content":"        boolean isDateFound \u003d input.indexOf(\"/by\") + 4 \u003c\u003d input.length();","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Ju-Can"},"content":"        return !isKeywordFound || !isDateFound;","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"Ju-Can"},"content":"     * Creates Deadline task and adds it to the tasks list.","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Ju-Can"},"content":"     * @throws IndexOutOfBoundsException if insufficient information is given to create Deadline task.","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"Ju-Can"},"content":"    public void createDeadline(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"Ju-Can"},"content":"        if (isNotValidDeadlineInput(input)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"Ju-Can"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"Ju-Can"},"content":"        String deadlineDate \u003d parser.deadlineDate(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"Ju-Can"},"content":"        Deadline deadlineTask \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"Ju-Can"},"content":"                new Deadline(input.substring(DEADLINE_LEN, input.indexOf(\"/by\")), deadlineDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(Messages.LINE + \"Great! I\u0027ve added this task:\\n\" + \"   \" + deadlineTask.printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"Ju-Can"},"content":"     * Checks if starting and ending time of an event are specified.","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"Ju-Can"},"content":"     * @return true if no starting or ending time is specified, false if specified","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"Ju-Can"},"content":"    boolean isNotValidEventInput(String input) {","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"Ju-Can"},"content":"        boolean isFromFound \u003d input.contains(\"/from\");","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"Ju-Can"},"content":"        boolean isToFound \u003d input.contains(\"/to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"Ju-Can"},"content":"        boolean isStartingDateFound \u003d input.indexOf(\"/from\") + _FROM_LEN \u003c\u003d input.length();","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"Ju-Can"},"content":"        boolean isEndingDateFound \u003d input.indexOf(\"/to\") + _TO_LEN \u003c\u003d input.length();","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"Ju-Can"},"content":"        return !isFromFound || !isToFound || !isStartingDateFound || !isEndingDateFound;","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"Ju-Can"},"content":"     * Checks if starting time is specified before ending time.","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"Ju-Can"},"content":"     * @return true if ending time specified before starting time, false otherwise","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"Ju-Can"},"content":"    boolean isStartEndWrongOrder(String input) {","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"Ju-Can"},"content":"        return input.indexOf(\"/from\") \u003e input.indexOf(\"/to\");","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"Ju-Can"},"content":"     * Creates Event task and adds it to the tasks list","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"Ju-Can"},"content":"     * @throws IndexOutOfBoundsException if insufficient information is given to create an event task","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"Ju-Can"},"content":"     * @throws EventTimingException if ending time is specified before starting time","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"Ju-Can"},"content":"    public void createEvent(String input) throws IndexOutOfBoundsException, EventTimingException {","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"Ju-Can"},"content":"        if (isNotValidEventInput(input)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"Ju-Can"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"Ju-Can"},"content":"        } else if (isStartEndWrongOrder(input)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"Ju-Can"},"content":"            throw new EventTimingException();","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"Ju-Can"},"content":"        String startTime \u003d parser.eventStartTime(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"Ju-Can"},"content":"        String endTime \u003d parser.eventEndTime(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"Ju-Can"},"content":"        Event eventTask \u003d new Event(input.substring(EVENT_LEN, input.indexOf(\"/from\")), startTime, endTime);","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"Ju-Can"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(Messages.LINE + \"Great! I\u0027ve added this task:\\n\" + \"   \" + eventTask.printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Ju-Can"},"content":"     * Deletes a task based on index.","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"Ju-Can"},"content":"     * @throws NumberFormatException if no task index is specified","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Ju-Can"},"content":"    public void deleteTask(String input) throws NumberFormatException {","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"Ju-Can"},"content":"        int index \u003d parser.deleteTaskIndex(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"Ju-Can"},"content":"        int zeroBaseIndex \u003d index - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"Ju-Can"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(Messages.LINE + \"I\u0027ve removed task \"","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"Ju-Can"},"content":"                    + index + \":\\n\" + \"   \" + tasks.get(index - 1).printTask());","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"Ju-Can"},"content":"            tasks.remove(zeroBaseIndex);","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"Task \" + index + \" not found. Please try again.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"Ju-Can"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"Ju-Can"},"content":"     * Finds all available tasks containing the keyword specified.","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"Ju-Can"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"Ju-Can"},"content":"     * @param input user input as String","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"Ju-Can"},"content":"     * @throws IndexOutOfBoundsException if no keyword is provided","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"Ju-Can"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"Ju-Can"},"content":"    public void findTask(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"Ju-Can"},"content":"        String keyWord \u003d parser.searchKeyWord(input);","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"Ju-Can"},"content":"        if (keyWord.equals(\"\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(\"No keyword found.\\n\" + Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"Ju-Can"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"Ju-Can"},"content":"            int taskIndex \u003d 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"Ju-Can"},"content":"            int zeroBaseIndex \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(Messages.LINE + \"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"Ju-Can"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"Ju-Can"},"content":"                if (t.getDescription().contains(keyWord)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"Ju-Can"},"content":"                    System.out.println(taskIndex + \". \" + tasks.get(zeroBaseIndex).printTask());","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"Ju-Can"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":219,"author":{"gitId":"Ju-Can"},"content":"                taskIndex++;","lastModifiedDate":"2023-02-26"},{"lineNumber":220,"author":{"gitId":"Ju-Can"},"content":"                zeroBaseIndex++;","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"Ju-Can"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"Ju-Can"},"content":"            System.out.println(Messages.LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"Ju-Can"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":227}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"package ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"import common.Messages;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":" * UI to print messages.","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.MESSAGE_WELCOME);","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Ju-Can"},"content":"    public void showByeMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Ju-Can"},"content":"    public void showTaskTypeExceptionError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.TASK_TYPE_EXCEPTION_ERROR);","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Ju-Can"},"content":"    public void showEventTimingExceptionError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.EVENT_TIMING_EXCEPTION_ERROR);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"    public void showInsufficientInputError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.INSUFFICIENT_INPUT_ERROR);","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Ju-Can"},"content":"    public void showNumberFormatError() {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Ju-Can"},"content":"        showToUser(Messages.NUMBER_FORMAT_EXCEPTION_ERROR);","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Ju-Can"},"content":"    public void showToUser(String text) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Ju-Can"},"content":"        System.out.println(text);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"Ju-Can"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Ju-Can"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Ju-Can":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ju-Can"},"content":"todo submit CS2113 project","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Ju-Can"},"content":"deadline individual project /by Thursday 2359","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Ju-Can"},"content":"event CS2113 lecture /from Friday 4 /to 6pm","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Ju-Can"},"content":"list","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Ju-Can"},"content":"mark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Ju-Can"},"content":"read a book","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Ju-Can"},"content":"todo laundry","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Ju-Can"},"content":"event meeting /from 10pm /to 11pm","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Ju-Can"},"content":"mark 4","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Ju-Can"},"content":"unmark 2","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Ju-Can"},"content":"list","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Ju-Can":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Ju-Can"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"Ju-Can"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ju-Can":2,"-":37}}]
