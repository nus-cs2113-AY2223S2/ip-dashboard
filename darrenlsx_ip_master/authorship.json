[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"import duke.database.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"import duke.exceptions.EmptyInputException;","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.exceptions.IllegalInputException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"    public static final String BORDER \u003d \"//\";","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"    public static boolean canExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"    private static Storage database \u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"     * Prints message after adding To-Do/Deadline/Event duke.task","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"    public static void printTaskMessage(ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"                + \"Got it. I\u0027ve added this duke.task:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"                + myList.get(myList.size() - 1) + \"\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"                + \"Now you have \" + myList.size() + \" in the list.\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"     * Prints a greeting user message","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"    public static void printGreetMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"     * Prints exiting message before program stops","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"    public static void printIllegalInputMessage() {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"                + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"    public static void printEmptyInputMessage(String task) {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"                + \"☹ OOPS!!! The description of \" + task + \" cannot be empty.\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"     * Prints all the items in the list","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"    public static void printList(ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"        for (int i \u003d 0; i \u003c myList.size(); ++i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(i + 1 + \". \" + myList.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"    public static void printDeletedMessage(ArrayList\u003cTask\u003e myList, int index) {","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Noted. I\u0027ve removed this task:\\n\" + myList.get(index)","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"                + \"\\nNow you have \" + (myList.size() - 1) + \" task(s) in the list\\n\" + LINE);","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"    /** Marks task as done or undone and updates database */","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"    public static void markDoneOrUndone(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"        String[] words \u003d currTask.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"        String taskToMarkOrUnmarkString \u003d currTask.substring(currTask.length() - 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"        int taskToMarkOrUnmark \u003d Integer.parseInt(taskToMarkOrUnmarkString) - 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"        if (firstWord.equals(\"mark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"            myList.get(taskToMarkOrUnmark).setDone();","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(LINE","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"                    + \"Nice! I\u0027ve marked this duke.task as done:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"                    + myList.get(taskToMarkOrUnmark) + \"\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"darrenlsx"},"content":"                    + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"darrenlsx"},"content":"            myList.get(taskToMarkOrUnmark).setUndone();","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(LINE","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"darrenlsx"},"content":"                    + \"OK, I\u0027ve marked this duke.task as not done yet:\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"darrenlsx"},"content":"                    + myList.get(taskToMarkOrUnmark) + \"\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"darrenlsx"},"content":"                    + LINE);","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"darrenlsx"},"content":"        String stringToAdd \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"darrenlsx"},"content":"        for (Task task : myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"darrenlsx"},"content":"            stringToAdd +\u003d stringToWrite(task).toString() + System.lineSeparator();","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"darrenlsx"},"content":"            database.writeToFile(stringToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(\"Unable to Add xd\");","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes the task as a todo type and updates database","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"darrenlsx"},"content":"     * @param currTask","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"darrenlsx"},"content":"    public static void makeToDoFunction(String currTask, ArrayList\u003cTask\u003e myList) throws EmptyInputException {","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"darrenlsx"},"content":"        String[] newTask \u003d currTask.split(\" \", 2);","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"darrenlsx"},"content":"        if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"darrenlsx"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"darrenlsx"},"content":"        Task toDoTask \u003d new ToDo(newTask[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":124,"author":{"gitId":"darrenlsx"},"content":"        myList.add(toDoTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"darrenlsx"},"content":"        printTaskMessage(myList);","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"darrenlsx"},"content":"        addTaskToDatabase(toDoTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes the task as a Deadline type and updates database","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"darrenlsx"},"content":"     * @param currTask","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"darrenlsx"},"content":"    public static void makeDeadlinesFunction(String currTask, ArrayList\u003cTask\u003e myList)","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"darrenlsx"},"content":"            throws EmptyInputException, IllegalInputException {","lastModifiedDate":"2023-02-06"},{"lineNumber":137,"author":{"gitId":"darrenlsx"},"content":"        if (currTask.contains(\"/by\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"darrenlsx"},"content":"            String[] newTask \u003d currTask.split(\" \", 2);","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"darrenlsx"},"content":"            if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"darrenlsx"},"content":"            String[] split \u003d newTask[1].split(\" /by \");","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"darrenlsx"},"content":"            if (split[1].isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"darrenlsx"},"content":"            Task deadlineTask \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2023-02-08"},{"lineNumber":147,"author":{"gitId":"darrenlsx"},"content":"            myList.add(deadlineTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":148,"author":{"gitId":"darrenlsx"},"content":"            printTaskMessage(myList);","lastModifiedDate":"2023-01-31"},{"lineNumber":149,"author":{"gitId":"darrenlsx"},"content":"            addTaskToDatabase(deadlineTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":151,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":152,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":154,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":155,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes task as an Event type and updates database","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":158,"author":{"gitId":"darrenlsx"},"content":"     * @param currTask","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-31"},{"lineNumber":160,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":161,"author":{"gitId":"darrenlsx"},"content":"    public static void makeEventFunction(String currTask, ArrayList\u003cTask\u003e myList)","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"darrenlsx"},"content":"            throws EmptyInputException, IllegalInputException {","lastModifiedDate":"2023-02-06"},{"lineNumber":163,"author":{"gitId":"darrenlsx"},"content":"        if (currTask.contains(\"/from\") \u0026\u0026 currTask.contains(\"/to\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"darrenlsx"},"content":"            String[] newTask \u003d currTask.split(\" \", 2);","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"darrenlsx"},"content":"            if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"darrenlsx"},"content":"            String[] split \u003d newTask[1].split(\" /\");","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"darrenlsx"},"content":"            String timeFrom \u003d split[1].substring(5);","lastModifiedDate":"2023-01-31"},{"lineNumber":170,"author":{"gitId":"darrenlsx"},"content":"            String timeTo \u003d split[2].substring(3);","lastModifiedDate":"2023-01-31"},{"lineNumber":171,"author":{"gitId":"darrenlsx"},"content":"            Task eventTask \u003d new Event(split[0], timeFrom, timeTo);","lastModifiedDate":"2023-02-08"},{"lineNumber":172,"author":{"gitId":"darrenlsx"},"content":"            myList.add(eventTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":173,"author":{"gitId":"darrenlsx"},"content":"            printTaskMessage(myList);","lastModifiedDate":"2023-01-31"},{"lineNumber":174,"author":{"gitId":"darrenlsx"},"content":"            addTaskToDatabase(eventTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":176,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":178,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"darrenlsx"},"content":"    public static void handleMarkUnmark(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"darrenlsx"},"content":"            checkMarkUnmark(currTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"darrenlsx"},"content":"            markDoneOrUndone(currTask, myList);","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"darrenlsx"},"content":"            printEmptyInputMessage(currTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"darrenlsx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":187,"author":{"gitId":"darrenlsx"},"content":"            printIllegalInputMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":188,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":189,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":190,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":191,"author":{"gitId":"darrenlsx"},"content":"    public static void handleToDo(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"darrenlsx"},"content":"            makeToDoFunction(currTask, myList);","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"darrenlsx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"darrenlsx"},"content":"            printEmptyInputMessage(currTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"darrenlsx"},"content":"            printEmptyInputMessage(currTask.trim());","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":199,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":200,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":201,"author":{"gitId":"darrenlsx"},"content":"    public static void handleDeadline(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":203,"author":{"gitId":"darrenlsx"},"content":"            makeDeadlinesFunction(currTask, myList);","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"darrenlsx"},"content":"            printEmptyInputMessage(currTask.trim());","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":207,"author":{"gitId":"darrenlsx"},"content":"            printIllegalInputMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"darrenlsx"},"content":"    public static void handleEvent(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":213,"author":{"gitId":"darrenlsx"},"content":"            makeEventFunction(currTask, myList);","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"darrenlsx"},"content":"            printEmptyInputMessage(currTask.trim());","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":217,"author":{"gitId":"darrenlsx"},"content":"            printIllegalInputMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":218,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":220,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"darrenlsx"},"content":"    public static void checkMarkUnmark(String currTask) throws EmptyInputException {","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"darrenlsx"},"content":"        String[] list \u003d currTask.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":223,"author":{"gitId":"darrenlsx"},"content":"        if (list.length \u003c 2) {","lastModifiedDate":"2023-02-06"},{"lineNumber":224,"author":{"gitId":"darrenlsx"},"content":"            if (list[0].equals(\"mark\") || list[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":225,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-06"},{"lineNumber":226,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":227,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":230,"author":{"gitId":"darrenlsx"},"content":"    /** Updates an individual task */","lastModifiedDate":"2023-02-18"},{"lineNumber":231,"author":{"gitId":"darrenlsx"},"content":"    public static void addTaskToDatabase(Task taskToAdd) {","lastModifiedDate":"2023-02-18"},{"lineNumber":232,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":233,"author":{"gitId":"darrenlsx"},"content":"            FileWriter f \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2023-02-18"},{"lineNumber":234,"author":{"gitId":"darrenlsx"},"content":"            String taskInDatabaseFormat \u003d stringToWrite(taskToAdd).toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":235,"author":{"gitId":"darrenlsx"},"content":"            f.write(taskInDatabaseFormat + System.lineSeparator());","lastModifiedDate":"2023-02-18"},{"lineNumber":236,"author":{"gitId":"darrenlsx"},"content":"            f.close();","lastModifiedDate":"2023-02-18"},{"lineNumber":237,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":238,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(\"Unable to add task to database :(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":239,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":240,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":241,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":242,"author":{"gitId":"darrenlsx"},"content":"    /** Converts Task to StringBuilder to be passed as string */","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"darrenlsx"},"content":"    public static StringBuilder stringToWrite(Task taskToAddToDatabaseList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":244,"author":{"gitId":"darrenlsx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":245,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":246,"author":{"gitId":"darrenlsx"},"content":"        // Format of task in database is: X|description|type of task","lastModifiedDate":"2023-02-18"},{"lineNumber":247,"author":{"gitId":"darrenlsx"},"content":"        sb.append(taskToAddToDatabaseList.getMarking() + BORDER","lastModifiedDate":"2023-02-18"},{"lineNumber":248,"author":{"gitId":"darrenlsx"},"content":"                + taskToAddToDatabaseList.getDescription() + BORDER);","lastModifiedDate":"2023-02-18"},{"lineNumber":249,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":250,"author":{"gitId":"darrenlsx"},"content":"        // X|description|T","lastModifiedDate":"2023-02-18"},{"lineNumber":251,"author":{"gitId":"darrenlsx"},"content":"        if (taskToAddToDatabaseList instanceof ToDo) {","lastModifiedDate":"2023-02-18"},{"lineNumber":252,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"T\");","lastModifiedDate":"2023-02-18"},{"lineNumber":253,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":254,"author":{"gitId":"darrenlsx"},"content":"        // X|description|D|by","lastModifiedDate":"2023-02-18"},{"lineNumber":255,"author":{"gitId":"darrenlsx"},"content":"        else if (taskToAddToDatabaseList instanceof Deadline) {","lastModifiedDate":"2023-02-18"},{"lineNumber":256,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"D\" + BORDER + ((Deadline) taskToAddToDatabaseList).getBy());","lastModifiedDate":"2023-02-18"},{"lineNumber":257,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":258,"author":{"gitId":"darrenlsx"},"content":"        // X|description|E|from|to","lastModifiedDate":"2023-02-18"},{"lineNumber":259,"author":{"gitId":"darrenlsx"},"content":"        else {","lastModifiedDate":"2023-02-18"},{"lineNumber":260,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"E\" + BORDER + ((Event) taskToAddToDatabaseList).getFrom()","lastModifiedDate":"2023-02-18"},{"lineNumber":261,"author":{"gitId":"darrenlsx"},"content":"                    + BORDER + ((Event) taskToAddToDatabaseList).getTo());","lastModifiedDate":"2023-02-18"},{"lineNumber":262,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":263,"author":{"gitId":"darrenlsx"},"content":"        return sb;","lastModifiedDate":"2023-02-18"},{"lineNumber":264,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":265,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":266,"author":{"gitId":"darrenlsx"},"content":"    /** Deletes the specific task by index */","lastModifiedDate":"2023-02-18"},{"lineNumber":267,"author":{"gitId":"darrenlsx"},"content":"    public static void deleteTask(String currTask, ArrayList\u003cTask\u003e myList) throws IllegalInputException {","lastModifiedDate":"2023-02-18"},{"lineNumber":268,"author":{"gitId":"darrenlsx"},"content":"        String[] list \u003d currTask.split(\" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":269,"author":{"gitId":"darrenlsx"},"content":"        if (isNumeric(list[1]) \u0026\u0026 list.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":270,"author":{"gitId":"darrenlsx"},"content":"            int indexToRemove \u003d Integer.parseInt(list[1]) - 1;","lastModifiedDate":"2023-02-12"},{"lineNumber":271,"author":{"gitId":"darrenlsx"},"content":"            printDeletedMessage(myList, indexToRemove);","lastModifiedDate":"2023-02-12"},{"lineNumber":272,"author":{"gitId":"darrenlsx"},"content":"            myList.remove(indexToRemove);","lastModifiedDate":"2023-02-12"},{"lineNumber":273,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":274,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-12"},{"lineNumber":275,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":276,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":277,"author":{"gitId":"darrenlsx"},"content":"        String stringToAdd \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":278,"author":{"gitId":"darrenlsx"},"content":"        for (Task task : myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":279,"author":{"gitId":"darrenlsx"},"content":"            stringToAdd +\u003d stringToWrite(task).toString() + System.lineSeparator();","lastModifiedDate":"2023-02-18"},{"lineNumber":280,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":281,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":282,"author":{"gitId":"darrenlsx"},"content":"            database.writeToFile(stringToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":283,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":284,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(\"Error encountered when deleting task in memory\");","lastModifiedDate":"2023-02-18"},{"lineNumber":285,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":286,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":287,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":288,"author":{"gitId":"darrenlsx"},"content":"    /** Initialises delete task */","lastModifiedDate":"2023-02-18"},{"lineNumber":289,"author":{"gitId":"darrenlsx"},"content":"    public static void handleDeleteTask(String currTask, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":290,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":291,"author":{"gitId":"darrenlsx"},"content":"            deleteTask(currTask, myList);","lastModifiedDate":"2023-02-18"},{"lineNumber":292,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":293,"author":{"gitId":"darrenlsx"},"content":"            printIllegalInputMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"darrenlsx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"darrenlsx"},"content":"            printIllegalInputMessage();","lastModifiedDate":"2023-02-12"},{"lineNumber":296,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":297,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":298,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":299,"author":{"gitId":"darrenlsx"},"content":"    /** Checks if given string is a number */","lastModifiedDate":"2023-02-18"},{"lineNumber":300,"author":{"gitId":"darrenlsx"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2023-02-12"},{"lineNumber":301,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":302,"author":{"gitId":"darrenlsx"},"content":"            Double.parseDouble(s);","lastModifiedDate":"2023-02-12"},{"lineNumber":303,"author":{"gitId":"darrenlsx"},"content":"            return true;","lastModifiedDate":"2023-02-12"},{"lineNumber":304,"author":{"gitId":"darrenlsx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":305,"author":{"gitId":"darrenlsx"},"content":"            return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":306,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":307,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":308,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":310,"author":{"gitId":"darrenlsx"},"content":"        printGreetMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":311,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":312,"author":{"gitId":"darrenlsx"},"content":"            database \u003d new Storage();","lastModifiedDate":"2023-02-18"},{"lineNumber":313,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":314,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(\"Unable to initialise database\");","lastModifiedDate":"2023-02-18"},{"lineNumber":315,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":316,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":317,"author":{"gitId":"darrenlsx"},"content":"        ArrayList\u003cTask\u003e myList \u003d database.taskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":318,"author":{"gitId":"darrenlsx"},"content":"        while (!canExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":319,"author":{"gitId":"darrenlsx"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":320,"author":{"gitId":"darrenlsx"},"content":"            String s \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":321,"author":{"gitId":"darrenlsx"},"content":"            if (s.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":322,"author":{"gitId":"darrenlsx"},"content":"                printByeMessage();","lastModifiedDate":"2023-01-31"},{"lineNumber":323,"author":{"gitId":"darrenlsx"},"content":"                canExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":324,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":325,"author":{"gitId":"darrenlsx"},"content":"                printList(myList);","lastModifiedDate":"2023-01-26"},{"lineNumber":326,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"mark\") || s.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":327,"author":{"gitId":"darrenlsx"},"content":"                handleMarkUnmark(s, myList);","lastModifiedDate":"2023-02-06"},{"lineNumber":328,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":329,"author":{"gitId":"darrenlsx"},"content":"                handleToDo(s, myList);","lastModifiedDate":"2023-02-06"},{"lineNumber":330,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":331,"author":{"gitId":"darrenlsx"},"content":"                handleDeadline(s, myList);","lastModifiedDate":"2023-02-06"},{"lineNumber":332,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":333,"author":{"gitId":"darrenlsx"},"content":"                handleEvent(s, myList);","lastModifiedDate":"2023-02-06"},{"lineNumber":334,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":335,"author":{"gitId":"darrenlsx"},"content":"                handleDeleteTask(s, myList);","lastModifiedDate":"2023-02-12"},{"lineNumber":336,"author":{"gitId":"darrenlsx"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":337,"author":{"gitId":"darrenlsx"},"content":"                printIllegalInputMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":338,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":339,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darrenlsx":337,"-":4}},{"path":"src/main/java/duke/database/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.database;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"public class Storage {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"                Task currTask \u003d parseToTask(taskString);","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"                this.taskList.add(currTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"    /** Overwriting the txt file */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"    public static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"        fw.close();","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"    /** Converts string to respective task type */","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"    public Task parseToTask(String str) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"        Task currTask;","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"        String[] stringArr \u003d str.split(\"//\");","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"        String typeOfTask \u003d stringArr[2];","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"        if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new ToDo((stringArr[1]));","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"        } else if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new Deadline(stringArr[1], stringArr[3]);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new Event(stringArr[1], stringArr[3], stringArr[4]);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"        if (stringArr[0].equals(\"X\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"            currTask.setDone();","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"        return currTask;","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"darrenlsx":63}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class IllegalInputException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        return by;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"        return \"[D]\" + super.toString().substring(3) + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"        return from;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"        return to;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"        return \"[E]\" + super.toString().substring(3)","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"                + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    public String getMarking() {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"            return \"X\";","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"            return \" \";","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"            return \"[ ][X] \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"            return \"[ ][ ] \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":40}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        return \"[T]\" + super.toString().substring(3);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":9}}]
