[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"    public static String LINE_PRINT \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"     * Adds the text entered by the user into the list and prints the added text","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"     * @param s","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    public static void addList(String s, ArrayList\u003cString\u003e myList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"        myList.add(\"[ ] \" + s);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE_PRINT + \"added: \" + s + \"\\n\" + LINE_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"     * Prints all the items in the list","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    public static void printList(ArrayList\u003cString\u003e myList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"        for (int i \u003d 0; i \u003c myList.size(); ++i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(i + 1 + \". \" + myList.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"     * Marks the given item in the list with an \"X\"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"     * @param s","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"    public static void markDone(String s, ArrayList\u003cString\u003e myList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"        String taskToMarkString \u003d s.substring(s.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"        int taskToMark \u003d Integer.parseInt(taskToMarkString) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"        myList.set(taskToMark, myList.get(taskToMark).replaceFirst(\" \", \"X\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE_PRINT","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"                + myList.get(taskToMark) + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"                + LINE_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"     * Unmarks the given item in the list","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"     * @param s","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"     * @param myList","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"    public static void markUndone(String s, ArrayList\u003cString\u003e myList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"        String taskToUnmarkString \u003d s.substring(s.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"        int taskToUnmark \u003d Integer.parseInt(taskToUnmarkString) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"        myList.set(taskToUnmark, myList.get(taskToUnmark).replaceFirst(\"X\", \" \"));","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE_PRINT","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"                + myList.get(taskToUnmark) + \"\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"                + LINE_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"        String logo \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"        String byeLine \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"        boolean canExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"        ArrayList\u003cString\u003e myList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"        while (!canExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"            String s \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"            String sArray[] \u003d s.split(\" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"            String firstWord \u003d sArray[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"            if (s.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"                System.out.println(byeLine);","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"                canExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"                printList(myList);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"            } else if (firstWord.toLowerCase().equals(\"mark\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"                markDone(s, myList);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"            } else if (firstWord.toLowerCase().equals(\"unmark\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"                markUndone(s, myList);","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"                addList(s, myList);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darrenlsx":90,"-":4}}]
