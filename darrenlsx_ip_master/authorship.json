[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"- There are 3 types of Task:","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"  - ToDo","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"  - Event","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"  - Deadline","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"- Other functions include: ","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"  - list","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"  - delete","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"  - mark","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"  - unmark","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"  - find","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"  - bye","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"## Task Types","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"### Add a \u003ccode\u003e**todo**\u003c/code\u003e task","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"Adds a todo to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"Input format: `todo DESCRIPTION`","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"`todo CS2113 IP`","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"[T][ ] CS2113 IP","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"### Add a \u003ccode\u003e**deadline**\u003c/code\u003e task","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"Input format: `deadline DESCRIPTION /by TIME`","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"`deadline Get flowers /by 14th Feb`","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"[D][ ] Get flowers (by: 14th Feb)","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"### Add an \u003ccode\u003e**event**\u003c/code\u003e task","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"Adds an event to the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"Input format: `event DESCRIPTION /from TIME /to TIME`","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"`event CG2023 Midterms, 2 Mar /from 4pm /to 6pm`","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"[E][ ] CG2023 Midterms, 2 Mar (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"## Other Functions","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"### \u003ccode\u003e**list**\u003c/code\u003e tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"Outputs all the tasks in your current task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"`list`","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"darrenlsx"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"darrenlsx"},"content":"1. [T][ ] CS2113 IP","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"darrenlsx"},"content":"2. [E][ ] CG2023 Midterms, 2 Mar (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"darrenlsx"},"content":"3. [D][ ] Get flowers (by: 14th Feb)","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"darrenlsx"},"content":"### \u003ccode\u003e**delete**\u003c/code\u003e a task","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"darrenlsx"},"content":"Deletes a task from the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"darrenlsx"},"content":"Input Format: `delete TASK_INDEX`","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"darrenlsx"},"content":"`delete 2`","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"darrenlsx"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"darrenlsx"},"content":"[E][ ] CG2023 Midterms, 2 Mar (from: 4pm to: 6pm)","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"darrenlsx"},"content":"Now you have 2 task(s) in the list","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"darrenlsx"},"content":"### \u003ccode\u003e**mark**\u003c/code\u003e a task as done","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"darrenlsx"},"content":"Marks a task in the task list as done with an \u0027X\u0027.","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"darrenlsx"},"content":"Input Format: `mark TASK_INDEX`","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"darrenlsx"},"content":"Input: ","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"darrenlsx"},"content":"`mark 1`","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"darrenlsx"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"darrenlsx"},"content":"[T][X] CS2113 IP","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"darrenlsx"},"content":"### \u003ccode\u003e**unmark**\u003c/code\u003e a task as not done","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"darrenlsx"},"content":"Un-marks a task in the task list as not done.","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"darrenlsx"},"content":"Input Format: `unmark TASK_INDEX`","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"darrenlsx"},"content":"`unmark 1`","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"darrenlsx"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"darrenlsx"},"content":"[T][ ] CS2113 IP","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"darrenlsx"},"content":"### \u003ccode\u003e**find**\u003c/code\u003e a task","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"darrenlsx"},"content":"Search for a task in the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"darrenlsx"},"content":"*Note that the search is case-sensitive.*","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"darrenlsx"},"content":"Input Format: `find DESCRIPTION`","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"darrenlsx"},"content":"`find IP`","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"darrenlsx"},"content":"Here are the matching task(s) in your list:","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"darrenlsx"},"content":"1.[T][ ] CS2113 IP","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"darrenlsx"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"darrenlsx"},"content":"```","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"darrenlsx"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"darrenlsx"},"content":"### Saying \u003ccode\u003e**bye**\u003c/code\u003e :sob:","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"darrenlsx"},"content":"Exits the program.","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"darrenlsx"},"content":"\u003cu\u003eExample of Usage\u003c/u\u003e:","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"darrenlsx"},"content":"Input:","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"darrenlsx"},"content":"`bye`","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"darrenlsx"},"content":"Output:","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":198,"author":{"gitId":"darrenlsx"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"darrenlsx":176,"-":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"import duke.database.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"    public static boolean canExit \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    private Storage database;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public Duke() {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"            database \u003d new Storage();","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"            Ui.printInitialiseErrorMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"        tasks \u003d new TaskList(database.tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"        run(database, tasks);","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"     * Function to run the program by reading in inputs from user and calling the respective functions.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"     * @param database  the data stored in txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"     * @param myList    the list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"    public void run(Storage database, TaskList myList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"        Ui.printGreetMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"        while (!canExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"            String s \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"            String command \u003d s.toLowerCase();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"                Ui.printByeMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"                canExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"                Ui.printList(myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"                Parser.handleMarkUnmark(s, myList, database);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"                Parser.handleToDo(s, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"                Parser.handleDeadline(s, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"                Parser.handleEvent(s, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"                Parser.handleDeleteTask(s, myList, database);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"            } else if (s.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"                Parser.findTask(s, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"                Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"        new Duke();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darrenlsx":60,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.exceptions.EmptyInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"import duke.exceptions.IllegalInputException;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"import duke.database.Storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"public class Parser {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"     * Marks task as done or undone and updates database.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"     * @param command  the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"     * @param myList   the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"     * @param database the list of tasks stored in txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"    public static void markDoneOrUndone(String command, TaskList myList, Storage database) {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"            String[] words \u003d command.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"            String firstWord \u003d words[0];","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"            String taskToMarkOrUnmarkString \u003d command.substring(command.length() - 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"            int taskToMarkOrUnmark \u003d Integer.parseInt(taskToMarkOrUnmarkString) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"            Ui.printMarkOrUnmarkMessage(myList, firstWord, taskToMarkOrUnmark);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"            String stringToAdd \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"            for (Task task : myList.tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"                stringToAdd +\u003d database.stringToWrite(task).toString() + System.lineSeparator();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"            database.writeToFile(stringToAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalIndexMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"            Ui.printInitialiseErrorMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes the task as a todo type and updates database.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"    public static void makeToDoFunction(String command, TaskList myList) throws EmptyInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"        String[] newTask \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"        if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"        Task toDoTask \u003d new ToDo(newTask[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"        myList.addToTaskList(toDoTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"        Ui.printTaskMessage(myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"        Storage.addTaskToDatabase(toDoTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes the task as a Deadline type and updates database.","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"    public static void makeDeadlinesFunction(String command, TaskList myList)","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"            throws EmptyInputException, IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"        if (command.contains(\"/by\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"            String[] newTask \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"            if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"            String[] split \u003d newTask[1].split(\" /by \");","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"            if (split[1].isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"            Task deadlineTask \u003d new Deadline(split[0], split[1]);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"            myList.addToTaskList(deadlineTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"            Ui.printTaskMessage(myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"            Storage.addTaskToDatabase(deadlineTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"     * Adds the input text and makes task as an Event type and updates database.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"    public static void makeEventFunction(String command, TaskList myList)","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"            throws EmptyInputException, IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"darrenlsx"},"content":"        if (command.contains(\"/from\") \u0026\u0026 command.contains(\"/to\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"darrenlsx"},"content":"            String[] newTask \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"darrenlsx"},"content":"            if (newTask[1].isBlank()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"darrenlsx"},"content":"                throw new EmptyInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"darrenlsx"},"content":"            String[] split \u003d newTask[1].split(\" /\");","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"darrenlsx"},"content":"            String timeFrom \u003d split[1].substring(5);","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"darrenlsx"},"content":"            String timeTo \u003d split[2].substring(3);","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"darrenlsx"},"content":"            Task eventTask \u003d new Event(split[0], timeFrom, timeTo);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"darrenlsx"},"content":"            myList.addToTaskList(eventTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"darrenlsx"},"content":"            Ui.printTaskMessage(myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"darrenlsx"},"content":"            Storage.addTaskToDatabase(eventTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"darrenlsx"},"content":"     * Initialises check for empty input function and marks/un-marks the task accordingly.","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"darrenlsx"},"content":"     * @param command  the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"darrenlsx"},"content":"     * @param myList   the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"darrenlsx"},"content":"     * @param database the list of tasks stored in txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"darrenlsx"},"content":"    public static void handleMarkUnmark(String command, TaskList myList, Storage database) {","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"darrenlsx"},"content":"            checkMarkUnmark(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"darrenlsx"},"content":"            markDoneOrUndone(command, myList, database);","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"darrenlsx"},"content":"            Ui.printEmptyInputMessage(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"darrenlsx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"darrenlsx"},"content":"     * Initialises ToDo type task.","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"darrenlsx"},"content":"     * If error is encountered, error message is printed.","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"darrenlsx"},"content":"    public static void handleToDo(String command, TaskList myList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"darrenlsx"},"content":"            makeToDoFunction(command, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"darrenlsx"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"darrenlsx"},"content":"            Ui.printEmptyInputMessage(command);","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"darrenlsx"},"content":"            Ui.printEmptyInputMessage(command.trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"darrenlsx"},"content":"     * Initialises Deadline type task.","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"darrenlsx"},"content":"     * If error is encountered, error message is printed.","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"darrenlsx"},"content":"    public static void handleDeadline(String command, TaskList myList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"darrenlsx"},"content":"            makeDeadlinesFunction(command, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"darrenlsx"},"content":"            Ui.printEmptyInputMessage(command.trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"darrenlsx"},"content":"     * Initialises Event type task.","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"darrenlsx"},"content":"     * If error is encountered, error message is printed.","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"darrenlsx"},"content":"     * @param command the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"darrenlsx"},"content":"     * @param myList  the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"darrenlsx"},"content":"    public static void handleEvent(String command, TaskList myList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"darrenlsx"},"content":"            makeEventFunction(command, myList);","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"darrenlsx"},"content":"        } catch (EmptyInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"darrenlsx"},"content":"            Ui.printEmptyInputMessage(command.trim());","lastModifiedDate":"2023-02-26"},{"lineNumber":174,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":177,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":178,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"darrenlsx"},"content":"     * Checks if Mark or Unmark input is empty","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"darrenlsx"},"content":"     * @param command","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"darrenlsx"},"content":"     * @throws EmptyInputException","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"darrenlsx"},"content":"    public static void checkMarkUnmark(String command) throws EmptyInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"darrenlsx"},"content":"        String[] list \u003d command.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"darrenlsx"},"content":"        if (list.length \u003c 2) {","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"darrenlsx"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"darrenlsx"},"content":"     * Deletes the specific task by index and updates database.","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"darrenlsx"},"content":"     * @param command  the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"darrenlsx"},"content":"     * @param myList   the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"darrenlsx"},"content":"     * @param database the list of tasks stored in txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"darrenlsx"},"content":"     * @throws IllegalInputException if format of input is wrong","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"darrenlsx"},"content":"    public static void deleteTask(String command, TaskList myList, Storage database) throws IllegalInputException {","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"darrenlsx"},"content":"        String[] list \u003d command.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":202,"author":{"gitId":"darrenlsx"},"content":"        if (isNumeric(list[1]) \u0026\u0026 list.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"darrenlsx"},"content":"            int indexToRemove \u003d Integer.parseInt(list[1]) - 1;","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"darrenlsx"},"content":"            Ui.printDeletedMessage(myList, indexToRemove);","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"darrenlsx"},"content":"            myList.deleteTask(indexToRemove);","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"darrenlsx"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":209,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"darrenlsx"},"content":"        String stringToAdd \u003d \"\";","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"darrenlsx"},"content":"        for (Task task : myList.tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"darrenlsx"},"content":"            stringToAdd +\u003d database.stringToWrite(task).toString() + System.lineSeparator();","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"darrenlsx"},"content":"            database.writeToFile(stringToAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"darrenlsx"},"content":"            Ui.printDeletingErrorMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":219,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":220,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"darrenlsx"},"content":"     * Initialises delete function.","lastModifiedDate":"2023-02-26"},{"lineNumber":223,"author":{"gitId":"darrenlsx"},"content":"     * If error encountered, error message is printed.","lastModifiedDate":"2023-02-26"},{"lineNumber":224,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":225,"author":{"gitId":"darrenlsx"},"content":"     * @param command  the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"darrenlsx"},"content":"     * @param myList   the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"darrenlsx"},"content":"     * @param database the list of tasks stored in txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"darrenlsx"},"content":"    public static void handleDeleteTask(String command, TaskList myList, Storage database) {","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"darrenlsx"},"content":"            deleteTask(command, myList, database);","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"darrenlsx"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"darrenlsx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"darrenlsx"},"content":"            Ui.printIllegalInputMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":239,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":240,"author":{"gitId":"darrenlsx"},"content":"     * Search for the task that was inputted by user in the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":241,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":242,"author":{"gitId":"darrenlsx"},"content":"     * @param command   the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":243,"author":{"gitId":"darrenlsx"},"content":"     * @param myList    the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":245,"author":{"gitId":"darrenlsx"},"content":"    public static void findTask(String command, TaskList myList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"darrenlsx"},"content":"        String[] commandList \u003d command.split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"darrenlsx"},"content":"        String taskToFind \u003d commandList[1];","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"darrenlsx"},"content":"        int numberOfMatchingTasks \u003d 0;","lastModifiedDate":"2023-02-26"},{"lineNumber":249,"author":{"gitId":"darrenlsx"},"content":"        Ui.printFindMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"darrenlsx"},"content":"        for (Task task : myList.tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"darrenlsx"},"content":"            String[] taskDescriptionArray \u003d task.getDescription().split(\" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"darrenlsx"},"content":"            if (Arrays.asList(taskDescriptionArray).contains(taskToFind)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":253,"author":{"gitId":"darrenlsx"},"content":"                numberOfMatchingTasks++;","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"darrenlsx"},"content":"                System.out.println(numberOfMatchingTasks + \".\" + task.toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":255,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":257,"author":{"gitId":"darrenlsx"},"content":"        if (numberOfMatchingTasks \u003d\u003d 0) {","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"darrenlsx"},"content":"            Ui.printFoundNothingMessage();","lastModifiedDate":"2023-02-26"},{"lineNumber":259,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":260,"author":{"gitId":"darrenlsx"},"content":"        Ui.printLine();","lastModifiedDate":"2023-02-26"},{"lineNumber":261,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":262,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":263,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":264,"author":{"gitId":"darrenlsx"},"content":"     * Checks if given string is a number.","lastModifiedDate":"2023-02-26"},{"lineNumber":265,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":266,"author":{"gitId":"darrenlsx"},"content":"     * @param s string to check","lastModifiedDate":"2023-02-26"},{"lineNumber":267,"author":{"gitId":"darrenlsx"},"content":"     * @return true if string is a number","lastModifiedDate":"2023-02-26"},{"lineNumber":268,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":269,"author":{"gitId":"darrenlsx"},"content":"    public static boolean isNumeric(String s) {","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-26"},{"lineNumber":271,"author":{"gitId":"darrenlsx"},"content":"            Double.parseDouble(s);","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"darrenlsx"},"content":"            return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":273,"author":{"gitId":"darrenlsx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"darrenlsx"},"content":"            return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":277,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"darrenlsx":277}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"public class TaskList {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public TaskList(ArrayList\u003cTask\u003e database) {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        tasks \u003d database;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    public void deleteTask(int indexToRemove) {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"        tasks.remove(indexToRemove);","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"darrenlsx":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"public class Ui {","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"     * Prints greeting message when program is ran.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public static void printGreetMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"     * Prints message after adding To-Do/Deadline/Event task.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"    public static void printTaskMessage(TaskList tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"                + tasks.getTask(tasks.getTaskListSize() - 1) + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"                + \"Now you have \" + tasks.getTaskListSize() + \" task(s) in the list.\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"     * Prints exiting message before program stops","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"     * Prints message if user input was not understandable by program.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"    public static void printIllegalInputMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"                + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"     * Prints message if user input has an empty description.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"     * @param task the task that was inputted by user","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"    public static void printEmptyInputMessage(String task) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"                + \"☹ OOPS!!! The description of \" + task + \" cannot be empty.\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"                + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"     * Prints message if user has inputted an index not found in list.","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"    public static void printIllegalIndexMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(\"Sorry unable to locate such a task.\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"darrenlsx"},"content":"     * Prints all the items in the list","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"    public static void printList(TaskList tasks) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskListSize(); ++i) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(i + 1 + \". \" + tasks.getTask(i));","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"     * Prints message after user deletes specific task in the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"     * @param index the index of the task to be removed","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"    public static void printDeletedMessage(TaskList tasks, int index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Noted. I\u0027ve removed this task:\\n\" + tasks.getTask(index)","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"                + \"\\nNow you have \" + (tasks.getTaskListSize() - 1) + \" task(s) in the list\\n\" + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"     * Prints message if error has occurred when syncing with txt file.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"    public static void printInitialiseErrorMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(\"Unable to initialise database\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"darrenlsx"},"content":"     * Prints message if error has occurred while syncing with txt file when deleting task.","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"darrenlsx"},"content":"    public static void printDeletingErrorMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(\"Error encountered when deleting task in memory\");","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"darrenlsx"},"content":"     * Prints message after user has marked/un-marked a specific task in the task list.","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"darrenlsx"},"content":"     * @param tasks         the current list of tasks","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"darrenlsx"},"content":"     * @param command       the input command given by user","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"darrenlsx"},"content":"     * @param indexToChange the index to be marked/un-marked","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"darrenlsx"},"content":"    public static void printMarkOrUnmarkMessage(TaskList tasks, String command, int indexToChange) {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"darrenlsx"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"darrenlsx"},"content":"            tasks.getTask(indexToChange).setDone();","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(LINE","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"darrenlsx"},"content":"                    + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"darrenlsx"},"content":"                    + tasks.getTask(indexToChange) + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"darrenlsx"},"content":"                    + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"darrenlsx"},"content":"            tasks.getTask(indexToChange).setUndone();","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(LINE","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"darrenlsx"},"content":"                    + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"darrenlsx"},"content":"                    + tasks.getTask(indexToChange) + \"\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"darrenlsx"},"content":"                    + LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"darrenlsx"},"content":"    public static void printFindMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE + \"Here are the matching task(s) in your list:\\n\");","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"darrenlsx"},"content":"    public static void printFoundNothingMessage() {","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(\"Unable to find any matching task.\");","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"darrenlsx"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"darrenlsx"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"darrenlsx":134}},{"path":"src/main/java/duke/database/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.database;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"import java.io.File;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"public class Storage {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"    public static final String BORDER \u003d \"//\";","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"     * Constructor of Storage class that creates a new ArrayList of tasks and locates the txt file.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"     * If txt file is not located, create a new txt file.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"    public Storage() throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"                Task currTask \u003d parseToTask(taskString);","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"                this.tasks.add(currTask);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"            f.createNewFile();","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"darrenlsx"},"content":"     * Overwriting the database.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"darrenlsx"},"content":"     * @param textToAdd the text to be added into txt file.","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"darrenlsx"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"darrenlsx"},"content":"    public static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"darrenlsx"},"content":"        FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"darrenlsx"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"darrenlsx"},"content":"        fw.close();","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"darrenlsx"},"content":"     * Converts string to respective task type.","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"darrenlsx"},"content":"     * @param str the string to be converted","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"darrenlsx"},"content":"     * @return the respective task type","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"darrenlsx"},"content":"    public Task parseToTask(String str) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"darrenlsx"},"content":"        Task currTask;","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"darrenlsx"},"content":"        String[] stringArr \u003d str.split(\"//\");","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"darrenlsx"},"content":"        String typeOfTask \u003d stringArr[2];","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"darrenlsx"},"content":"        if (typeOfTask.equals(\"T\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new ToDo((stringArr[1]));","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"darrenlsx"},"content":"        } else if (typeOfTask.equals(\"D\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new Deadline(stringArr[1], stringArr[3]);","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"darrenlsx"},"content":"            currTask \u003d new Event(stringArr[1], stringArr[3], stringArr[4]);","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"darrenlsx"},"content":"        if (stringArr[0].equals(\"X\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"darrenlsx"},"content":"            currTask.setDone();","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"darrenlsx"},"content":"        return currTask;","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"darrenlsx"},"content":"     * Updates an individual task to database.","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"darrenlsx"},"content":"     * @param taskToAdd the task to be added into the txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"darrenlsx"},"content":"    public static void addTaskToDatabase(Task taskToAdd) {","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"darrenlsx"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"darrenlsx"},"content":"            FileWriter f \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"darrenlsx"},"content":"            String taskInDatabaseFormat \u003d stringToWrite(taskToAdd).toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"darrenlsx"},"content":"            f.write(taskInDatabaseFormat + System.lineSeparator());","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"darrenlsx"},"content":"            f.close();","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"darrenlsx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"darrenlsx"},"content":"            System.out.println(\"Unable to add task to database :(\");","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"darrenlsx"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"darrenlsx"},"content":"     * Converts Task to StringBuilder to be passed as string for preparation to add into","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"darrenlsx"},"content":"     * txt file.","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"darrenlsx"},"content":"     *","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"darrenlsx"},"content":"     * @param taskToAddToDatabaseList the task to be added into the txt file","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"darrenlsx"},"content":"     * @return the task in StringBuilder type","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"darrenlsx"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"darrenlsx"},"content":"    public static StringBuilder stringToWrite(Task taskToAddToDatabaseList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"darrenlsx"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"darrenlsx"},"content":"        // Format of task in database is: X//description//type of task","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"darrenlsx"},"content":"        sb.append(taskToAddToDatabaseList.getMarking() + BORDER","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"darrenlsx"},"content":"                + taskToAddToDatabaseList.getDescription() + BORDER);","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"darrenlsx"},"content":"        // X//description//T","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"darrenlsx"},"content":"        if (taskToAddToDatabaseList instanceof ToDo) {","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"T\");","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"darrenlsx"},"content":"        // X//description//D//by","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"darrenlsx"},"content":"        else if (taskToAddToDatabaseList instanceof Deadline) {","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"D\" + BORDER + ((Deadline) taskToAddToDatabaseList).getBy());","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"darrenlsx"},"content":"        // X//description//E//from//to","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"darrenlsx"},"content":"        else {","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"darrenlsx"},"content":"            sb.append(\"E\" + BORDER + ((Event) taskToAddToDatabaseList).getFrom()","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"darrenlsx"},"content":"                    + BORDER + ((Event) taskToAddToDatabaseList).getTo());","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"darrenlsx"},"content":"        return sb;","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"darrenlsx":126}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class IllegalInputException extends DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"darrenlsx":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"    protected String by;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        return by;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"        return \"[D]\" + super.toString().substring(3) + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"    protected String from;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"    protected String to;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"        return from;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"        return to;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"        return \"[E]\" + super.toString().substring(3)","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"                + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"public class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"        return description;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"darrenlsx"},"content":"    public void setDone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"darrenlsx"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"darrenlsx"},"content":"    public void setUndone() {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"darrenlsx"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"darrenlsx"},"content":"    public String getMarking() {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"darrenlsx"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"darrenlsx"},"content":"            return \"X\";","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"darrenlsx"},"content":"            return \" \";","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"darrenlsx"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"darrenlsx"},"content":"            return \"[ ][X] \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"darrenlsx"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"darrenlsx"},"content":"            return \"[ ][ ] \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"darrenlsx"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":40}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"        super(description);","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"darrenlsx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"darrenlsx"},"content":"        return \"[T]\" + super.toString().substring(3);","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"darrenlsx"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"darrenlsx"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenlsx"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"darrenlsx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"darrenlsx"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"darrenlsx"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"darrenlsx"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"darrenlsx"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"darrenlsx"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"darrenlsx":9}}]
