[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"    protected String by;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jeromeongithub":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"    public static final int MAX_NUMBER_OF_TASKS \u003d 100;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"    public static int tasksIndex \u003d 0;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    public static boolean isInUse \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"        // how do i abstract these 2 things into a function? can i initialize inside a function?","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"        Task[] tasks \u003d new Task[MAX_NUMBER_OF_TASKS];","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"        // how to deal with \"Exception in thread \"main\" java.util.NoSuchElementException: No line found\"?","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"        greetUser();","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"        while (isInUse) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"            String userInput \u003d getUserInput(in);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"            String[] processedInputs \u003d processUserInput(userInput);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"            showResultToUser(tasks, processedInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"    public static void showResultToUser(Task[] tasks, String[] processedInputs) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"        if (processedInputs[0].equals(\"bye\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"            isInUse \u003d false; // can i do this?***","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"            printExitMessage();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"        } else if (processedInputs[0].equals(\"list\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"            listTasks(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"        } else if (processedInputs[0].equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"            int indexToBeMarked \u003d Integer.parseInt(processedInputs[1]) - 1; // 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"            tasks[indexToBeMarked].setDone(true);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"            printNotification(tasks[indexToBeMarked], \"mark\", tasksIndex + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"        } else if (processedInputs[0].equals(\"unmark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"            int indexToBeUnmarked \u003d Integer.parseInt(processedInputs[1]) - 1; // 0-indexed","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"            tasks[indexToBeUnmarked].setDone(false);","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"            printNotification(tasks[indexToBeUnmarked], \"unmark\",tasksIndex + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"        } else if (processedInputs[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"            tasks[tasksIndex] \u003d new ToDo(processedInputs[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"            printNotification(tasks[tasksIndex], \"todo\", tasksIndex + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"            tasksIndex++;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"        } else if (processedInputs[0].equals(\"deadline\")) { // now, if the array has 2 elements, then it is \"deadline\" case","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"            String[] taskNameAndBy \u003d furtherProcessInputForDeadline(processedInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"            tasks[tasksIndex] \u003d new Deadline(taskNameAndBy[0], taskNameAndBy[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"            printNotification(tasks[tasksIndex], \"deadline\", tasksIndex + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"            tasksIndex++;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"        } else { // must be \"event\" case","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"            String[] fromAndToAndTaskName \u003d furtherProcessInputForEvent(processedInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"            tasks[tasksIndex] \u003d new Event(fromAndToAndTaskName[2], fromAndToAndTaskName[0], fromAndToAndTaskName[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"            printNotification(tasks[tasksIndex], \"event\", tasksIndex + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"            tasksIndex++;","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"        return;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"    private static String[] furtherProcessInputForDeadline(String[] processedInputs) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"        // not sure what names to use for the variables","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"        String[] taskNameAndIdentifierAndBy \u003d processedInputs[1].split(\"/\",2);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"        String[] identifierAndBy \u003d taskNameAndIdentifierAndBy[1].split(\" \",2);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"        String [] taskNameAndBy \u003d {taskNameAndIdentifierAndBy[0], identifierAndBy[1]};","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"        return taskNameAndBy;","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    private static String[] furtherProcessInputForEvent(String[] processedInputs) {","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"        // not sure what names to use for the variables","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"        String[] taskNameAndFromAndTo \u003d processedInputs[1].split(\"/\", 3);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"        String[] identifierAndFrom \u003d taskNameAndFromAndTo[1].split(\" \",2);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"        String[] identifierAndTo \u003d taskNameAndFromAndTo[2].split(\" \",2);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"        String[] fromAndToAndTaskName \u003d {identifierAndFrom[1], identifierAndTo[1], taskNameAndFromAndTo[0]};","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"        return fromAndToAndTaskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"    private static void printNotification(Task task, String modification, int numberOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"        boolean isRequiredToShowNumberOfTasks \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"        if (modification.equals(\"unmark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"        } else if (modification.equals(\"mark\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"        } else { // adding either deadline, event or todo","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"            System.out.print(\"Got it. I\u0027ve added this task:\\n\" + \"  \");","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"            isRequiredToShowNumberOfTasks \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"        task.printTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"        if (isRequiredToShowNumberOfTasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"    private static void printExitMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"jeromeongithub"},"content":"    private static void listTasks(Task[] tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"jeromeongithub"},"content":"        for (int i \u003d 0; i \u003c tasksIndex; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"jeromeongithub"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"jeromeongithub"},"content":"            System.out.print(\".\");","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"jeromeongithub"},"content":"            tasks[i].printTask();","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"jeromeongithub"},"content":"    private static void greetUser() {","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"jeromeongithub"},"content":"    private static String getUserInput(Scanner in) {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"jeromeongithub"},"content":"        // Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"jeromeongithub"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"jeromeongithub"},"content":"        return userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"jeromeongithub"},"content":"    private static String[] processUserInput(String userInput) {","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"jeromeongithub"},"content":"        // first, split up the string ONCE with \" \" delimiter to separate the command \u0026 information","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"jeromeongithub"},"content":"        // processedInputs[0] is command, processedInputs[1] is the information","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"jeromeongithub"},"content":"        String[] processedInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"jeromeongithub"},"content":"        return processedInputs;","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeromeongithub":115,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"    protected String start;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"    protected String end;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"    public Event(String taskName, String start, String end) {","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + start + \"to: \" + end + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jeromeongithub":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"    private String taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"        return taskName;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"        if (isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    void printTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"jeromeongithub":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"        super(taskName);","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jeromeongithub":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"jeromeongithub":5}}]
