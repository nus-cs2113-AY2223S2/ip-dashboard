[{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"public class Deadlines extends Task{","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"    protected String deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"    Deadlines(String description, String deadline) {","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + this.getStatusAndDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"        return this.deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"lihka1202"},"content":"//    public void printAddedDeadline() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\t\\t\" + this.getStatusAndDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"    public String getStatusAndDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"        return \"[D]\" + super.getStatusAndDescription() + \"(by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"lihka1202":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"import exceptions.*;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"// branch level-5 update as merge was not successful","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":" * Incorrect Tags have been resolved, all commits have been tagged appropriately","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"    public static void printLine() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t---------------------------------------------------------------------------------\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"    public static void listTasks(int currentIndex, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"        for(int i \u003d 0; i\u003ccurrentIndex;i+\u003d1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\u0027\\t\u0027 + Integer.toString(i+1) + \".\" + taskList.get(i).getStatusAndDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"            // can be further optimized.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"lihka1202"},"content":"    public static boolean isTheSame(String userInput, String toCompare) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"lihka1202"},"content":"        return userInput.split(\" \")[0].equals(toCompare);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"lihka1202"},"content":"    ","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"lihka1202"},"content":"    public static boolean isInRange(String userInput, int currentIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"lihka1202"},"content":"        return (Integer.parseInt(userInput.split(\" \")[1])\u003e0 \u0026\u0026 Integer.parseInt(userInput.split(\" \")[1])\u003ccurrentIndex+1);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"lihka1202"},"content":"    public static void printMarkedTask(String userInput, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"lihka1202"},"content":"        taskList.get(Integer.parseInt(userInput.split(\" \")[1]) - 1).markTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + taskList.get(Integer.parseInt(userInput.split(\" \")[1]) - 1).getStatusAndDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"lihka1202"},"content":"    public static void deleteTask() {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tNoted! I\u0027ve removed this task!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + taskList.get(Integer.parseInt(userInput.split(\" \")[1]) - 1).getStatusAndDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"lihka1202"},"content":"        taskList.remove(Integer.parseInt(userInput.split(\" \")[1]) - 1);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"lihka1202"},"content":"        currentIndex-\u003d1;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"lihka1202"},"content":"        printNoTasks(currentIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"lihka1202"},"content":"    public static void printUnmarkedTask(String userInput, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"lihka1202"},"content":"        taskList.get(Integer.parseInt(userInput.split(\" \")[1]) - 1).unMarkTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + taskList.get(Integer.parseInt(userInput.split(\" \")[1]) - 1).getStatusAndDescription());","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"lihka1202"},"content":"    public static String[] getDeadline(String userInput) {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"lihka1202"},"content":"        String intermediateStage \u003d userInput.replace(\"deadline \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"lihka1202"},"content":"        String[] deadlineAndDescription \u003d intermediateStage.split(\"/by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"lihka1202"},"content":"        return deadlineAndDescription;","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"lihka1202"},"content":"    public static String[] getEvent(String userInput) {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"lihka1202"},"content":"        String intermediateStage \u003d userInput.replace(\"event \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"lihka1202"},"content":"        String[] eventDescription \u003d intermediateStage.split(\"/from | /to\");","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"lihka1202"},"content":"        return eventDescription;","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"lihka1202"},"content":"    public static void printNoTasks(int currentIndex) {","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"lihka1202"},"content":"        if(currentIndex\u003d\u003d1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tNow you have \" + Integer.toString(currentIndex) + \" task in the list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"lihka1202"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tNow you have \" + Integer.toString(currentIndex) + \" tasks in the list\");","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"lihka1202"},"content":"    public static void printTodo(String userInput) throws EmptyTodo {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"lihka1202"},"content":"        String[] holder \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"lihka1202"},"content":"        if(holder.length\u003c2)","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"lihka1202"},"content":"        {","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"lihka1202"},"content":"            throw new EmptyTodo();","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"lihka1202"},"content":"        String input \u003d userInput.replace(\"todo \", \"\");","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"lihka1202"},"content":"        Todos temp \u003d new Todos(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"lihka1202"},"content":"        taskList.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"lihka1202"},"content":"        currentIndex+\u003d1;","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"lihka1202"},"content":"        printNoTasks(currentIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"lihka1202"},"content":"    public static void printDeadline(String userInput) throws EmptyDeadline, DeadlineMissingPhrase, DeadlineIsBlank {","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"lihka1202"},"content":"        String[] deadlineAndDescription \u003d getDeadline(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"lihka1202"},"content":"        if(!userInput.contains(\"/by \") \u0026\u0026 userInput.split(\" \").length\u003e1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"lihka1202"},"content":"            throw new DeadlineMissingPhrase();","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"lihka1202"},"content":"        } else if(deadlineAndDescription.length\u003d\u003d1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"lihka1202"},"content":"            throw new EmptyDeadline();","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"lihka1202"},"content":"        } else if(deadlineAndDescription[1].isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"lihka1202"},"content":"            throw new DeadlineIsBlank();","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"lihka1202"},"content":"        Deadlines temp \u003d new Deadlines(deadlineAndDescription[0], deadlineAndDescription[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"lihka1202"},"content":"        taskList.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"lihka1202"},"content":"        currentIndex+\u003d1;","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"lihka1202"},"content":"        printNoTasks(currentIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"lihka1202"},"content":"    public static void printEvent(String userInput) throws EmptyEvent, EventMissingBothPhrases, EventMissingToPhrase, EventMissingFromPhrase, EventFromIsBlank, EventToIsBlank {","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"lihka1202"},"content":"        String [] eventDescription \u003d getEvent(userInput);","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"lihka1202"},"content":"        if(!userInput.contains(\"/from\") \u0026\u0026 userInput.split(\" \").length\u003e1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"lihka1202"},"content":"            throw new EventMissingFromPhrase();","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"lihka1202"},"content":"        } else if(!userInput.contains(\"/to\") \u0026\u0026 userInput.split(\" \").length\u003e1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"lihka1202"},"content":"            throw new EventMissingToPhrase();","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"lihka1202"},"content":"        } else if(!(userInput.contains(\"/from\") || userInput.contains(\"/to\")) \u0026\u0026 userInput.split(\" \").length\u003e1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"lihka1202"},"content":"            throw new EventMissingFromPhrase();","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"lihka1202"},"content":"        } else if (eventDescription.length\u003d\u003d1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"lihka1202"},"content":"            throw new EmptyEvent();","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"lihka1202"},"content":"        }else if(eventDescription[1].isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"lihka1202"},"content":"            throw new EventFromIsBlank();","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"lihka1202"},"content":"        } else if(eventDescription[2].isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"lihka1202"},"content":"            throw new EventToIsBlank();","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"lihka1202"},"content":"        Events temp \u003d new Events(eventDescription[0], eventDescription[1], eventDescription[2]);","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"lihka1202"},"content":"        taskList.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"lihka1202"},"content":"        currentIndex+\u003d1;","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"lihka1202"},"content":"        printNoTasks(currentIndex);","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"lihka1202"},"content":"    public static void printTask(String userInput) {","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"lihka1202"},"content":"        Task temp \u003d new Task(userInput); // set the description","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"lihka1202"},"content":"        taskList.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"lihka1202"},"content":"        currentIndex+\u003d1;","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tadded: \" + userInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"lihka1202"},"content":"    public static void sayBye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"lihka1202"},"content":"            fileObject.clearFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"lihka1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"Oh No unable to leave\");","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-03"},{"lineNumber":142,"author":{"gitId":"lihka1202"},"content":"        printLine();","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"lihka1202"},"content":"    public static void deadlineExceptionHandler() {","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"lihka1202"},"content":"            printDeadline(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"lihka1202"},"content":"            fileObject.addToFile(currentIndex +\".\" + taskList.get(taskList.size()-1).getStatusAndDescription() + System.lineSeparator());","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"lihka1202"},"content":"        } catch (EmptyDeadline e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the deadline isn\u0027t empty!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"lihka1202"},"content":"        } catch (DeadlineMissingPhrase e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that you include the \u0027/by\u0027 phrase to indicate the deadline!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"lihka1202"},"content":"        } catch (DeadlineIsBlank e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the deadline is not composed of solely white spaces!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"lihka1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"unable to write\");","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"lihka1202"},"content":"    public static void eventExceptionHandler() {","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"lihka1202"},"content":"            printEvent(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"lihka1202"},"content":"            fileObject.addToFile(currentIndex +\".\" + taskList.get(taskList.size()-1).getStatusAndDescription() + System.lineSeparator());","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"lihka1202"},"content":"        } catch (EmptyEvent e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the event isn\u0027t empty!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"lihka1202"},"content":"        } catch (EventMissingFromPhrase e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that you include the \u0027/from\u0027 phrase to indicate the start of the event!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"lihka1202"},"content":"        } catch (EventMissingToPhrase e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that you include the \u0027/to\u0027 phrase to indicate the end of the event!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"lihka1202"},"content":"        } catch (EventMissingBothPhrases e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that you include the \u0027/from\u0027 and \u0027/to\u0027 phrase to indicate the start and end of the event!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"lihka1202"},"content":"        } catch (EventFromIsBlank e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the event has a valid start time period\");","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"lihka1202"},"content":"        } catch (EventToIsBlank e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the event has a valid end time period\");","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"lihka1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"unable to write\");","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"lihka1202"},"content":"    public static void todoExceptionHandler() {","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"lihka1202"},"content":"            printTodo(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"lihka1202"},"content":"        catch (EmptyTodo e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"\\tPlease ensure that the todo has a description!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"lihka1202"},"content":"            printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"lihka1202"},"content":"            fileObject.addToFile(currentIndex +\".\" + taskList.get(taskList.size()-1).getStatusAndDescription() + System.lineSeparator());","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"lihka1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"unable to write\");","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":214,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":215,"author":{"gitId":"lihka1202"},"content":"    public static void deleteExceptionHandler() {","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"lihka1202"},"content":"        deleteTask();","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"lihka1202"},"content":"//    final static int MAXTASKS \u003d 100;","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"lihka1202"},"content":"//    public static Task[] taskList \u003d new Task[MAXTASKS];","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"lihka1202"},"content":"    public static  ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":226,"author":{"gitId":"lihka1202"},"content":"    public static int currentIndex \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":227,"author":{"gitId":"lihka1202"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-15"},{"lineNumber":228,"author":{"gitId":"lihka1202"},"content":"    public static String userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":229,"author":{"gitId":"lihka1202"},"content":"    //public static exceptions.DukeException exceptionHandler;","lastModifiedDate":"2023-02-15"},{"lineNumber":230,"author":{"gitId":"lihka1202"},"content":"    public static FileHandler fileObject \u003d new FileHandler(\"src/main/java/dukeData.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":238,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"---------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"---------------------------------------------------------------------------------\");","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"lihka1202"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":243,"author":{"gitId":"lihka1202"},"content":"            fileObject.createFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"lihka1202"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"lihka1202"},"content":"            System.out.println(\"Unable to write to file\");","lastModifiedDate":"2023-02-17"},{"lineNumber":246,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"lihka1202"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":248,"author":{"gitId":"lihka1202"},"content":"        while (true) { // ensure that the loop can stay on forever if needed.","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"lihka1202"},"content":"            while(userInput.equals(\"\") || userInput.equals(\" \")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":250,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":251,"author":{"gitId":"lihka1202"},"content":"                System.out.println(\"\\tSorry please enter a valid input \");","lastModifiedDate":"2023-02-15"},{"lineNumber":252,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":253,"author":{"gitId":"lihka1202"},"content":"                userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":254,"author":{"gitId":"lihka1202"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":255,"author":{"gitId":"lihka1202"},"content":"            if(userInput.equals(\"bye\")) { // exit command","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"lihka1202"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"lihka1202"},"content":"            } else if(userInput.equals(\"list\")) { //displays the list if needed","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":259,"author":{"gitId":"lihka1202"},"content":"                System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"lihka1202"},"content":"                listTasks(currentIndex, taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":261,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":262,"author":{"gitId":"lihka1202"},"content":"            } else if (isTheSame(userInput, \"mark\")) { //mark the task in","lastModifiedDate":"2023-02-02"},{"lineNumber":263,"author":{"gitId":"lihka1202"},"content":"                while(isInRange(userInput, currentIndex)\u003d\u003dfalse) {","lastModifiedDate":"2023-02-02"},{"lineNumber":264,"author":{"gitId":"lihka1202"},"content":"                    printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":265,"author":{"gitId":"lihka1202"},"content":"                    System.out.println(\"\\tNice try, enter a valid index to mark:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":266,"author":{"gitId":"lihka1202"},"content":"                    printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":267,"author":{"gitId":"lihka1202"},"content":"                    userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":268,"author":{"gitId":"lihka1202"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":269,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":270,"author":{"gitId":"lihka1202"},"content":"                printMarkedTask(userInput, taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":271,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":272,"author":{"gitId":"lihka1202"},"content":"            } else if (isTheSame(userInput, \"unmark\")) {//unmark the task","lastModifiedDate":"2023-02-03"},{"lineNumber":273,"author":{"gitId":"lihka1202"},"content":"                while(isInRange(userInput, currentIndex)\u003d\u003dfalse) {","lastModifiedDate":"2023-02-02"},{"lineNumber":274,"author":{"gitId":"lihka1202"},"content":"                    printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":275,"author":{"gitId":"lihka1202"},"content":"                    System.out.println(\"\\tNice try, enter a valid index to unmark:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":276,"author":{"gitId":"lihka1202"},"content":"                    printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":277,"author":{"gitId":"lihka1202"},"content":"                    userInput \u003d in.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":278,"author":{"gitId":"lihka1202"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":279,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":280,"author":{"gitId":"lihka1202"},"content":"                printUnmarkedTask(userInput, taskList);","lastModifiedDate":"2023-02-02"},{"lineNumber":281,"author":{"gitId":"lihka1202"},"content":"                printLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":282,"author":{"gitId":"lihka1202"},"content":"            } else if(isTheSame(userInput, \"todo\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":283,"author":{"gitId":"lihka1202"},"content":"                todoExceptionHandler();","lastModifiedDate":"2023-02-15"},{"lineNumber":284,"author":{"gitId":"lihka1202"},"content":"                //leave this for the final refactoring","lastModifiedDate":"2023-02-02"},{"lineNumber":285,"author":{"gitId":"lihka1202"},"content":"            } else if(isTheSame(userInput, \"deadline\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":286,"author":{"gitId":"lihka1202"},"content":"                deadlineExceptionHandler();","lastModifiedDate":"2023-02-15"},{"lineNumber":287,"author":{"gitId":"lihka1202"},"content":"            } else if(isTheSame(userInput, \"event\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":288,"author":{"gitId":"lihka1202"},"content":"                eventExceptionHandler();","lastModifiedDate":"2023-02-15"},{"lineNumber":289,"author":{"gitId":"lihka1202"},"content":"            } else if(isTheSame(userInput, \"delete\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":290,"author":{"gitId":"lihka1202"},"content":"                deleteExceptionHandler();","lastModifiedDate":"2023-02-17"},{"lineNumber":291,"author":{"gitId":"lihka1202"},"content":"            }  else { // tells the user that we have added the task in","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"lihka1202"},"content":"                printTask(userInput); // could remove this and ensure that only specific tasks can be entered!","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"lihka1202"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":294,"author":{"gitId":"lihka1202"},"content":"            /*","lastModifiedDate":"2023-02-17"},{"lineNumber":295,"author":{"gitId":"lihka1202"},"content":"            either way, the process to add to the file could be this way.","lastModifiedDate":"2023-02-17"},{"lineNumber":296,"author":{"gitId":"lihka1202"},"content":"            Essentially create file manip:","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"lihka1202"},"content":"                1. At the end of this while loop, take the final input","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"lihka1202"},"content":"                2. could add at the end of each of the exception handlers, this should work fine","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"lihka1202"},"content":"             */","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"lihka1202"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2023-02-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":302,"author":{"gitId":"lihka1202"},"content":"       sayBye();","lastModifiedDate":"2023-02-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lihka1202":293,"-":11}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"public class Events extends Task {","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"    protected String from;","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"    protected String to;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"    Events(String description, String from, String to) {","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + this.getStatusAndDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"//    public void printAddedEvent() {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\t\\t\" + this.getDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"        return from;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"        return to;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"lihka1202"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"lihka1202"},"content":"    public String getStatusAndDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"lihka1202"},"content":"        return \"[E]\" + super.getStatusAndDescription() + \"(from: \" + this.getFrom() + \" to:\" + this.getTo() + \")\";","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"lihka1202":29}},{"path":"src/main/java/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"public class FileHandler {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"    public String filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"    public File dukeFile;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"    FileHandler(String filePath){","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"        this.dukeFile \u003d new File(filePath); //just creates a new file object, not a new file","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"    public void createFile() throws IOException{","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"        if(this.dukeFile.exists()\u003d\u003dfalse) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath); //handle the exception here","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"            fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"    public void addToFile(String toAdd) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"        fw.write(toAdd);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"lihka1202"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"lihka1202"},"content":"    public void clearFile() throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"lihka1202"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"lihka1202"},"content":"        fw.write(\"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"lihka1202"},"content":"        fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"lihka1202":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"public class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"    /** Name of the task **/","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"    /** Boolean to indicate if task is done or not **/","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"lihka1202"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"        return this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"    public String getStatusAndDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"//    public String printAddedTask() {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"lihka1202"},"content":"//","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"lihka1202"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"lihka1202"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"lihka1202"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"lihka1202"},"content":"    public void unMarkTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"lihka1202"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"lihka1202":32}},{"path":"src/main/java/Testing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class Testing {","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"        File f \u003d new File(\"src/main/java/dukeData.txt\");","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"full path: \" + f.getAbsolutePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"file exists?: \" + f.exists());","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"is Directory?: \" + f.isDirectory());","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"lihka1202":11}},{"path":"src/main/java/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"public class Todos extends Task{","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"    Todos(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"        super(description);","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"        System.out.println(\"\\t\\t\" + getStatusAndDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"     * Do not have to worry about","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"     * 1. Lines.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"     * 2. Number of variables in the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"lihka1202"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"lihka1202"},"content":"//    public void printAddedTodo() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"lihka1202"},"content":"//        System.out.println(\"\\t\\t\" + getStatusAndDescription());","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"lihka1202"},"content":"//    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"lihka1202"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"lihka1202"},"content":"    public String getStatusAndDescription() {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"lihka1202"},"content":"        return \"[T]\" + super.getStatusAndDescription();","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"lihka1202"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"lihka1202"},"content":"//random comment","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"lihka1202":24}},{"path":"src/main/java/exceptions/DeadlineIsBlank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class DeadlineIsBlank extends Exception{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/DeadlineMissingPhrase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class DeadlineMissingPhrase extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":7}},{"path":"src/main/java/exceptions/EmptyDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EmptyDeadline extends DukeException {","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":5}},{"path":"src/main/java/exceptions/EmptyEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EmptyEvent extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/EmptyTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EmptyTodo extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":6}},{"path":"src/main/java/exceptions/EventFromIsBlank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EventFromIsBlank extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/EventMissingBothPhrases.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EventMissingBothPhrases extends Exception{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/EventMissingFromPhrase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EventMissingFromPhrase extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/EventMissingToPhrase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EventMissingToPhrase extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"src/main/java/exceptions/EventToIsBlank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"package exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"public class EventToIsBlank extends DukeException{","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"lihka1202":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lihka1202"},"content":"todo borrow book","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"lihka1202"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"lihka1202"},"content":"mark 2","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"lihka1202"},"content":"mark 1","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"lihka1202"},"content":"event go home tomorrow /from today /to tomorrow","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"lihka1202"},"content":"mark 3","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"lihka1202"},"content":"list","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"lihka1202"},"content":"unmark 4","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"lihka1202"},"content":"unmark 6","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"lihka1202"},"content":"unmark 2","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"lihka1202"},"content":"bye","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"lihka1202":11}}]
