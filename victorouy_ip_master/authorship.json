[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"# Duke Program User Guide","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"## Input commands ","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"### Add to task","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"- todo [description]","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"- deadline [description]/[by]","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"- event [description]/[from]/[to]","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"### Manipulate tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"- mark [task number]","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"- delete [task number]","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"### Get tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"- list","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"- find [search]","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"### Exit program","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"- bye","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"-":4,"victorouy":14}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"T|0|hellp","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"D|1|help /monday","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"T|0|fasdfsdaf","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"victorouy":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"# Duke Program User Guide","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"## Input commands ","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"### Add to task","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"- todo [description]","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"- deadline [description]/[by]","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"- event [description]/[from]/[to]","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"### Manipulate tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"- mark [task number]","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"- delete [task number]","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"### Get tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"- list","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"- find [search]","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"### Exit program","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"- bye","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"-":4,"victorouy":14}},{"path":"src/main/java/duke/entity/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.entity;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Parses the user\u0027s inputs by making sense of the user command","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Parser {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    private String input;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    public void setInput(String input) {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"     * Parse the input to find the index of task to be marked","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"     * @return index to be marked","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    public int parseMarkIndex() {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        String stringListNumber \u003d input.substring(5);","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"        return Integer.parseInt(stringListNumber) - 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     * Parse the input to find the index of task to be deleted","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"     * @return index to be deleted","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"    public int parseDeleteIndex() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"        String stringListNumber \u003d input.substring(7);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"        return Integer.parseInt(stringListNumber) - 1;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"     * Parse input to get deadline date","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"     * @return string of deadline date","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"    public String parseDeadlineBy() {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"        return input.substring(input.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"    public String parseEventFrom() {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"        String tempInput \u003d input.substring(input.indexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"        return tempInput.substring(0, tempInput.indexOf(\"/\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"    public String parseEventTo() {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"        String tempInput \u003d input.substring(input.indexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"        return tempInput.substring(tempInput.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"    public boolean validateEventInput() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"        return input.matches(\".*/.*/.*\");","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"victorouy":55}},{"path":"src/main/java/duke/entity/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.entity;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":" * Class used to deal with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"public class Storage {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    private String filePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"     * Load or creates the data file into an array list of task","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"     * @return loaded array list of task","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"     * @throws DukeException if data will not be saved","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"        String[] filePathArr \u003d filePath.split(\"/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"        String tempPath \u003d filePathArr[0];","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 0; i \u003c filePathArr.length; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"            if (i !\u003d 0) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"                tempPath \u003d tempPath + \"/\" + filePathArr[i];","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"            java.nio.file.Path filePath \u003d  getPath(tempPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"            boolean pathExists \u003d java.nio.file.Files.exists(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"            File pathFile \u003d new File(filePath.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"                if (i \u003d\u003d (filePathArr.length - 1) \u0026\u0026 pathExists) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"                    readDukeFile(tasks, pathFile);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"                } else if (!pathExists) {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"                    if (i \u003d\u003d (filePathArr.length - 1)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"                        pathFile.createNewFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"                    } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"                        pathFile.mkdir();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"                    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"victorouy"},"content":"                throw new DukeException(\"Note: data will not be saved (Duke.txt unable to be created)\");","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"        return tasks;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"victorouy"},"content":"    public void updateDukeFile(TaskList taskList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"victorouy"},"content":"        writeDukeFile(taskList.getTask(0), false);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 1; i \u003c taskList.taskSize(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"            writeDukeFile(taskList.getTask(i), true);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"victorouy"},"content":"    public void writeDukeFile(Task task, boolean appendFile) {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"victorouy"},"content":"        String line \u003d (task.getIsDone() ? \"1\" : \"0\") + \"|\" + task.getDescription();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"victorouy"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"victorouy"},"content":"            line \u003d \"T|\" + line;","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"            line \u003d \"D|\" + line;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"            line \u003d \"E|\" + line;","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"victorouy"},"content":"            File dukeFile \u003d new File(getPath(this.filePath).toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"victorouy"},"content":"            FileWriter fw \u003d new FileWriter(dukeFile, appendFile);","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"victorouy"},"content":"            if (appendFile) {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"victorouy"},"content":"                fw.write(\"\\n\" + line);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"victorouy"},"content":"                fw.write(line);","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"victorouy"},"content":"            fw.close();","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"victorouy"},"content":"        } catch (IOException ex) {}","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"victorouy"},"content":"    private void readDukeFile(ArrayList\u003cTask\u003e tasks, File dukeFile) throws FileNotFoundException {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"victorouy"},"content":"        Scanner s \u003d new Scanner(dukeFile);","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"victorouy"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"victorouy"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"victorouy"},"content":"            if (task.length() \u003e 4) {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"victorouy"},"content":"                String taskType \u003d task.substring(0, 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"victorouy"},"content":"                boolean isMarked \u003d task.substring(2, 3).equals(\"0\") ? false : true;","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"victorouy"},"content":"                String taskDesc \u003d task.substring(4);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"victorouy"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Todo(taskDesc, isMarked);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"victorouy"},"content":"                    tasks.add(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"victorouy"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Deadline(taskDesc, taskDesc.substring(taskDesc.lastIndexOf(\"/\") + 1), isMarked);","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"victorouy"},"content":"                    tasks.add(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"victorouy"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"victorouy"},"content":"                    String tempInput \u003d taskDesc.substring(taskDesc.indexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"victorouy"},"content":"                    String fromString \u003d tempInput.substring(0, tempInput.indexOf(\"/\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"victorouy"},"content":"                    String toString \u003d tempInput.substring(tempInput.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Event(taskDesc, fromString, toString, isMarked);","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"victorouy"},"content":"                    tasks.add(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"victorouy"},"content":"    private java.nio.file.Path getPath(String path) {","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"victorouy"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"victorouy"},"content":"        String home \u003d f.getAbsolutePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"victorouy"},"content":"        return java.nio.file.Paths.get(home, path);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"victorouy":122}},{"path":"src/main/java/duke/entity/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.entity;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":" * Contains the task list with operations to manipulate tasks in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"public class TaskList {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"    private ArrayList\u003cTask\u003e taskArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"    public TaskList() {}","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"        this.taskArrayList \u003d taskArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        return taskArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"        return this.taskArrayList.get(index);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"        taskArrayList.add(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"    public int taskSize() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"        return taskArrayList.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"        this.taskArrayList.remove(index);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"     * Searches for tasks in task list that matches a given keyword","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"     * @param keyword string to search for match","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"     * @return contains the found/matched tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"    public ArrayList\u003cTask\u003e findTaskArrayList(String keyword) {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cTask\u003e tempTaskArrayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"        for (Task task : taskArrayList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"            if (task.getDescription().matches(\"(.*)\" + keyword + \"(.*)\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"                tempTaskArrayList.add(task);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"        return tempTaskArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"victorouy":53}},{"path":"src/main/java/duke/entity/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.entity;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":" * Interacts with user and outputs information given a response to users inputs","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"public class Ui {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"     * Takes input from user\u0027s command and processes it depending on their request","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"     * @param storage storage object","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"     * @return true if continue program, false otherwise","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"    public boolean manageInput(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"            this.parser.setInput(input);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"                return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"                listTasks(taskList.getTaskArrayList());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"                selectTask(input, taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"                listTasks(taskList.getTaskArrayList());","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"                storage.updateDukeFile(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"                blankDescription(input);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"                Task tempTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"                taskList.addTask(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"                printAddedTask(tempTask, taskList.taskSize());","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"                storage.writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"deadline\") \u0026\u0026 input.contains(\"/\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"                Task tempTask \u003d new Deadline(input.substring(9), parser.parseDeadlineBy());","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"                taskList.addTask(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"                printAddedTask(tempTask, taskList.taskSize());","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"                storage.writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"event\") \u0026\u0026 parser.validateEventInput()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"                Task tempTask \u003d new Event(input.substring(6), parser.parseEventFrom(), parser.parseEventTo());","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"                taskList.addTask(tempTask);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"                printAddedTask(tempTask, taskList.taskSize());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"                storage.writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"victorouy"},"content":"                selectTask(input, taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"victorouy"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"victorouy"},"content":"                findTasks(input, taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"victorouy"},"content":"                invalidInput();","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"victorouy"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"victorouy"},"content":"            System.out.println(ex.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"        return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"victorouy"},"content":"     * Prints goodbye message","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"victorouy"},"content":"    public void goodbye() {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"victorouy"},"content":"     * Prints greeting message","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"victorouy"},"content":"    public void greetings() {","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"victorouy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"victorouy"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"victorouy"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"victorouy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"victorouy"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"victorouy"},"content":"    private void selectTask(String input, TaskList taskList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"victorouy"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"victorouy"},"content":"                taskList.getTask(parser.parseMarkIndex()).setIsDone(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"victorouy"},"content":"            else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"victorouy"},"content":"                deleteTask(parser.parseDeleteIndex(), taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"victorouy"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"victorouy"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"victorouy"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"victorouy"},"content":"        } catch (NullPointerException ex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"victorouy"},"content":"    private void listTasks(ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 0; i \u003c storedTask.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"            System.out.println((i + 1) + \". \" + storedTask.get(i).toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"victorouy"},"content":"    private void deleteTask(int removeIndex, TaskList taskList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"victorouy"},"content":"                \"       \" + taskList.getTask(removeIndex).toString() + \"\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"victorouy"},"content":"                \"Now you have \" + (taskList.taskSize() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"victorouy"},"content":"        taskList.removeTask(removeIndex);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"victorouy"},"content":"    private void findTasks(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"victorouy"},"content":"        blankDescription(input);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cTask\u003e foundTaskList \u003d taskList.findTaskArrayList(input.substring(5));","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 0; i \u003c foundTaskList.size(); i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"victorouy"},"content":"            System.out.println((i + 1) + \". \" + foundTaskList.get(i).toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"victorouy"},"content":"    private void blankDescription(String input) throws DukeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"victorouy"},"content":"        if (input.length() \u003d\u003d 4 || input.substring(4).isBlank()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"victorouy"},"content":"            throw new DukeException(\"☹ OOPS!!! Must have a description.\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"victorouy"},"content":"    private void invalidInput() throws DukeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"victorouy"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"victorouy"},"content":"    private void printMarkError() {","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"*DID NOT ENTER A VALID NUMBER*\");","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"victorouy"},"content":"    private void printAddedTask(Task task, int counter) {","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"victorouy"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"victorouy":165}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Exception when there is an inputted error or Duke program fails","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"     * Default constructor","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    public DukeException() {}","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"     * Instantiates message","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"     * @param message exception cause","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"     * Overrides toString to include exception message","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"     * @return exception message","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"        return \"____________________________________________________________\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"                + super.getMessage()","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":33}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.main;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"import duke.entity.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"import duke.entity.TaskList;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import duke.entity.Ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":" * Contains the main method where it begins the program and runs the program as the base of the","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":" * Duke program.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"     * Constructor initiates the instance variables given the loaded tasks from the data file","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"     * @param filePath string of the file path where tasks data will be saved","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"     * Starts the program after initializing Duke. Loops through manageInput method which takes in the input and","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"     * outputs results to user until they exit the program","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"    public void run() {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"        ui.greetings();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"        boolean exited \u003d true;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"        while (exited) {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"            exited \u003d ui.manageInput(tasks, storage);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"        ui.goodbye();","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"     * Initializes the instance variable Duke duke and runs the program","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"     * @param args","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"victorouy":51}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Represents a deadline task where a deadline for a task is included","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    protected String by;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"     * Instantiates the deadline task variables","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"     * @param description description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"     * @param by deadline date of task","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"     * Instantiates the deadline task variables","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"     * @param description description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     * @param by deadline date of task","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"     * @param isDone if task is marked as done","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"     * Overrides toString method to return output as shown in list of tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"     * @return string of deadline in listed format","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Represents an event task where there is a from and to date","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    protected String from;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"    protected String to;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"     * Instantiates the event task variables","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"     * @param description description of event","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"     * @param from start date of event","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"     * @param to end date of event","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        this.from \u003d  from;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     * Instantiates the event task variables","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"     * @param description description of event","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"     * @param from start date of event","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"     * @param to end date of event","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"     * @param isDone if task is marked as done","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"        this.from \u003d  from;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"     * Overrides toString method to return output as shown in list of tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"     * @return string of event in listed format","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Task class used to have a text (description) and isDone attributes","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"    protected String description;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"     * Instantiates defaults empty string description and isDone as false","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    public Task() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"     * Instantiates string description and defaults isDone as false","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"     * Instantiates string description and isDone","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"     * Overrides toString method to return output as shown in list of tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"     * @return string of task in listed format","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"        String descriptionNoSlash \u003d (description.indexOf(\"/\") \u003d\u003d -1) ? description : (description.substring(0, description.indexOf(\"/\")));","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"        return \"[\" + ((this.isDone) ? \"X] \" : \" ] \") + descriptionNoSlash;","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"     * Task description getter","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"     * @return description of task","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"        return this.description;","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"     * Task description setter","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"victorouy"},"content":"     * @param description task description","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"victorouy"},"content":"     * Task isDone getter","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"     * @return if task if done","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"victorouy"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"     * Task isDone setter","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"     * @param isDone if task if done","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"victorouy"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"victorouy":80}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * Represents a todo task with a description and isDone","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"     * Instantiates string description and defaults isDone as false","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"     * Instantiates string description and isDone","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"     * Overrides toString method to return output as shown in list of tasks","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"     * @return string of todo in listed format","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"todo assignment 1","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"deadline assignment 2/by monday","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"event assignment 3/tuesday/thursday","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"list","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"mark 3","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.main.Duke.java","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"victorouy":2}}]
