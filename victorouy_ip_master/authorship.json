[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"victorouy":2}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"T|1|","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"T|0|asdf","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"victorouy":2}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"    public DukeException() {}","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"        super(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":13}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.main;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"import java.io.*;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":" * A class that acts as a CLI that keeps tracks of tasks you write and mark down","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"        greetings();","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"        manageInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"        goodbye();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"    private static int selectTask(String echoInput, int counter, ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"            if (echoInput.startsWith(\"mark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"                String stringListNumber \u003d echoInput.substring(5, echoInput.length());","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"                int index \u003d Integer.parseInt(stringListNumber) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"                storedTask.get(index).setIsDone(true);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"                listTasks(counter, storedTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"            else if (echoInput.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"                String stringListNumber \u003d echoInput.substring(7, echoInput.length());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"                int index \u003d Integer.parseInt(stringListNumber) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"                deleteTask(index, storedTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"                return counter - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"        } catch (IndexOutOfBoundsException ex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"        } catch (NullPointerException ex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"            printMarkError();","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"        return counter;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"    private static void deleteTask(int removeIndex, ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"                \"       \" + storedTask.get(removeIndex).toString() + \"\\n\" +","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"                \"Now you have \" + (storedTask.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"victorouy"},"content":"        storedTask.remove(removeIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"    private static void manageInput() throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"victorouy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"victorouy"},"content":"        String input \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cTask\u003e storedTask \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"victorouy"},"content":"        dukeFile(storedTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"        int counter \u003d storedTask.size();","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"            try {","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"victorouy"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"victorouy"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"victorouy"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"victorouy"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"                    listTasks(counter, storedTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"                    selectTask(input, counter, storedTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"                    updateDukeFile(storedTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"victorouy"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"victorouy"},"content":"                    blankTodo(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"victorouy"},"content":"                    counter++;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"victorouy"},"content":"                    printTaskInput(tempTask, counter);","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"victorouy"},"content":"                    writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"victorouy"},"content":"                } else if (input.startsWith(\"deadline\") \u0026\u0026 input.contains(\"/\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Deadline(input.substring(9), input.substring(input.lastIndexOf(\"/\") + 1));","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"victorouy"},"content":"                    counter++;","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"victorouy"},"content":"                    printTaskInput(tempTask, counter);","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"victorouy"},"content":"                    writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"victorouy"},"content":"                } else if (input.startsWith(\"event\") \u0026\u0026 input.matches(\".*/.*/.*\")) {","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"victorouy"},"content":"                    String tempInput \u003d input.substring(input.indexOf(\"/\") + 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"victorouy"},"content":"                    String fromString \u003d tempInput.substring(0, tempInput.indexOf(\"/\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"victorouy"},"content":"                    String toString \u003d tempInput.substring(tempInput.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Event(input.substring(6), fromString, toString);","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"victorouy"},"content":"                    counter++;","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"victorouy"},"content":"                    printTaskInput(tempTask, counter);","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"victorouy"},"content":"                    writeDukeFile(tempTask, true);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"victorouy"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"victorouy"},"content":"                    counter \u003d selectTask(input, counter, storedTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"victorouy"},"content":"                } else {","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"victorouy"},"content":"                    invalidInput();","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"victorouy"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"victorouy"},"content":"                continue;","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"victorouy"},"content":"    private static void updateDukeFile(ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"victorouy"},"content":"        writeDukeFile(storedTask.get(0), false);","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 1; i \u003c storedTask.size(); i++) {","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"victorouy"},"content":"            writeDukeFile(storedTask.get(i), true);","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"victorouy"},"content":"    private static void dukeFile(ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"victorouy"},"content":"        java.nio.file.Path dukeFilePath \u003d getDukeFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"victorouy"},"content":"        boolean fileExists \u003d java.nio.file.Files.exists(dukeFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"victorouy"},"content":"        java.nio.file.Path dataDirPath \u003d getDataDirPath();","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"victorouy"},"content":"        boolean dataDirExists \u003d java.nio.file.Files.exists(dataDirPath);","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"victorouy"},"content":"        java.nio.file.Path srcDirPath \u003d getSrcDirPath();","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"victorouy"},"content":"        boolean drcDirExists \u003d java.nio.file.Files.exists(srcDirPath);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"victorouy"},"content":"        File dukeFile \u003d new File(dukeFilePath.toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"victorouy"},"content":"            if (fileExists) {","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"victorouy"},"content":"                readDukeFile(storedTask, dukeFile);","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"victorouy"},"content":"                if (!drcDirExists) {","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"victorouy"},"content":"                    File srcDir \u003d new File(srcDirPath.toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"victorouy"},"content":"                    srcDir.mkdir();","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"victorouy"},"content":"                if (!dataDirExists) {","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"victorouy"},"content":"                    File dataDir \u003d new File(dataDirPath.toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"victorouy"},"content":"                    dataDir.mkdir();","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"victorouy"},"content":"                dukeFile.createNewFile();","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"victorouy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"victorouy"},"content":"            System.out.println(\"Note: data will not be saved (Duke.txt unable to be created)\");","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"victorouy"},"content":"    private static java.nio.file.Path getDukeFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"victorouy"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"victorouy"},"content":"        String home \u003d f.getAbsolutePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"victorouy"},"content":"        return java.nio.file.Paths.get(home, \"src\", \"data\", \"duke.txt\");","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"victorouy"},"content":"    private static java.nio.file.Path getDataDirPath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"victorouy"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"victorouy"},"content":"        String home \u003d f.getAbsolutePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"victorouy"},"content":"        return java.nio.file.Paths.get(home, \"src\", \"data\");","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"victorouy"},"content":"    private static java.nio.file.Path getSrcDirPath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"victorouy"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"victorouy"},"content":"        String home \u003d f.getAbsolutePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"victorouy"},"content":"        return java.nio.file.Paths.get(home, \"src\");","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"victorouy"},"content":"    private static void readDukeFile(ArrayList\u003cTask\u003e storedTask, File dukeFile) throws FileNotFoundException {","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"victorouy"},"content":"        Scanner s \u003d new Scanner(dukeFile);","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"victorouy"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"victorouy"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"victorouy"},"content":"            if (task.length() \u003e 4) {","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"victorouy"},"content":"                String taskType \u003d task.substring(0, 1);","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"victorouy"},"content":"                boolean isMarked \u003d task.substring(2, 3).equals(\"0\") ? false : true;","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"victorouy"},"content":"                String taskDesc \u003d task.substring(4);","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"victorouy"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Todo(taskDesc, isMarked);","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"victorouy"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Deadline(taskDesc, taskDesc.substring(taskDesc.lastIndexOf(\"/\") + 1), isMarked);","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"victorouy"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"victorouy"},"content":"                    String tempInput \u003d taskDesc.substring(taskDesc.indexOf(\"/\") + 1);","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"victorouy"},"content":"                    String fromString \u003d tempInput.substring(0, tempInput.indexOf(\"/\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"victorouy"},"content":"                    String toString \u003d tempInput.substring(tempInput.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"victorouy"},"content":"                    Task tempTask \u003d new Event(taskDesc, fromString, toString, isMarked);","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"victorouy"},"content":"                    storedTask.add(tempTask);","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"victorouy"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"victorouy"},"content":"    private static void writeDukeFile(Task task, boolean appendFile) {","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"victorouy"},"content":"        String line \u003d (task.getIsDone() ? \"1\" : \"0\") + \"|\" + task.getDescription();","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"victorouy"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"victorouy"},"content":"            line \u003d \"T|\" + line;","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"victorouy"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"victorouy"},"content":"            line \u003d \"D|\" + line;","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"victorouy"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"victorouy"},"content":"            line \u003d \"E|\" + line;","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"victorouy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"victorouy"},"content":"            File dukeFile \u003d new File(getDukeFilePath().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"victorouy"},"content":"            FileWriter fw \u003d new FileWriter(dukeFile, appendFile);","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"victorouy"},"content":"            if (appendFile) {","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"victorouy"},"content":"                fw.write(\"\\n\" + line);","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"victorouy"},"content":"                fw.write(line);","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"victorouy"},"content":"            fw.close();","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"victorouy"},"content":"        } catch (IOException ex) {}","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"victorouy"},"content":"    private static void blankTodo(String input) throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":213,"author":{"gitId":"victorouy"},"content":"        if (input.length() \u003d\u003d 4 || input.substring(4).isBlank()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":214,"author":{"gitId":"victorouy"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":215,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":216,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":217,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":218,"author":{"gitId":"victorouy"},"content":"    private static void invalidInput() throws DukeException {","lastModifiedDate":"2023-02-08"},{"lineNumber":219,"author":{"gitId":"victorouy"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":220,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":221,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":222,"author":{"gitId":"victorouy"},"content":"    private static void listTasks(int counter, ArrayList\u003cTask\u003e storedTask) {","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-08"},{"lineNumber":224,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-08"},{"lineNumber":225,"author":{"gitId":"victorouy"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-02-08"},{"lineNumber":226,"author":{"gitId":"victorouy"},"content":"            System.out.println((i + 1) + \". \" + storedTask.get(i).toString());","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":228,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":229,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":230,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":231,"author":{"gitId":"victorouy"},"content":"    private static void printMarkError() {","lastModifiedDate":"2023-02-08"},{"lineNumber":232,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-08"},{"lineNumber":233,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"*DID NOT ENTER A VALID NUMBER*\");","lastModifiedDate":"2023-02-08"},{"lineNumber":234,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":235,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":236,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":237,"author":{"gitId":"victorouy"},"content":"    private static void printTaskInput(Task task, int counter) {","lastModifiedDate":"2023-02-08"},{"lineNumber":238,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-08"},{"lineNumber":239,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-08"},{"lineNumber":240,"author":{"gitId":"victorouy"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":241,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-02-08"},{"lineNumber":242,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":243,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":244,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"victorouy"},"content":"    private static void greetings() {","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":253,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-04"},{"lineNumber":254,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":255,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":256,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":257,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":258,"author":{"gitId":"victorouy"},"content":"    private static void goodbye() {","lastModifiedDate":"2023-02-01"},{"lineNumber":259,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":260,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":261,"author":{"gitId":"victorouy"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"victorouy":254}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"    protected String by;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"    protected String from;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"    protected String to;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"        this.from \u003d  from;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"        this.from \u003d  from;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":" * duke.task.Task class used to have a text (description) and isDone attributes","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"public class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"    protected String description;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    public Task() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"victorouy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"        String descriptionNoSlash \u003d (description.indexOf(\"/\") \u003d\u003d -1) ? description : (description.substring(0, description.indexOf(\"/\")));","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"victorouy"},"content":"        return \"[\" + ((this.isDone) ? \"X] \" : \" ] \") + descriptionNoSlash;","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"victorouy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"victorouy"},"content":"        return this.description;","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"victorouy"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"victorouy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"victorouy":47}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"package duke.task;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"        super(description);","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"victorouy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"        super(description, isDone);","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"victorouy"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"victorouy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"victorouy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"victorouy"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"victorouy"},"content":"todo assignment 1","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"victorouy"},"content":"deadline assignment 2/by monday","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"victorouy"},"content":"event assignment 3/tuesday/thursday","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"victorouy"},"content":"list","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"mark 3","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"victorouy":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"victorouy"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.main.Duke.java","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"victorouy"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"victorouy":2}}]
