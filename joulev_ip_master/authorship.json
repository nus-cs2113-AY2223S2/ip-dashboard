[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"# Archduke","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"This is a school project for [CS2113 AY2022–23 Semester 2](https://nus-cs2113-ay2223s2.github.io/website/admin/ip-overview.html).","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"Current output (as of Level 8):","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"│                                   __        __      __                       │","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"│                  ____ ___________/ /_  ____/ /_  __/ /_____                  │","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"│                 / __ `/ ___/ ___/ __ \\/ __  / / / / //_/ _ \\                 │","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"│                / /_/ / /  / /__/ / / / /_/ / /_/ / ,\u003c /  __/                 │","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"│                \\__,_/_/   \\___/_/ /_/\\__,_/\\__,_/_/|_|\\___/                  │","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"│                                                                              │","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"│ Hello! I\u0027m Archduke. What do you want to do?                                 │","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"\u003e invalid-command","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"│ ERROR: Unknown command: \"invalid-command\". Please try again.                 │","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"\u003e list","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"│ Here are your tasks:                                                         │","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"│ You have 0 task(s) in the list.                                              │","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"\u003e todo read tenten kakumei","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"│ Added task:                                                                  │","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"│   T □ read tenten kakumei                                                    │","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"│ You now have 1 task(s) in the list.                                          │","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"\u003e list","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"│ Here are your tasks:                                                         │","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"│   T □ read tenten kakumei                                                    │","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"│ You have 1 task(s) in the list.                                              │","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"\u003e deadline watch tenten kakumei #5 /by 08/02/2023 21:00:00","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"│ Added task:                                                                  │","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"│   D □ watch tenten kakumei #5 (by: Feb 8 2023, 9:00:00 pm)                   │","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"│ You now have 2 task(s) in the list.                                          │","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"\u003e event tenten kakumei #6 /from 08/02/2023 21:00:00 /to 08/02/2023 21:30:00","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"│ Added task:                                                                  │","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"│   E □ tenten kakumei #6 (from: Feb 8 2023, 9:00:00 pm; to: Feb 8 2023,       │","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"│ 9:30:00 pm)                                                                  │","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"│ You now have 3 task(s) in the list.                                          │","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"\u003e mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"│ The following task has been marked as done                                   │","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"│   T ■ read tenten kakumei                                                    │","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"\u003e mark 2","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"│ The following task has been marked as done                                   │","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"│   D ■ watch tenten kakumei #5 (by: Feb 8 2023, 9:00:00 pm)                   │","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"\u003e unmark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"│ The following task has been marked as undone                                 │","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"│   T □ read tenten kakumei                                                    │","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"\u003e list","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"│ Here are your tasks:                                                         │","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"│   T □ read tenten kakumei                                                    │","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"│   D ■ watch tenten kakumei #5 (by: Feb 8 2023, 9:00:00 pm)                   │","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"│   E □ tenten kakumei #6 (from: Feb 8 2023, 9:00:00 pm; to: Feb 8 2023,       │","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"│ 9:30:00 pm)                                                                  │","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"│ You have 3 task(s) in the list.                                              │","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"\u003e delete 1","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"│ The following task has been deleted:                                         │","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"│   T □ read tenten kakumei                                                    │","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"│ You now have 2 task(s) in the list.                                          │","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"\u003e list","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"│ Here are your tasks:                                                         │","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"│   D ■ watch tenten kakumei #5 (by: Feb 8 2023, 9:00:00 pm)                   │","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"│   E □ tenten kakumei #6 (from: Feb 8 2023, 9:00:00 pm; to: Feb 8 2023,       │","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"│ 9:30:00 pm)                                                                  │","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"│ You have 2 task(s) in the list.                                              │","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"\u003e bye","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"╭──────────────────────────────────────────────────────────────────────────────╮","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"│ Bye. Hope to see you again soon!                                             │","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"╰──────────────────────────────────────────────────────────────────────────────╯","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joulev":104,"-":2}},{"path":"app/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"/*","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * This generated file contains a sample Java application project to get you started.","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * For more details take a look at the \u0027Building Java \u0026 JVM projects\u0027 chapter in the Gradle","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"plugins {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    // Apply the application plugin to add support for building a CLI application in Java.","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"shadowJar {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    archiveBaseName.set(\u0027archduke\u0027)","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    archiveClassifier.set(\u0027\u0027)","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    archiveVersion.set(\u00270.1\u0027)","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"repositories {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    // Use Maven Central for resolving dependencies.","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    mavenCentral()","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"dependencies {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    // Use JUnit Jupiter for testing.","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.9.1\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    // This dependency is used by the application.","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    implementation \u0027com.google.guava:guava:31.1-jre\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"application {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    // Define the main class for the application.","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"    mainClass \u003d \u0027dev.joulev.archduke.Archduke\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"tasks.named(\u0027test\u0027) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    // Use JUnit Platform for unit tests.","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"run {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":47}},{"path":"app/src/main/java/dev/joulev/archduke/Archduke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.commands.Command;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.commands.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ParserException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ParserException.ParserExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException.UserInputExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.io.In;","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.io.Out;","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Store;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.ToDo;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Deadline;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Event;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"public class Archduke {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    private static In in;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    private static Store store;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    private static void handleCasesWhereSomethingHasGoneHorriblyWrong() {","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        System.out.println(","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"                \"Something has gone horribly wrong. Contact @joulev on GitHub immediately.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    private static void addTask(Task task) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        store.addTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        Out.printTaskAddition(task, store.getTaskCount());","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    private static void toggleTaskCompleteness(String body) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"            int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"            store.toggleTaskCompleteness(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"            Out.printTaskCompleteness(store, index);","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.INDEX_IS_NOT_A_NUMBER);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.INDEX_IS_OUT_OF_BOUNDS,","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"                    Integer.toString(store.getTaskCount()));","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    private static void deleteTask(String body) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            int index \u003d Integer.parseInt(body) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"            Task task \u003d store.getTask(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"            store.deleteTask(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"            Out.printTaskDeletion(task, store.getTaskCount());","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.INDEX_IS_NOT_A_NUMBER);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.INDEX_IS_OUT_OF_BOUNDS,","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"                    Integer.toString(store.getTaskCount()));","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        in \u003d new In();","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        store \u003d new Store();","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"            Out.greet();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"        } catch (ArchdukeException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"            handleCasesWhereSomethingHasGoneHorriblyWrong();","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"        while (true) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"                Command command \u003d Parser.parse(in.readUserInput());","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"                String type \u003d command.getType();","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"                switch (type) {","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"                case \"list\":","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"                    Out.printTasks(store);","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"                case \"find\":","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"                    Out.printQueriedTasks(store, command.getBody());","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"                    toggleTaskCompleteness(command.getBody());","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"                case \"delete\":","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"                    deleteTask(command.getBody());","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"                    addTask(new ToDo(command.getBody()));","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"                    addTask(new Deadline(command.getBody(), command.getBy()));","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"                case \"event\":","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"                    addTask(new Event(command.getBody(), command.getFrom(), command.getTo()));","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"                    continue;","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"                    Out.bye();","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"                    return;","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"                    throw new ParserException(ParserExceptionCode.UNKNOWN_COMMAND, type);","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"            } catch (ArchdukeException exception) {","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"                try {","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"                    Out.printError(exception.getErrorString());","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"                } catch (ArchdukeException somethingHasGoneHorriblyWrong) {","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"joulev"},"content":"                    handleCasesWhereSomethingHasGoneHorriblyWrong();","lastModifiedDate":"2023-02-04"},{"lineNumber":108,"author":{"gitId":"joulev"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":109,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joulev":111,"-":1}},{"path":"app/src/main/java/dev/joulev/archduke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * This class represents a command that the user has inputted. It contains the","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * main command type, the body and the supported options ({@code /from},","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * {@code /to} and {@code /by}), all in the form of strings.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    /** The main command type. Guaranteeed to be non-null. */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    private String type;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    /** The body of the command. Can be null. */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    private String body;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    /** The value of option {@code /from}, if any. */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    private String from;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    /** The value of option {@code /to}, if any. */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    private String to;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    /** The value of option {@code /by}, if any. */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    private String by;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Command} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * @param type The main command type","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     * @param body The body of the command, may be null","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     * @param from The value of option {@code /from}, may be null","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * @param to   The value of option {@code /to}, may be null","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     * @param by   The value of option {@code /by}, may be null","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    public Command(String type, String body, String from, String to, String by) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        this.body \u003d body;","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"    public String getType() {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        return type;","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    public String getBody() {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        return body;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        return from;","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"        return to;","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"    public String getBy() {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"        return by;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        return String.format(\"Command[type\u003d%s, body\u003d%s, from\u003d%s, to\u003d%s, by\u003d%s]\", type, body, from,","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"                to, by);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":62}},{"path":"app/src/main/java/dev/joulev/archduke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.commands;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ParserException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ParserException.ParserExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" * This class implements a static parser {@link #parse} that can parse the user","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":" * input in a safe way into a format that the program can programmatically","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * understand.","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"public class Parser {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"     * Safely parses the user input into a {@link Command} object. The format is","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"     * similar to a Windows command prompt format, for historical reasons. Format:","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"     * {@code cmd-type cmd body /opt1 option 1 value /opt2 option 2 value}...","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"     * @param input The input provided by the user","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"     * @return A {@link Command} object that contains the parsed information, with","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     *         the main command, the body (if any) and the supported options","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     *         ({@code /from}, {@code /to} and {@code /by}) (if any).","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the input is invalid, contains unknown option(s)","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     *                           or otherwise cannot be parsed.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    public static Command parse(String input) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        String[] options \u003d input.split(\" /\");","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        // Separating the main command from the parameters aka the body","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        String[] components \u003d options[0].split(\" \", 2);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        String type \u003d components[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        String body \u003d components.length \u003e 1 ? components[1] : null;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        String from \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        String to \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        String by \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 1; i \u003c options.length; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            String[] option \u003d options[i].split(\" \", 2);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"            String optionName \u003d option[0];","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"            String optionValue \u003d option.length \u003e 1 ? option[1] : null;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"            switch (optionName) {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"            case \"from\":","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"                from \u003d optionValue;","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"            case \"to\":","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"                to \u003d optionValue;","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"            case \"by\":","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"                by \u003d optionValue;","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"                break;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            default:","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"                throw new ParserException(ParserExceptionCode.UNKNOWN_OPTION, optionName);","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        if (type !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"            type \u003d type.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        if (body !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"            body \u003d body.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"        if (from !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"            from \u003d from.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"        if (to !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"            to \u003d to.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"            by \u003d by.trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        return new Command(type, body, from, to, by);","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":75}},{"path":"app/src/main/java/dev/joulev/archduke/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.datetime;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException.UserInputExceptionCode;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * This class provides static methods to handle date-time parsing and","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" * formatting.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"public class DateTime {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    public static final String INPUT_PATTERN \u003d \"dd/MM/yyyy HH:mm:ss\";","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    public static final String EXAMPLE \u003d \"01/01/2021 23:59:59\";","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public static final String OUTPUT_PATTERN \u003d \"MMM d yyyy, h:mm:ss a\";","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(INPUT_PATTERN);","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    private static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_PATTERN);","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     * Parses a date-time string from user input or stored file to a","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * {@code LocalDateTime} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     * @param dateTime The input string.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the input string is not in the correct format.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    public static LocalDateTime parse(String dateTime) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"            return LocalDateTime.parse(dateTime, inputFormatter);","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.MALFORMED_DATETIME, dateTime);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"     * Formats a {@code LocalDateTime} object to a string for display.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"     * @param dateTime The {@code LocalDateTime} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"    public static String display(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        return dateTime.format(outputFormatter);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"     * Formats a {@code LocalDateTime} object to a string for saving to file.","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"     * @param dateTime The {@code LocalDateTime} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public static String formatForSave(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        // We use the same format as the input format, as this exact string will be used","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        // later as input when we parse the date-time string from the file.","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        return dateTime.format(inputFormatter);","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":62}},{"path":"app/src/main/java/dev/joulev/archduke/exceptions/ArchdukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * An abstract class that represents all exceptions that can be thrown by","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * {@link Archduke}. The program will catch this exception and print the error","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * accordingly, without having to check the type of each individual exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public abstract class ArchdukeException extends Exception {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public ArchdukeException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        super(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"     * Gets a user-friendly error string that will be printed to the terminal.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"     * @return The error string","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"     * @throws UnknownException If any exception is unknown","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public abstract String getErrorString() throws UnknownException;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"joulev":20}},{"path":"app/src/main/java/dev/joulev/archduke/exceptions/OtherException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.exceptions;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * This class represents any exceptions that are not due to program bugs and","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * user input, but are still known to the program and can be handled. Example:","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * failure in accessing the file system.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public class OtherException extends ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link OtherException} exception. We simply pass the error","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"     * message to the superclass.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"     * @param message The error message","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public OtherException(String message) {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        super(message);","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public String getErrorString() {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        return getMessage();","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":22}},{"path":"app/src/main/java/dev/joulev/archduke/exceptions/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * This class represents any exceptions that are thrown in the parser caused by","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * malformed or invalid user input. See {@link ParserExceptionCode} for the list","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * of possible error codes.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public class ParserException extends ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public enum ParserExceptionCode {","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        UNKNOWN_COMMAND, UNKNOWN_OPTION,","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    ParserExceptionCode code;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    String payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link ParserException} exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"     * @param code    The code of the exception (see {@link ParserExceptionCode}).","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     * @param payload The payload of the exception which might be used for the error","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     *                message string. For {@link #UNKNOWN_COMMAND}, the payload is","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     *                the unknown command in question. For {@link #UNKNOWN_OPTION},","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     *                the payload is the unknown option.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    public ParserException(ParserExceptionCode code, String payload) {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        super(\"Parser failed with code \" + code + \".\");","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        this.payload \u003d payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link ParserException} exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * @param code    The code of the exception (see {@link ParserExceptionCode}).","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     * @param payload The payload of the exception which might be used for the error","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     *                message string. For {@link #UNKNOWN_COMMAND}, the payload is","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     *                the unknown command in question. For {@link #UNKNOWN_OPTION},","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"     *                the payload is the unknown option.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"     * @param message The error message (if any).","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    public ParserException(ParserExceptionCode code, String payload, String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        super(\"Parser failed with code \" + code + \": \" + message);","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        this.payload \u003d payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"    public String getErrorString() throws UnknownException {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        switch (code) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        case UNKNOWN_COMMAND:","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"            return String.format(\"Unknown command: \\\"%s\\\". Please try again.\", payload);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        case UNKNOWN_OPTION:","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            return String.format(\"Unknown option: \\\"%s\\\". Please try again.\", payload);","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"            throw new UnknownException(\"ParserException; code \u003d \" + code);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"joulev":57}},{"path":"app/src/main/java/dev/joulev/archduke/exceptions/UnknownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * This class represents any exceptions that are likely caused by an Archduke","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"public class UnknownException extends ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link UnknownException} exception. We simply pass the error","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"     * message to the superclass.","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"     * @param message The error message","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    public UnknownException(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        super(message);","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    public String getErrorString() {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"        return \"An unknown error has occurred. It is likely a bug. Please report it to @joulev on GitHub with the following message: \\\"\"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"                + getMessage() + \"\\\".\";","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"joulev":22}},{"path":"app/src/main/java/dev/joulev/archduke/exceptions/UserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.exceptions;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.datetime.DateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * This class represents any exceptions that caused by syntactically correct","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" * user input that has invalid values. See {@link UserInputExceptionCode} for","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" * the list of possible error codes.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"public class UserInputException extends ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    public enum UserInputExceptionCode {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        TASK_DESCRIPTION_IS_EMPTY, TODO_FROM_IS_EMPTY, TODO_TO_IS_EMPTY, DEADLINE_BY_IS_EMPTY,","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"        INDEX_IS_NOT_A_NUMBER, INDEX_IS_OUT_OF_BOUNDS, MALFORMED_DATETIME","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    UserInputExceptionCode code;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    String payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link UserInputException} exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * @param code The code of the exception (see {@link UserInputExceptionCode}).","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    public UserInputException(UserInputExceptionCode code) {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        super(\"User input is invalid with code \" + code + \".\");","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link UserInputException} exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * @param code    The code of the exception (see","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     *                {@link UserInputExceptionCode}).","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * @param payload The payload of the exception which might be used for the error","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     *                message string. For {@link #INDEX_IS_OUT_OF_BOUNDS}, the","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     *                payload is the number of tasks in the task list.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"    public UserInputException(UserInputExceptionCode code, String payload) {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        super(\"User input is invalid with code \" + code + \".\");","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        this.payload \u003d payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link UserInputException} exception.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"     * @param code    The code of the exception (see","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"     *                {@link UserInputExceptionCode}).","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"     * @param payload The payload of the exception which might be used for the error","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"     *                message string. For {@link #INDEX_IS_OUT_OF_BOUNDS}, the","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"     *                payload is the number of tasks in the task list.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"     * @param message The error message (if any).","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    public UserInputException(UserInputExceptionCode code, String payload, String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        super(\"User input is invalid with code \" + code + \": \" + message);","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        this.payload \u003d payload;","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    public String getErrorString() throws UnknownException {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        switch (code) {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"        case TASK_DESCRIPTION_IS_EMPTY:","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"            return \"The description of a task cannot be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"        case TODO_FROM_IS_EMPTY:","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"            return \"The \\\"from\\\" field of a todo item cannot be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"        case TODO_TO_IS_EMPTY:","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"            return \"The \\\"to\\\" field of a todo item cannot be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"        case DEADLINE_BY_IS_EMPTY:","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"            return \"The \\\"by\\\" field of a deadline item cannot be empty.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        case INDEX_IS_NOT_A_NUMBER:","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"            return \"The index of the task must be a number.\";","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        case INDEX_IS_OUT_OF_BOUNDS:","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"            try {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"                int taskCount \u003d Integer.parseInt(payload);","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"                if (taskCount \u003d\u003d 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"                    return String.format(","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"                            \"The index of the task is out of bounds. There is 1 task in the list.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"                return String.format(","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"                        \"The index of the task is out of bounds. There are %d tasks in the list.\",","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"                        taskCount);","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"                throw new UnknownException(\"UserInputException; code \u003d NumberFormatException\");","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"        case MALFORMED_DATETIME:","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"            return String.format(","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"                    \"The date and time you entered is not in the correct format. The only allowed format is %s. (Example: %s)\",","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"                    DateTime.INPUT_PATTERN, DateTime.EXAMPLE);","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"            throw new UnknownException(\"UserInputException; code \u003d \" + code);","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"joulev":93}},{"path":"app/src/main/java/dev/joulev/archduke/io/BoxDrawingCharacter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.io;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * The box drawing characters used to make decent boxes in the terminal","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * ","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * @see {@link https://en.wikipedia.org/wiki/Box-drawing_character}","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public class BoxDrawingCharacter {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    // ╭─╮","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    // │ │","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    // ╰─╯","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    public static final char HORIZONTAL_LINE \u003d \u0027─\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    public static final char VERTICAL_LINE \u003d \u0027│\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    public static final char TOP_LEFT_CORNER \u003d \u0027╭\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public static final char TOP_RIGHT_CORNER \u003d \u0027╮\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    public static final char BOTTOM_LEFT_CORNER \u003d \u0027╰\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    public static final char BOTTOM_RIGHT_CORNER \u003d \u0027╯\u0027;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joulev":18}},{"path":"app/src/main/java/dev/joulev/archduke/io/In.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.io;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * This class handles all input from the user.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"public class In {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"     * Initializes the input handler.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    public In() {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"     * Reads the user input until the end of the line and returns the input as","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     * string. However this function also prints a prompt character to make it looks","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * hackerish, in non-testing environment (if {@code TESTING} environment","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * variable is not present).","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     * @return The user input as a string, not including the newline character.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    public String readUserInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        if (System.getenv(\"TESTING\") \u003d\u003d null) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":32}},{"path":"app/src/main/java/dev/joulev/archduke/io/Out.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.io;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UnknownException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Store;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":" * This class handles (prettified) output to the terminal.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"public class Out {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"     * The width of the box to be printed to the terminal, inclusive of border and","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"     * margin.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    private static final int BOX_WIDTH \u003d 80;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    private static void printLineWithDelim(char leftDelim, char rightDelim) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"        System.out.print(leftDelim);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c BOX_WIDTH - 2; i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"            System.out.print(BoxDrawingCharacter.HORIZONTAL_LINE);","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        System.out.println(rightDelim);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    private static void printBoxTopBorder() {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        printLineWithDelim(BoxDrawingCharacter.TOP_LEFT_CORNER,","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"                BoxDrawingCharacter.TOP_RIGHT_CORNER);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    private static void printBoxBottomBorder() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        printLineWithDelim(BoxDrawingCharacter.BOTTOM_LEFT_CORNER,","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"                BoxDrawingCharacter.BOTTOM_RIGHT_CORNER);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"    private static void printBoxBottomBorder(boolean withBottomMargin) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        printLineWithDelim(BoxDrawingCharacter.BOTTOM_LEFT_CORNER,","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"                BoxDrawingCharacter.BOTTOM_RIGHT_CORNER);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        if (withBottomMargin) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"            System.out.println(\"\");","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    private static void printBoxRightBorder(int unusedSpace) {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        // \u0027\u003c\u003d\u0027 not \u0027\u003c\u0027 since we also have one space as padding","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c\u003d unusedSpace; i++) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"            System.out.print(\u0027 \u0027);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"        System.out.println(BoxDrawingCharacter.VERTICAL_LINE);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"     * Prints the logo with padding and all.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"     * @see {@link https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dSlant\u0026t\u003darchduke}","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    private static void printLogo() {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        String left \u003d BoxDrawingCharacter.VERTICAL_LINE + \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        String right \u003d \" \" + BoxDrawingCharacter.VERTICAL_LINE + \"\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        String[] lines \u003d { \"                   __        __      __      \",","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"                \"  ____ ___________/ /_  ____/ /_  __/ /_____ \",","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"                \" / __ `/ ___/ ___/ __ \\\\/ __  / / / / //_/ _ \\\\\",","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"                \"/ /_/ / /  / /__/ / / / /_/ / /_/ / ,\u003c /  __/\",","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"                \"\\\\__,_/_/   \\\\___/_/ /_/\\\\__,_/\\\\__,_/_/|_|\\\\___/ \",","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"                \"                                             \" };","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"        int lineLength \u003d lines[0].length();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"        int availableSpace \u003d BOX_WIDTH - lineLength - 4;","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"        int leftPadding \u003d availableSpace / 2;","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        int rightPadding \u003d availableSpace - leftPadding;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"            System.out.print(left);","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"            for (int j \u003d 0; j \u003c leftPadding; j++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"                System.out.print(\u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"            System.out.print(line);","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"            for (int j \u003d 0; j \u003c rightPadding; j++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"                System.out.print(\u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"            System.out.print(right);","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"     * Prints a string inside a box, with box left and right borders at the start","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"     * and end of the line. The line automatically wraps around if necessary. This","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"     * assumes the box top and bottom borders are already drawn using","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"     * {@link #printBoxTopBorder} and {@link #printBoxBottomBorder}.","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"     * The parameters of this method is similar to {@code System.out.printf}.","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"     * @param format The string to print, with optional format specifiers.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"     * @param args   The arguments to be formatted and substituted.","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If there is an error in formatting the string.","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"    public static void printf(String format, Object... args) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"        // Two chars for the borders, two chars for the padding, hence four chars gone.","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"        int maxStringWidth \u003d BOX_WIDTH - 4;","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"        String input;","lastModifiedDate":"2023-02-04"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"            input \u003d String.format(format, args);","lastModifiedDate":"2023-02-04"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"            throw new UnknownException(\"Out.printf; code \u003d formatInput\");","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"joulev"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"joulev"},"content":"        int currentLineLength \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"joulev"},"content":"        System.out.print(BoxDrawingCharacter.VERTICAL_LINE + \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"joulev"},"content":"        for (String word : words) {","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"joulev"},"content":"            if (word.length() \u003e maxStringWidth) {","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"joulev"},"content":"                word \u003d word.substring(0, maxStringWidth - 3) + \"...\";","lastModifiedDate":"2023-02-04"},{"lineNumber":114,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"joulev"},"content":"            if (currentLineLength + word.length() \u003e maxStringWidth) {","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"joulev"},"content":"                printBoxRightBorder(maxStringWidth - currentLineLength);","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"joulev"},"content":"                System.out.print(BoxDrawingCharacter.VERTICAL_LINE + \" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"joulev"},"content":"                currentLineLength \u003d 0;","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"joulev"},"content":"            System.out.print(word + \u0027 \u0027);","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"joulev"},"content":"            currentLineLength +\u003d word.length() + 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"joulev"},"content":"        printBoxRightBorder(maxStringWidth - currentLineLength);","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"joulev"},"content":"     * Prints a string inside a box.","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"joulev"},"content":"     * @param format The string to print, with optional format specifiers.","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"joulev"},"content":"     * @param args   The arguments to be formatted and substituted.","lastModifiedDate":"2023-02-06"},{"lineNumber":131,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If there is an error in formatting the string.","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"joulev"},"content":"    public static void printBox(String format, Object... args) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"joulev"},"content":"        printf(format, args);","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":138,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":139,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"joulev"},"content":"     * Prints the greeting message.","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"joulev"},"content":"    public static void greet() throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":146,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"joulev"},"content":"        printLogo();","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"joulev"},"content":"        printf(\"Hello! I\u0027m Archduke. What do you want to do?\");","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":153,"author":{"gitId":"joulev"},"content":"     * Says goodbye.","lastModifiedDate":"2023-02-06"},{"lineNumber":154,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":155,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":156,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":157,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":158,"author":{"gitId":"joulev"},"content":"    public static void bye() throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":159,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":160,"author":{"gitId":"joulev"},"content":"        printf(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-28"},{"lineNumber":161,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder(false);","lastModifiedDate":"2023-01-28"},{"lineNumber":162,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":163,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":164,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":165,"author":{"gitId":"joulev"},"content":"     * Prints an error message. Of course, inside a box.","lastModifiedDate":"2023-02-06"},{"lineNumber":166,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"joulev"},"content":"     * @param format The string to print, with optional format specifiers.","lastModifiedDate":"2023-02-06"},{"lineNumber":168,"author":{"gitId":"joulev"},"content":"     * @param args   The arguments to be formatted and substituted.","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If there is an error in formatting the string.","lastModifiedDate":"2023-02-06"},{"lineNumber":170,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":171,"author":{"gitId":"joulev"},"content":"    public static void printError(String format, Object... args) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"joulev"},"content":"        printBox(\"ERROR: %s\", String.format(format, args));","lastModifiedDate":"2023-01-28"},{"lineNumber":173,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":174,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":175,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":176,"author":{"gitId":"joulev"},"content":"     * Prints the tasks currently present.","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":178,"author":{"gitId":"joulev"},"content":"     * @param store The {@link Store} to get the tasks from.","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":182,"author":{"gitId":"joulev"},"content":"    public static void printTasks(Store store) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"joulev"},"content":"        printf(\"Here are your tasks:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"joulev"},"content":"        store.listTasks();","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":190,"author":{"gitId":"joulev"},"content":"     * Prints the tasks that match a query string.","lastModifiedDate":"2023-02-06"},{"lineNumber":191,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"joulev"},"content":"     * @param store The {@link Store} to get the tasks from.","lastModifiedDate":"2023-02-06"},{"lineNumber":193,"author":{"gitId":"joulev"},"content":"     * @param query The query string.","lastModifiedDate":"2023-02-06"},{"lineNumber":194,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":195,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":196,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":197,"author":{"gitId":"joulev"},"content":"    public static void printQueriedTasks(Store store, String query) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":198,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-02-05"},{"lineNumber":199,"author":{"gitId":"joulev"},"content":"        printf(\"Here are the tasks I found:\");","lastModifiedDate":"2023-02-05"},{"lineNumber":200,"author":{"gitId":"joulev"},"content":"        store.queryTasks(query);","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-02-05"},{"lineNumber":202,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":203,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":204,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":205,"author":{"gitId":"joulev"},"content":"     * Prints the acknowledgement message on task addition.","lastModifiedDate":"2023-02-06"},{"lineNumber":206,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":207,"author":{"gitId":"joulev"},"content":"     * @param task      The {@link Task} that was added.","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"joulev"},"content":"     * @param storeSize The size of the {@link Store} after the addition.","lastModifiedDate":"2023-02-06"},{"lineNumber":209,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":210,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":211,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":212,"author":{"gitId":"joulev"},"content":"    public static void printTaskAddition(Task task, int storeSize) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":213,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":214,"author":{"gitId":"joulev"},"content":"        printf(\"Added task:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":215,"author":{"gitId":"joulev"},"content":"        printf(\"  %s\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":216,"author":{"gitId":"joulev"},"content":"        printf(\"You now have %d task(s) in the list.\", storeSize);","lastModifiedDate":"2023-01-28"},{"lineNumber":217,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":218,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":219,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":220,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":221,"author":{"gitId":"joulev"},"content":"     * Prints the acknowledgement message on toggle of a task\u0027s completion status.","lastModifiedDate":"2023-02-06"},{"lineNumber":222,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":223,"author":{"gitId":"joulev"},"content":"     * @param store The {@link Store} to get the tasks from.","lastModifiedDate":"2023-02-06"},{"lineNumber":224,"author":{"gitId":"joulev"},"content":"     * @param index The index of the task to be toggled.","lastModifiedDate":"2023-02-06"},{"lineNumber":225,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":226,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":227,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"joulev"},"content":"    public static void printTaskCompleteness(Store store, int index) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":229,"author":{"gitId":"joulev"},"content":"        Task task \u003d store.getTask(index);","lastModifiedDate":"2023-01-28"},{"lineNumber":230,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":231,"author":{"gitId":"joulev"},"content":"        printf(\"The following task has been marked as %s\", task.isCompleted() ? \"done\" : \"undone\");","lastModifiedDate":"2023-01-28"},{"lineNumber":232,"author":{"gitId":"joulev"},"content":"        printf(\"  %s\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":233,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-01-28"},{"lineNumber":234,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":235,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":236,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":237,"author":{"gitId":"joulev"},"content":"     * Prints the acknowledgement message on task deletion.","lastModifiedDate":"2023-02-06"},{"lineNumber":238,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":239,"author":{"gitId":"joulev"},"content":"     * @param task      The {@link Task} that was deleted.","lastModifiedDate":"2023-02-06"},{"lineNumber":240,"author":{"gitId":"joulev"},"content":"     * @param storeSize The size of the {@link Store} after the deletion.","lastModifiedDate":"2023-02-06"},{"lineNumber":241,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If string format fails. This should not happen, if","lastModifiedDate":"2023-02-06"},{"lineNumber":242,"author":{"gitId":"joulev"},"content":"     *                           it happens it\u0027s a bug.","lastModifiedDate":"2023-02-06"},{"lineNumber":243,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":244,"author":{"gitId":"joulev"},"content":"    public static void printTaskDeletion(Task task, int storeSize) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":245,"author":{"gitId":"joulev"},"content":"        printBoxTopBorder();","lastModifiedDate":"2023-02-04"},{"lineNumber":246,"author":{"gitId":"joulev"},"content":"        printf(\"The following task has been deleted:\");","lastModifiedDate":"2023-02-04"},{"lineNumber":247,"author":{"gitId":"joulev"},"content":"        printf(\"  %s\", task.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":248,"author":{"gitId":"joulev"},"content":"        printf(\"You now have %d task(s) in the list.\", storeSize);","lastModifiedDate":"2023-02-04"},{"lineNumber":249,"author":{"gitId":"joulev"},"content":"        printBoxBottomBorder();","lastModifiedDate":"2023-02-04"},{"lineNumber":250,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":251,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joulev":251}},{"path":"app/src/main/java/dev/joulev/archduke/storage/SavedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UnknownException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.ToDo;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":" * A different version of {@link Task} that is used for storage, as we need a","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * uniform schema for all different types of tasks to parse in and from the","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" * storage file.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"public class SavedTask {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    public static final String TODO_IDENTIFIER \u003d \"T\";","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    public static final String EVENT_IDENTIFIER \u003d \"E\";","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    public static final String DEADLINE_IDENTIFIER \u003d \"D\";","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    private String type;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    private String description;","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    private String from;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    private String to;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    private String by;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link SavedTask} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * @param type        The type of the task. Possible values are","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     *                    {@link #TODO_IDENTIFIER}, {@link #EVENT_IDENTIFIER}, and","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     *                    {@link #DEADLINE_IDENTIFIER}.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * @param description","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * @param isCompleted","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     * @param from","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     * @param to","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     * @param by","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    public SavedTask(String type, String description, boolean isCompleted, String from, String to,","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"            String by) {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"     * Converts this {@link SavedTask} object to a {@link ToDo} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"     * @return The {@link ToDo} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the type of this {@link SavedTask} object is not","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"     *                           compatible with {@link ToDo}.","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    private ToDo convertToToDo() throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        return new ToDo(description, isCompleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"     * Converts this {@link SavedTask} object to an {@link Event} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"     * @return The {@link Event} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the type of this {@link SavedTask} object is not","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"     *                           compatible with {@link Event}.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"    private Event convertToEvent() throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"        return new Event(description, isCompleted, from, to);","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"     * Converts this {@link SavedTask} object to a {@link Deadline} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * @return The {@link Deadline} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the type of this {@link SavedTask} object is not","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"     *                           compatible with {@link Deadline}.","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    private Deadline convertToDeadline() throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"        return new Deadline(description, isCompleted, by);","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"     * Converts this {@link SavedTask} object to a {@link Task} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"     * @return The {@link Task} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the type of this {@link SavedTask} object is not","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"     *                           compatible with the task type that it has, or the","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"     *                           task type is invalid.","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"    public Task convertToTask() throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"        switch (type) {","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"        case TODO_IDENTIFIER:","lastModifiedDate":"2023-02-05"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"            return convertToToDo();","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"        case EVENT_IDENTIFIER:","lastModifiedDate":"2023-02-05"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"            return convertToEvent();","lastModifiedDate":"2023-02-05"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"        case DEADLINE_IDENTIFIER:","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"            return convertToDeadline();","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"        default:","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"            throw new UnknownException(\"Unknown task type\");","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":102}},{"path":"app/src/main/java/dev/joulev/archduke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.OtherException;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.tasks.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":" * This class provides static methods to handle the storage of tasks in the hard","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":" * disk.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"public class Storage {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    /** The path to the JSON file storing the task list. */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    private static final String FILE \u003d \".archduke/tasks.json\";","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    private static final Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * Helper method to read the content of a file as string.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    private static String readFromFile(String path) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        return Files.readString(Paths.get(path));","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * Helper method to write a string to a file. If the file does not exist, it","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * will be created. If the file exists, it will be overwritten.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    private static void writeToFile(String path, String content) throws IOException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        Files.createDirectories(Paths.get(path).getParent());","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        Files.writeString(Paths.get(path), content, StandardOpenOption.CREATE,","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"                StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"     * Reads the saved tasks from the storage file. If reading fails for any reason,","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"     * an empty list will be returned.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"     * @return The list of saved tasks, already converted to {@link Task} objects.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"    public static ArrayList\u003cTask\u003e readSavedTasks() {","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"            String savedTaskJson \u003d readFromFile(FILE);","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            SavedTask[] savedTasks \u003d gson.fromJson(savedTaskJson, SavedTask[].class);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"            for (SavedTask savedTask : savedTasks) {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"                Task task \u003d savedTask.convertToTask();","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"            return tasks;","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"            // Whether the file is not found, is corrupted or for whatsoever reason, we","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"            // consider it as non-existent and return an empty list.","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     * Saves the task list to the storage file.","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"     * @param tasks The {@link Task} list to be saved.","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If saving fails for any reason.","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        SavedTask[] savedTasks \u003d new SavedTask[tasks.size()];","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"            savedTasks[i] \u003d tasks.get(i).toSavedTask();","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"        String savedTaskJson \u003d gson.toJson(savedTasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"            writeToFile(FILE, savedTaskJson);","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"            throw new OtherException(","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"                    \"Failed to save task list to file. Your changes won\u0027t be saved.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":84}},{"path":"app/src/main/java/dev/joulev/archduke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.datetime.DateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException.UserInputExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.storage.SavedTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * This class represents a deadline task.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    /** The deadline of the task */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Deadline} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If any of the parameters are invalid (e.g. empty or","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     *                           {@code null}).","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    public Deadline(String description, String by) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        setBy(by);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Deadline} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If any of the parameters are invalid (e.g. empty or","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"     *                           {@code null}).","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    public Deadline(String description, boolean isCompleted, String by) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        setBy(by);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    public void setBy(String by) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        if (by \u003d\u003d null || by.isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.DEADLINE_BY_IS_EMPTY);","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        this.by \u003d DateTime.parse(by);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        return by;","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        return String.format(\"D %s (by: %s)\", super.toString(), DateTime.display(getBy()));","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"    public SavedTask toSavedTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"        return new SavedTask(SavedTask.DEADLINE_IDENTIFIER, getDescription(), isCompleted(), null,","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"                null, DateTime.formatForSave(getBy()));","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":65}},{"path":"app/src/main/java/dev/joulev/archduke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.datetime.DateTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException.UserInputExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.storage.SavedTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * This class represents an event task.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    /** The start time of the event */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    /** The end time of the event */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Event} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If any of the parameters are invalid (e.g. empty or","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     *                           {@code null}).","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    public Event(String description, String from, String to) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        setFrom(from);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        setTo(to);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Event} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If any of the parameters are invalid (e.g. empty or","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"     *                           {@code null}).","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    public Event(String description, boolean isCompleted, String from, String to)","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"            throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        setFrom(from);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        setTo(to);","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"    public void setFrom(String from) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        if (from \u003d\u003d null || from.isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.TODO_FROM_IS_EMPTY);","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"        this.from \u003d DateTime.parse(from);","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"    public void setTo(String to) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        if (to \u003d\u003d null || to.isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.TODO_TO_IS_EMPTY);","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"        this.to \u003d DateTime.parse(to);","lastModifiedDate":"2023-02-05"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"        return from;","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"        return to;","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"        return String.format(\"E %s (from: %s; to: %s)\", super.toString(),","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"                DateTime.display(getFrom()), DateTime.display(getTo()));","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"    public SavedTask toSavedTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"        return new SavedTask(SavedTask.EVENT_IDENTIFIER, getDescription(), isCompleted(),","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"                DateTime.formatForSave(getFrom()), DateTime.formatForSave(getTo()), null);","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":84}},{"path":"app/src/main/java/dev/joulev/archduke/tasks/Store.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.io.Out;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.storage.Storage;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * This class represents the store of tasks, aka a list of tasks. It also","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":" * handles reading and saving tasks to the file system.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"public class Store {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    public Store() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        this.tasks \u003d Storage.readSavedTasks();","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    private void onMutation() throws ArchdukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     * Adds a task to the store.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the operation fails.","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    public void addTask(Task task) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        onMutation();","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"     * Toggles the {@code isComplete} status of a task.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"     * @param index The index of the task to toggle.","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the operation fails.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    public void toggleTaskCompleteness(int index) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        task.toggleCompleted();","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        onMutation();","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"     * Deletes a task from the store.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the operation fails.","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"    public void deleteTask(int index) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        onMutation();","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"     * Lists all tasks in the store, in a prettified format.","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the operation fails.","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"    public void listTasks() throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"            Out.printf(\"  %s\", task.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"        Out.printf(\"You have %d task(s) in the list.\", getTaskCount());","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"     * Lists all tasks in the store that match a query string, in a prettified","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"     * format.","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * @param query The query string.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the operation fails.","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"    public void queryTasks(String query) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"                Out.printf(\"  %s\", task.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"     * Gets a task from the store.","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"     * @return The task at the given index.","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-02-04"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"     * Gets the number of tasks in the store.","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"joulev":101}},{"path":"app/src/main/java/dev/joulev/archduke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.UserInputException.UserInputExceptionCode;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.storage.SavedTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":" * An abstract that serves as the base class for all tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    /** The description of the task */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    private String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    /** Whether the task is completed or not */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Task} object, with {@code isCompleted} set to","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"     * {@code false}","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the description is empty or {@code null}.","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    public Task(String description) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        setDescription(description);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link Task} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the description is empty or {@code null}.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    public Task(String description, boolean isCompleted) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        setDescription(description);","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        return description;","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"     * Returns the status icon of the task for display. Icon taken from","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"     * {@link https://github.com/sindresorhus/figures/blob/main/index.js}","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"        return isCompleted ? \u0027■\u0027 : \u0027□\u0027;","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"        return isCompleted;","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public void setDescription(String description) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        if (description \u003d\u003d null || description.isBlank()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"            throw new UserInputException(UserInputExceptionCode.TASK_DESCRIPTION_IS_EMPTY);","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"        this.isCompleted \u003d !this.isCompleted;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        return String.format(\"%c %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * Converts the current task to a {@link SavedTask} object for storage.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"    public abstract SavedTask toSavedTask();","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":77}},{"path":"app/src/main/java/dev/joulev/archduke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke.tasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.exceptions.ArchdukeException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import dev.joulev.archduke.storage.SavedTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" * This class represents a simple ToDo task that has no time constraints.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link ToDo} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the description is empty or {@code null}.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"    public ToDo(String description) throws ArchdukeException {","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"     * Constructs a new {@link ToDo} object.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"     * @throws ArchdukeException If the description is empty or {@code null}.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    public ToDo(String description, boolean isCompleted) throws ArchdukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        super(description, isCompleted);","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        return String.format(\"T %s\", super.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    public SavedTask toSavedTask() {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        return new SavedTask(SavedTask.TODO_IDENTIFIER, getDescription(), isCompleted(), null, null,","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"                null);","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"joulev":40}},{"path":"app/src/test/java/dev/joulev/archduke/AppTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package dev.joulev.archduke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"// import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"// import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"class AppTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":7}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"/*","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" * in the user manual at https://docs.gradle.org/7.6/userguide/multi_project_builds.html","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"rootProject.name \u003d \u0027archduke\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"include(\u0027app\u0027)","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"joulev":11}}]
