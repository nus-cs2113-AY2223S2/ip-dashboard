[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"# duke.duke project template","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tangphi":2,"-":22}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"[T] [ ] eat banana","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"[T] [ ] eat food","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"[T] [ ] return book","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"[D] [ ] return book (by:  Sunday)","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"tangphi":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"import duke.task.*;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"import static duke.Storage.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"import static duke.Ui.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"import static duke.Parser.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"    public static final String FILEPATH \u003d \"data.txt\";","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    private Storage storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"    private TaskList list;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"    private static Parser parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"    public Duke() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"    public void run() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"tangphi"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"tangphi"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"tangphi"},"content":"        ui.displayWelcome();","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"tangphi"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"tangphi"},"content":"        int numToMark;","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"tangphi"},"content":"        boolean userDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"tangphi"},"content":"        loadTasksToFile();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"tangphi"},"content":"        while (!userDone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"tangphi"},"content":"            userDone \u003d parser.manipulateUserCommand(line, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"tangphi"},"content":"            if (!userDone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangphi"},"content":"                // Read next line","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"tangphi"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"tangphi"},"content":"        ui.displayGoodBye();","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"tangphi"},"content":"    public static void main(String[] args) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"tangphi"},"content":"        new Duke().run();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"tangphi":55,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"import static duke.Storage.writeTasksToFile;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"import static duke.Ui.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"import static duke.Ui.UNMARK_MSG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"public class Parser {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"    public int item \u003d 0;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"    public Parser() {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"    public boolean manipulateUserCommand(String line, ArrayList tasks) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"        if (line.equals(\"bye\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"        if (!(line.toLowerCase().startsWith(\"find\") || line.toLowerCase().startsWith(\"event\") || line.toLowerCase().startsWith(\"delete\") || line.toLowerCase().startsWith(\"deadline\") || line.toLowerCase().startsWith(\"todo\") || line.equals(\"list\") || line.toLowerCase().startsWith(\"mark\") || line.toLowerCase().startsWith(\"unmark\"))) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"            ui.displayUnrecognisedWord();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"tangphi"},"content":"            // Add event","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"tangphi"},"content":"                item \u003d TaskList.addEvent(line, item, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"tangphi"},"content":"                displayNumItemsInList(item);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"tangphi"},"content":"            // Add deadline","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"tangphi"},"content":"                item \u003d TaskList.addDeadline(line, item, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"tangphi"},"content":"                displayNumItemsInList(item);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangphi"},"content":"            // Add todo","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"tangphi"},"content":"                item \u003d TaskList.addToDo(line, item, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"tangphi"},"content":"                displayNumItemsInList(item);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"tangphi"},"content":"            // Display list","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"tangphi"},"content":"            if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"tangphi"},"content":"                displayList(tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"tangphi"},"content":"            // Mark item as done: constraint - user input begins with \"mark\"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"tangphi"},"content":"                TaskList.toggleDoneStatus(line, item, MARK_MSG, true, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"tangphi"},"content":"            // Unmark item: constraint - user input begins with \"mark\"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"tangphi"},"content":"                TaskList.toggleDoneStatus(line, item, UNMARK_MSG, false, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"tangphi"},"content":"            // Delete item","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"tangphi"},"content":"                item \u003d TaskList.deleteTask(line, item, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"tangphi"},"content":"            // Find item","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"tangphi"},"content":"            if (line.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"tangphi"},"content":"                TaskList.findTasks(line, tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"tangphi"},"content":"            Storage.writeTasksToFile(tasks);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"tangphi"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"tangphi":80}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"public class Storage {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"    protected static String filepath;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"        System.out.println(filepath);","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"    public static void loadTasksToFile() throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // @@author tangphi-reused","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // Reused from www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                System.out.println(\"File already exists\");","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            while (reader.hasNextLine()){","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String line \u003d reader.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                System.out.println(\"READER LINE\\n\" + line); //Do you want this printed in data.txt?","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            System.out.println(\"An IO Exception error occurred\");","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void writeTasksToFile(ArrayList tasks) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            FileWriter myWriter \u003d new FileWriter(filepath);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++ ) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                Task task \u003d (Task) tasks.get(i);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    myWriter.write(task.getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                else if (task instanceof Event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    myWriter.write(task.getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                else if (task instanceof Deadline) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    myWriter.write(task.getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            myWriter.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            System.out.println(\"An IO Exception error occurred\");","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"tangphi":23,"-":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"import duke.task.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"import org.jetbrains.annotations.NotNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"import static duke.Ui.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"public class TaskList {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    public static int addEvent(String line, int item, ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"            int toIndex \u003d line.indexOf(\"/to\");","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"            String toDate \u003d line.substring(toIndex + 3);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"            int fromIndex \u003d line.indexOf(\"/from\");","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"            String fromDate \u003d line.substring(fromIndex + 5, toIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"            int descriptionIndex \u003d line.indexOf(\"event\");","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"            String description \u003d line.substring(descriptionIndex + 6, fromIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"            Event newEvent \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"            item++;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"            displayTaskAddedMessage(newEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_EVENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"tangphi"},"content":"        } finally {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"tangphi"},"content":"            return item;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"tangphi"},"content":"    public static int addDeadline(String line, int item, ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"tangphi"},"content":"            int byIndex \u003d line.indexOf(\"/by\");","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"tangphi"},"content":"            String byDate \u003d line.substring(byIndex + 3);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangphi"},"content":"            int descriptionIndex \u003d line.indexOf(\"deadline\");","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"tangphi"},"content":"            String description \u003d line.substring(descriptionIndex + 9, byIndex);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"tangphi"},"content":"            Deadline newDeadline \u003d new Deadline(description, byDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"tangphi"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"tangphi"},"content":"            item++;","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"tangphi"},"content":"            displayTaskAddedMessage(newDeadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"tangphi"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_DEADLINE);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"tangphi"},"content":"        } finally {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"tangphi"},"content":"            return item;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"tangphi"},"content":"    public static int addToDo(@NotNull String line, int item, ArrayList tasks) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"tangphi"},"content":"            int descriptionIndex \u003d line.indexOf(\"todo\");","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"tangphi"},"content":"            String description \u003d line.substring(descriptionIndex + 5);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"tangphi"},"content":"            Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"tangphi"},"content":"            tasks.add(newTodo);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"tangphi"},"content":"            item++;","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"tangphi"},"content":"            displayTaskAddedMessage(newTodo);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"tangphi"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"tangphi"},"content":"            // CHANGE TO UI text","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_TODO);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"tangphi"},"content":"        } finally {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"tangphi"},"content":"            return item;","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"tangphi"},"content":"    public static int deleteTask(String line, int item, ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"tangphi"},"content":"            String inputMessageArray[] \u003d new String[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"tangphi"},"content":"            inputMessageArray \u003d line.split(\" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"tangphi"},"content":"            int numToDelete \u003d Integer.parseInt(inputMessageArray[1]) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"tangphi"},"content":"            // Check if list item number exists in list","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"tangphi"},"content":"            if (numToDelete \u003e\u003d 0 \u0026\u0026 numToDelete \u003c item) {","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"tangphi"},"content":"                // Delete item from list","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"tangphi"},"content":"                Task deletedTask \u003d (Task) tasks.remove(numToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"tangphi"},"content":"                item--;","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"tangphi"},"content":"                displayTaskDeletedMessage(deletedTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"tangphi"},"content":"                displayNumItemsInList(item);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"tangphi"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"tangphi"},"content":"                System.out.println(\"Item number \" + (numToDelete + 1) + \" does not exist in list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"tangphi"},"content":"        } catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_LISTNUM);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"tangphi"},"content":"        return item;","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"tangphi"},"content":"    public static void toggleDoneStatus(String line, int item, String msg, boolean status, ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"tangphi"},"content":"            String inputMessageArray[] \u003d new String[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"tangphi"},"content":"            inputMessageArray \u003d line.split(\" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"tangphi"},"content":"            int numToMark \u003d Integer.parseInt(inputMessageArray[1]) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"tangphi"},"content":"            // Check if list item number exists in list","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"tangphi"},"content":"            if (numToMark \u003e\u003d 0 \u0026\u0026 numToMark \u003c item) {","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"tangphi"},"content":"                // Check if it is already done/not done in list","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"tangphi"},"content":"                if (((Task) tasks.get(numToMark)).getIsDone() !\u003d status) {","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"tangphi"},"content":"                    // Update IsDone status","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"tangphi"},"content":"                    ((Task) tasks.get(numToMark)).setIsDone(status);","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"tangphi"},"content":"                    System.out.println(HORIZONTAL + \"\\n\\t\" + msg);","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"tangphi"},"content":"                    System.out.println(\"\\n\\t\\t\" + ((Task) tasks.get(numToMark)).getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"tangphi"},"content":"                    System.out.println(HORIZONTAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"tangphi"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"tangphi"},"content":"                    System.out.println(\"No change, task was already as is\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"tangphi"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"tangphi"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"tangphi"},"content":"                System.out.println(\"Item number \" + (numToMark + 1) + \" does not exist in list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"tangphi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_LISTNUM);","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"tangphi"},"content":"    public static void findTasks (String line, ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"tangphi"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"tangphi"},"content":"            String inputMessageArray[] \u003d new String[2];","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"tangphi"},"content":"            inputMessageArray \u003d line.split(\" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"tangphi"},"content":"            String taskToFind \u003d inputMessageArray[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"tangphi"},"content":"            String taskDescrip;","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"tangphi"},"content":"            System.out.println(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"tangphi"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"tangphi"},"content":"                taskDescrip \u003d ((Task) tasks.get(i)).getPureDescription();","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"tangphi"},"content":"                String taskDescripArray[] \u003d new String[5];","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"tangphi"},"content":"                taskDescripArray \u003d taskDescrip.split(\" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"tangphi"},"content":"                for (String word: taskDescripArray) {","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"tangphi"},"content":"                    // if matching word","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"tangphi"},"content":"                    if (word.equals(taskToFind)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"tangphi"},"content":"                        System.out.println(\"\\n\\t\" + (i + 1) + \". \" + ((Task) tasks.get(i)).getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"tangphi"},"content":"                    }","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"tangphi"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"tangphi"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"tangphi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"tangphi"},"content":"            System.out.println(EMPTY_LISTNUM);","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"tangphi":166}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"import duke.task.Task;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"public class Ui {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"    public static final String OPENING_MSG \u003d \"Hello! I\u0027m Dukebot\\n\\tWhat can I do for you?\";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"    public static final String CLOSING_MSG \u003d \"Goodbye! Hope to see you again soon ^^!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"    public static final String HORIZONTAL \u003d \"---------------------------------\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"    public static final String MARK_MSG \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"    public static final String UNMARK_MSG \u003d \"Oki! I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"    public static final String UNRECOGNISED_WORD \u003d HORIZONTAL + \"\\n\\tSorry, I don\u0027t know what that means!\\n\" + HORIZONTAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"    public static final String EMPTY_EVENT \u003d HORIZONTAL + \"\\n\\tCannot add, the description of an event cannot be empty!\\n\" + HORIZONTAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"    public static final String EMPTY_DEADLINE \u003d HORIZONTAL + \"\\n\\tCannot add, the description of a deadline cannot be empty!\\n\" + HORIZONTAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    public static final String EMPTY_TODO \u003d HORIZONTAL + \"\\n\\tCannot add, the description of a todo cannot be empty!\\n\" + HORIZONTAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"    public static final String EMPTY_LISTNUM \u003d HORIZONTAL + \"\\n\\tI cannot change the status if I don\u0027t know the list number!\\n\" + HORIZONTAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"    public void displayWelcome() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL + \"\\n\\t\" + OPENING_MSG + \"\\n\" + HORIZONTAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"    public void displayUnrecognisedWord() {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"        System.out.println(UNRECOGNISED_WORD);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"    public void displayGoodBye() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL + \"\\n\\t\" + CLOSING_MSG + \"\\n\" + HORIZONTAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"tangphi"},"content":"    public static void displayTaskAddedMessage(Task task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL + \"\\n\\tGot it! Added this task: \" + \"\\n\\t\\t\" + task.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"tangphi"},"content":"    public static void displayTaskDeletedMessage(Task task) {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL + \"\\n\\tNoted! I have deleted this task: \" + \"\\n\\t\\t\" + task.getDescription());","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"tangphi"},"content":"    public static void displayNumItemsInList(int item) {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"tangphi"},"content":"        if (item \u003e 1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"tangphi"},"content":"            System.out.println(\"\\tNow you have \" + (item) + \" tasks in the list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"tangphi"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"tangphi"},"content":"            System.out.println(\"\\tNow you have \" + (item) + \" task in the list\");","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"tangphi"},"content":"    public static void displayList(ArrayList tasks) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL + \"\\n\\tHere are the tasks in your list:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"tangphi"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"tangphi"},"content":"            System.out.println(\"\\n\\t\" + (i + 1) + \". \" + ((Task) tasks.get(i)).getDescription() + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"tangphi"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"tangphi"},"content":"        System.out.println(HORIZONTAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"tangphi":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"    // Solution below adapted from https://nus-cs2113-ay2223s2.github.io/website/admin/ip-w4.html","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"    // Week 4 A-Inheritance partial solution with modifications","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"    protected String by;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"        super(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"        setBy(by);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"    public String getBy() {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"        return this.by;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"        return \"[D] \" + super.getDescription() + \"(by: \" + this.getBy() + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"tangphi":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"    protected String description;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"    protected String from;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"    protected String to;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"        super(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"        setFrom(from);","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"        setTo(to);","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"    public String getTo() {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"        return this.to;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"    public String getFrom() {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"        return this.from;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"    // Solution below adapted from referring to the getDescription() method by:","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"    // https://github.com/nichyjt/ip/blob/master/src/main/java/max/task/Event.java","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"tangphi"},"content":"        return \"[E] \" + super.getDescription() + \"(from: \" + this.getFrom() + \" to: \" + this.getTo() + \")\";","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"tangphi":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"public class Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"    protected String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"    // Constructor","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"tangphi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"tangphi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"tangphi"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"tangphi"},"content":"        return this.isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"tangphi"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"tangphi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"tangphi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"tangphi"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"tangphi"},"content":"    public String getPureDescription() {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"tangphi"},"content":"        return this.description;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"tangphi":30}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tangphi"},"content":"package duke.task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"tangphi"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"tangphi"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"tangphi"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"tangphi"},"content":"        super(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"tangphi"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"tangphi"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"tangphi"},"content":"        return \"[T] \" + super.getDescription();","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"tangphi"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"tangphi"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"tangphi":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tangphi"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tangphi":1,"-":20}}]
