[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"        return (\"[D]\" + super.toString() + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    public String toSerialisedString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"        String isDoneStr \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"        return (\"D|\" + isDoneStr +\"|\" + description + \"|\" + by);","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_OPENING;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"        storage.loadFromFile(TaskList.items);","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"        File f \u003d new File(\"data/Duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"        System.out.println(MESSAGE_OPENING);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"        Scanner response \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"        ui.readInCommand(TaskList.items, response, line);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"-":2,"shannentan":24}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"    protected String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"        return (\"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"    public String toSerialisedString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"        String isDoneStr \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"        return (\"E|\" + isDoneStr + \"|\" + description + \"|\" + start + \"|\" + end);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":21}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"import static messages.ErrorMessages.MESSAGE_INVALID_INDEX_ERROR;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_MARK_TASK;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_UNMARK_TASK;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_REMOVE_TASK;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"public class Parser {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    public static void displayList(ArrayList\u003cTask\u003e items) {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"        System.out.println(\"...\\n\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"            System.out.println((i + 1) + \".\" + items.get(i));","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"    public static void markTask(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"            int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"            items.get(index).isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_MARK_TASK + items.get(index));","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_INVALID_INDEX_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"shannentan"},"content":"    public static void unmarkTask(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"shannentan"},"content":"            int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"shannentan"},"content":"            items.get(index).isDone \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_UNMARK_TASK + items.get(index));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"shannentan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_INVALID_INDEX_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"shannentan"},"content":"    public static void removeTask(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"shannentan"},"content":"            int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"shannentan"},"content":"            items.remove(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_REMOVE_TASK + (index + 1));","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"shannentan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_INVALID_INDEX_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"shannentan"},"content":"    public static void addNewTodo(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"shannentan"},"content":"        Task newTask \u003d TaskList.createNewTodo(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"shannentan"},"content":"        items.add(newTask);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"shannentan"},"content":"    public static void addNewEvent(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"shannentan"},"content":"            Task newEvent \u003d TaskList.createNewEvent(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"shannentan"},"content":"            items.add(newEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"shannentan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"shannentan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"shannentan"},"content":"    public static void addNewDeadline(ArrayList\u003cTask\u003e items, String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"shannentan"},"content":"            Task newDeadline \u003d TaskList.createNewDeadline(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"shannentan"},"content":"            items.add(newDeadline);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"shannentan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"shannentan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":71}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import java.io.File;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_NO_EXISTING_FILE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"public class Storage {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    public static Task loadNewTodo(String isDoneString, String description) {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"        Todo readTodo \u003d new Todo(description);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        if (isDoneString.equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"            readTodo.isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"        return readTodo;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"    public static Task loadNewEvent(String isDoneString, String description, String start, String end) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"        Event readEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"        if (isDoneString.equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"            readEvent.isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"shannentan"},"content":"        return readEvent;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"shannentan"},"content":"    public static Task loadNewDeadline(String isDoneString, String description, String by) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"shannentan"},"content":"        Deadline readDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"shannentan"},"content":"        if (isDoneString.equals(\"1\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"shannentan"},"content":"            readDeadline.isDone \u003d true;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"shannentan"},"content":"        return readDeadline;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"shannentan"},"content":"    public void loadFromFile(ArrayList\u003cTask\u003e items) throws FileNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"shannentan"},"content":"        File f \u003d new File(\"data/Duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"shannentan"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"shannentan"},"content":"            Scanner scan \u003d new Scanner(f);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"shannentan"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"shannentan"},"content":"                String taskLine \u003d scan.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"shannentan"},"content":"                String[] taskArgs \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"shannentan"},"content":"                if (taskArgs[0].equals(\"T\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"shannentan"},"content":"                    items.add(loadNewTodo(taskArgs[1].trim(), taskArgs[2].trim()));","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"shannentan"},"content":"                } else if (taskArgs[0].equals(\"D\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"shannentan"},"content":"                    items.add(loadNewEvent(taskArgs[1].trim(), taskArgs[2].trim(), taskArgs[3].trim(), taskArgs[4].trim()));","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"shannentan"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"shannentan"},"content":"                    taskArgs[0] \u003d \"E\";","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"shannentan"},"content":"                    items.add(loadNewDeadline(taskArgs[1].trim(), taskArgs[2].trim(), taskArgs[3].trim()));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"shannentan"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_NO_EXISTING_FILE);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"shannentan"},"content":"            File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"shannentan"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"shannentan"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e items) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"shannentan"},"content":"        FileWriter fw \u003d new FileWriter(\"data/Duke.txt\");","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"shannentan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"shannentan"},"content":"        for (Task item : items) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"shannentan"},"content":"            String newSerialisedTask \u003d item.toSerialisedString();","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"shannentan"},"content":"            sb.append(newSerialisedTask).append(\"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"shannentan"},"content":"        String serialString \u003d sb.toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"shannentan"},"content":"        fw.write(serialString);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"shannentan"},"content":"        fw.close();","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":70}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"    public abstract String toSerialisedString();","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + description);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":19}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"import static messages.ErrorMessages.MESSAGE_MISSING_INFO_ERROR;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"import static messages.newTaskMessages.MESSAGE_CREATE_NEW_DEADLINE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"import static messages.newTaskMessages.MESSAGE_CREATE_NEW_EVENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"import static messages.newTaskMessages.MESSAGE_CREATE_NEW_TODO;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"    public static ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"    public static Task createNewTodo(String arguments) {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        System.out.println(MESSAGE_CREATE_NEW_TODO + arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"        return new Todo(arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"    public static Task createNewEvent(String arguments) throws DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"            String[] eventInfo \u003d arguments.split(\"/from \");","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"            if (eventInfo.length \u003c 2) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"                throw new DukeException(MESSAGE_MISSING_INFO_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"            String[] eventDuration \u003d eventInfo[1].split(\"/to \");","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"shannentan"},"content":"            if (eventDuration.length \u003c 2) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"                throw new DukeException(MESSAGE_MISSING_INFO_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"shannentan"},"content":"            System.out.println(MESSAGE_CREATE_NEW_EVENT + eventInfo[0] + \"(from: \" + eventDuration[0] + \" to: \" + eventDuration[1] + \")\");","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"shannentan"},"content":"            return new Event(eventInfo[0], eventDuration[0], eventDuration[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"shannentan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"shannentan"},"content":"            throw new DukeException(MESSAGE_MISSING_INFO_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"shannentan"},"content":"    public static Task createNewDeadline(String arguments) throws DukeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"shannentan"},"content":"        String[] deadlineInfo \u003d arguments.split(\"/by \");","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"shannentan"},"content":"        if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"shannentan"},"content":"            throw new DukeException(MESSAGE_MISSING_INFO_ERROR);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"shannentan"},"content":"        System.out.println(MESSAGE_CREATE_NEW_DEADLINE + deadlineInfo[0] + \"(by: \" + deadlineInfo[1] + \")\");","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"shannentan"},"content":"        return new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":44}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"   @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"    public String toSerialisedString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        String isDoneStr \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"        return (\"T|\" + isDoneStr +\"|\" + description);","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":17}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"import static messages.ErrorMessages.MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"import static messages.operationalMessages.MESSAGE_CLOSING;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"public class Ui {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    public void readInCommand(ArrayList\u003cTask\u003e items, Scanner response, String line) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"        while (!(line.equals(\"bye\"))) {","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"            line \u003d response.nextLine();","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"            String[] lines \u003d line.trim().split(\" \", 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"            String command \u003d lines[0];","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"                break;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"                Parser.displayList(items);","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"                continue;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"            String arguments \u003d lines[1];","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"                Parser.markTask(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"                Parser.unmarkTask(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"shannentan"},"content":"                Parser.addNewTodo(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"shannentan"},"content":"                Parser.addNewEvent(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"shannentan"},"content":"                Parser.addNewDeadline(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"remove\")) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"shannentan"},"content":"                Parser.removeTask(items, arguments);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"shannentan"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"shannentan"},"content":"                System.out.println(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"shannentan"},"content":"                continue;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"shannentan"},"content":"            Storage.writeToFile(TaskList.items);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"shannentan"},"content":"        System.out.println(MESSAGE_CLOSING);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":43}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"package exceptions;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":" * This is a custom exception for the Duke project","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"        super(message);","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"shannentan":10}},{"path":"src/main/java/messages/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"package messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"public class ErrorMessages {","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_INVALID_INDEX_ERROR \u003d \"...\\n\" + \"Please input a valid index!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_MISSING_INFO_ERROR \u003d \"...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"            + \"There\u0027s missing information. What would you like to do today?\";","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"...\\n\" + \"Sorry, I don\u0027t understand that.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":10}},{"path":"src/main/java/messages/newTaskMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"package messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"public class newTaskMessages {","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_CREATE_NEW_TODO \u003d \"...\\n\" + \"Got it. I\u0027ve added this task:\\n\" + \" [T][ ] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_CREATE_NEW_EVENT \u003d \"...\\n\" + \"Got it. I\u0027ve added this event:\\n\" + \" [E][ ] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_CREATE_NEW_DEADLINE \u003d \"...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"            + \"Got it. I\u0027ve added this deadline:\\n\" + \" [D][ ] \";","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":10}},{"path":"src/main/java/messages/operationalMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"package messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"public class operationalMessages {","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_OPENING \u003d \"...\\n\" + \"Hello, I\u0027m Duke!\\n\" + \"What would you like to do today?\";","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_CLOSING \u003d \"...\\n\" + \"Bye! Have a nice day:D\";","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_MARK_TASK \u003d \"...\\n\" + \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_UNMARK_TASK \u003d \"...\\n\" + \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_REMOVE_TASK \u003d \"...\\n\" + \"Okay, I\u0027ve removed task \";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"    public static final String MESSAGE_NO_EXISTING_FILE \u003d \"...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"            + \"There\u0027s no existing task list. I\u0027ll create a new one for you!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"shannentan":16}}]
