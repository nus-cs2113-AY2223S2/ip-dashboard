[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected String by;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    protected String opening \u003d \"...\\n\" + \"Got it. I\u0027ve added this deadline:\\n\" + \" [D][ ] \";","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"        System.out.println(opening + description + \"(by: \" + by + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        return (\"[D]\" + super.toString() + \" (by: \" + by + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"//    1) check for sufficient arguments","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"//    2) check for /by etc","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"        System.out.println(\"Hello, I\u0027m Duke!\\n\" + \"What would you like to do today?\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"        Scanner response \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"        Task[] items \u003d new Task[101]; // 1-based","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"        while (!(line.equals(\"bye\"))) {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"            line \u003d response.nextLine();","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"shannentan"},"content":"            String[] lines \u003d line.trim().split(\" \", 2);","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"shannentan"},"content":"            String command \u003d lines[0];","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"shannentan"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"shannentan"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"shannentan"},"content":"            if (line.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"shannentan"},"content":"                System.out.println(\"...\\n\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"shannentan"},"content":"                for (int i \u003d 1; i \u003c counter; i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"shannentan"},"content":"                    System.out.println(i + \".\" + items[i]);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"shannentan"},"content":"                continue;","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"shannentan"},"content":"            String arguments \u003d lines[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"shannentan"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"shannentan"},"content":"                try {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"shannentan"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"shannentan"},"content":"                    items[index].isDone \u003d true;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"...\\n\" + \"Nice! I\u0027ve marked this task as done:\\n\" + items[index]);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"shannentan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"Please input a valid index!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"shannentan"},"content":"                try {","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"shannentan"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"shannentan"},"content":"                    items[index].isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"...\\n\" + \"OK, I\u0027ve marked this task as not done yet:\\n\" + items[index]);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"shannentan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"Please input a valid index!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"shannentan"},"content":"                Todo newTodo \u003d new Todo(arguments);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"shannentan"},"content":"                items[counter] \u003d newTodo;","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"shannentan"},"content":"                counter++;","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"shannentan"},"content":"                try {","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"shannentan"},"content":"                    String[] eventInfo \u003d arguments.split(\"/from \");","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"shannentan"},"content":"                    if (eventInfo.length \u003c 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"shannentan"},"content":"                        throw new DukeException(\"There\u0027s missing information.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"shannentan"},"content":"                    }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"shannentan"},"content":"                    String[] eventDuration \u003d eventInfo[1].split(\"/to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"shannentan"},"content":"                    if (eventDuration.length \u003c 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"shannentan"},"content":"                        throw new DukeException(\"There\u0027s missing information.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"shannentan"},"content":"                    }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"shannentan"},"content":"                    Event newEvent \u003d new Event(eventInfo[0], eventDuration[0], eventDuration[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"shannentan"},"content":"                    items[counter] \u003d newEvent;","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"shannentan"},"content":"                    counter++;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"shannentan"},"content":"                } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"There\u0027s some missing information.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"shannentan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"shannentan"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"shannentan"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"shannentan"},"content":"                try {","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"shannentan"},"content":"                    String[] deadlineInfo \u003d arguments.split(\"/by \");","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"shannentan"},"content":"                    if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"shannentan"},"content":"                        throw new DukeException(\"There\u0027s missing information.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"shannentan"},"content":"                    }","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"shannentan"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"shannentan"},"content":"                    items[counter] \u003d newDeadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"shannentan"},"content":"                    counter++;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"shannentan"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"What would you like to do, and when\u0027s the deadline?\");","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"shannentan"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"shannentan"},"content":"                    System.out.println(\"Remember to add /by before the deadline!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"shannentan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"shannentan"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"shannentan"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"shannentan"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"shannentan"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"shannentan"},"content":"        System.out.println(\"Bye! Have a nice day:D\");","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"-":3,"shannentan":86}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"    protected String start;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected String end;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    protected String opening \u003d \"...\\n\" + \"Got it. I\u0027ve added this event:\\n\" + \" [E][ ] \";","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"        System.out.println(opening + description + \"(from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"        return (\"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\");","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"        return (isDone ? \"x\" : \" \"); // mark x if isDone is true, space if false","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"shannentan"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + description);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"    protected String opening \u003d \"...\\n\" + \"Got it. I\u0027ve added this task:\\n\" + \" [T][ ] \";","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":"        super(description);","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"        System.out.println(opening + description);","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"shannentan"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"shannentan":13}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shannentan"},"content":"package exceptions;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"shannentan"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"shannentan"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"shannentan"},"content":" * This is a custom exception for the Duke project","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"shannentan"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"shannentan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"shannentan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"shannentan"},"content":"        super(message);","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"shannentan"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"shannentan"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"shannentan":10}}]
