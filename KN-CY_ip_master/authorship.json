[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"    private String dueDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"            return \"[D][X] \" + getTaskName() + \" (by: \" + dueDate + \u0027)\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"            return \"[D][] \" + getTaskName() + \" (by: \" + dueDate + \u0027)\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KN-CY":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    public static void printSeperator() {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\");","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    public static void farewell() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    private static void parseResponse(String response, List list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"        if (response.equals(\"list\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"            list.listDisplay();","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"        } else if (response.length() \u003e\u003d 5 \u0026\u0026 response.substring(0, 5).equals(\"mark \")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"            list.markTask(response.substring(5));","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"        } else if (response.length() \u003e\u003d 7 \u0026\u0026 response.substring(0, 7).equals(\"unmark \")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"            list.unmarkTask(response.substring(7));","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        } else { // add task","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"            list.listAdd(response);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"        greet();","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"        List list \u003d new List();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"        String response \u003d in.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"        while (!response.equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"            parseResponse(response, list);","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"            response \u003d in.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"        // response is bye.","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"        farewell();","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KN-CY":57,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"    private String startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"    private String endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"            return \"[E][X] \" + getTaskName() + \" (from: \" + startTime + \" to: \" + endTime + \u0027)\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"            return \"[E][] \" + getTaskName() + \" (from: \" + startTime + \" to: \" + endTime + \u0027)\u0027;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KN-CY":19}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"KN-CY":2}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"KN-CY":2}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"import com.sun.source.util.TaskListener;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class List {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private static final int TASKLIST_SIZE \u003d 100;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    private static final char SPACE \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    private int numItems \u003d 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"    private Task[] taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    public List() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        taskList \u003d new Task[TASKLIST_SIZE]; // Note: only initialise array of obj, but not individual obj","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    public void listDisplay() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        for (int i \u003d 0; i \u003c numItems; i +\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"            // print index of task","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\" \" + (i + 1) + \".\");","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"            // list the details about the task. Based on whether the task is ToDo, Deadline or Event.","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"            System.out.println(taskList[i].listTask());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    private void printSuccessfulAddMessage(int numItems, Task currTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"  \" + currTask.listTask());","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Now you have \" + numItems + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"    private void listAddToDo(String taskName) {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new ToDo(taskName);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"    private void listAddDeadline(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"        int byIndex \u003d taskDetails.indexOf(\" /by \");","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, byIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"        String dueDate \u003d taskDetails.substring(byIndex + 5); // rest of string after \" /by \"","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"    private void listAddEvent(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"        int fromIndex \u003d taskDetails.indexOf(\" /from \");","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"        int toIndex \u003d taskDetails.indexOf(\" /to \");","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, fromIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"        String startTime \u003d taskDetails.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"        String endTime \u003d taskDetails.substring(toIndex + 5);","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"    public void listAdd(String sentence) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"        String[] words \u003d sentence.split(\" \", 2); // split sentence only on first occurance of space","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"                listAddToDo(words[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid todo command! Task description cannot be empty\");","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"                listAddDeadline(words[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid deadline command!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid deadline command! Task description cannot be empty\");","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"        case \"event\":","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"                listAddEvent(words[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid event command!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid event command! Task description cannot be empty\");","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":"        default:","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Invalid task type!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":"            return;","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"KN-CY"},"content":"        numItems +\u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"        printSuccessfulAddMessage(numItems, taskList[numItems - 1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"    // check if index represented by string is valid, if valid, return index in integer form.","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"    // else return -1.","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"    private int parseIndex(String indexString) throws InvalidIndexException {","lastModifiedDate":"2023-02-06"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-06"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"        indexInt \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-02-06"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"        indexInt -\u003d 1; // convert to 0-index","lastModifiedDate":"2023-02-06"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":"        if (indexInt \u003e\u003d numItems || indexInt \u003c 0) {","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"KN-CY"},"content":"        return indexInt;","lastModifiedDate":"2023-02-06"},{"lineNumber":115,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"KN-CY"},"content":"    public void markTask(String indexString) {","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString);","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"KN-CY"},"content":"            taskList[indexInt].setIsComplete(true);","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\"   [X] \");","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"KN-CY"},"content":"            System.out.println(taskList[indexInt].getTaskName());","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":127,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is not a number!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":128,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is invalid!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"KN-CY"},"content":"    public void unmarkTask(String indexString) {","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":138,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString);","lastModifiedDate":"2023-02-06"},{"lineNumber":139,"author":{"gitId":"KN-CY"},"content":"            taskList[indexInt].setIsComplete(false);","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"   [ ] \" + taskList[indexInt].getTaskName());","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":143,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is not a number!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is invalid!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":146,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"KN-CY":148}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"    private String taskName;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    public Task() {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"        taskName \u003d null;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"        return taskName;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"    public void setIsComplete(boolean isComplete) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"        return isComplete;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"    // return value doesnt matter because overridden by child class","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"    public String listTask(){","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"KN-CY":35}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"    // provide the details relating to this toDo Task.","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"            return \"[T][X] \" + getTaskName();","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"            return \"[T][] \" + getTaskName();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KN-CY":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    public static void printSeperator() {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\");","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    public static void farewell() {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"        printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    private static void parseResponse(String response, List list) {","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"        if (response.equals(\"list\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"            list.listDisplay();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        } else if (response.length() \u003e\u003d 5 \u0026\u0026 response.substring(0, 5).equals(\"mark \")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"            list.markTask(response.substring(5));","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"        } else if (response.length() \u003e\u003d 7 \u0026\u0026 response.substring(0, 7).equals(\"unmark \")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"            list.unmarkTask(response.substring(7));","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        } else { // add task","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"            list.listAdd(response);","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"            printSeperator();","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"        greet();","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"        List list \u003d new List();","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"        String response \u003d in.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"        while (!response.equals(\"bye\")) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"            parseResponse(response, list);","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"            response \u003d in.nextLine();","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"        // response is bye.","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"        farewell();","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":63}},{"path":"src/main/java/duke/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"public class List {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    private static final int TASKLIST_SIZE \u003d 100;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    private static final char SPACE \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    private int numItems \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"    private Task[] taskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    public List() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"        taskList \u003d new Task[TASKLIST_SIZE]; // Note: only initialise array of obj, but not individual obj","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    public void listDisplay() {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"        for (int i \u003d 0; i \u003c numItems; i +\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"            // print index of task","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\" \" + (i + 1) + \".\");","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"            // list the details about the task. Based on whether the task is ToDo, Deadline or Event.","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"            System.out.println(taskList[i].listTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"    private void printSuccessfulAddMessage(int numItems, Task currTask) {","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"  \" + currTask.listTask());","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Now you have \" + numItems + \" tasks in the list.\");","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"    private void listAddToDo(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new ToDo(taskName);","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"    private void listAddDeadline(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"        int byIndex \u003d taskDetails.indexOf(\" /by \");","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, byIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"        String dueDate \u003d taskDetails.substring(byIndex + 5); // rest of string after \" /by \"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"    private void listAddEvent(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"        int fromIndex \u003d taskDetails.indexOf(\" /from \");","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"        int toIndex \u003d taskDetails.indexOf(\" /to \");","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, fromIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"        String startTime \u003d taskDetails.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"        String endTime \u003d taskDetails.substring(toIndex + 5);","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"        taskList[numItems] \u003d new Event(taskName, startTime, endTime);","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"    public void listAdd(String sentence) {","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"        String[] words \u003d sentence.split(\" \", 2); // split sentence only on first occurance of space","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"KN-CY"},"content":"        String taskType \u003d words[0];","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"                listAddToDo(words[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid todo command! Task description cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"                listAddDeadline(words[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid deadline command!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid deadline command! Task description cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"        case \"event\":","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"                listAddEvent(words[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid event command!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"                System.out.println(\"Invalid event command! Task description cannot be empty\");","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"KN-CY"},"content":"        default:","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Invalid task type!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"KN-CY"},"content":"            return;","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"        numItems +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"        printSuccessfulAddMessage(numItems, taskList[numItems - 1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":"    // check if index represented by string is valid, if valid, return index in integer form.","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"    // else return -1.","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"KN-CY"},"content":"    private int parseIndex(String indexString) throws InvalidIndexException {","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"KN-CY"},"content":"        indexInt \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"KN-CY"},"content":"        indexInt -\u003d 1; // convert to 0-index","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"KN-CY"},"content":"        if (indexInt \u003e\u003d numItems || indexInt \u003c 0) {","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"KN-CY"},"content":"        return indexInt;","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"KN-CY"},"content":"    public void markTask(String indexString) {","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString);","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"KN-CY"},"content":"            taskList[indexInt].setIsComplete(true);","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\"   [X] \");","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"KN-CY"},"content":"            System.out.println(taskList[indexInt].getTaskName());","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is not a number!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":135,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is invalid!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"KN-CY"},"content":"    public void unmarkTask(String indexString) {","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString);","lastModifiedDate":"2023-02-07"},{"lineNumber":146,"author":{"gitId":"KN-CY"},"content":"            taskList[indexInt].setIsComplete(false);","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"   [ ] \" + taskList[indexInt].getTaskName());","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is not a number!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"KN-CY"},"content":"            System.out.println(\"Given index is invalid!\");","lastModifiedDate":"2023-02-07"},{"lineNumber":153,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":155}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":4}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":4}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private String dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"            return \"[D][X] \" + getTaskName() + \" (by: \" + dueDate + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"            return \"[D][] \" + getTaskName() + \" (by: \" + dueDate + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":19}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private String startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    private String endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"            return \"[E][X] \" + getTaskName() + \" (from: \" + startTime + \" to: \" + endTime + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"            return \"[E][] \" + getTaskName() + \" (from: \" + startTime + \" to: \" + endTime + \u0027)\u0027;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":21}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    private String taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    public Task() {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"        taskName \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"        return taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"    public void setIsComplete(boolean isComplete) {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"        return isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"    // return value doesnt matter because overridden by child class","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"    public String listTask(){","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"        return null;","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":37}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    // provide the details relating to this toDo Task.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    public String listTask() {","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        if (getIsComplete()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"            return \"[T][X] \" + getTaskName();","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"            return \"[T][] \" + getTaskName();","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"todo read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"todo join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"mark 4","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"todo borrow book","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KN-CY":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KN-CY":1,"-":20}}]
