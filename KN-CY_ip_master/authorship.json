[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"# Duke - User Guide","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"## About","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"Duke is an application which uses a command-line interface(CLI). The user can use Duke\u0027s CLI to keep track of various","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"tasks such as *Todo*, *Deadline* and *Event* tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"## Quick Start","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"2. Download the latest *duke.jar* from [here](https://github.com/KN-CY/ip/releases).","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"3. Copy the *duke.jar* file into your preferred empty folder.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"4. Launch your terminal or command prompt and navigate to the folder containing the *duke.jar* file.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"5. Use the `java -jar duke.jar` command to start the application.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"#### Add task","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"Add a task into the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"#### Delete task","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"Delete the specified task from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"#### Mark task as complete/incomplete","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"Mark a specified task as complete or incomplete.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"#### List tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"List all tasks in the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"#### Find tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"Filters a list of tasks which task description matches a provided query.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"#### Save tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"Saves the task list into a file.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"#### Load tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"Loads the task list from a file.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"### `todo` - Add a todo task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"Adds a *Task* of type *Todo* to the task list, with the task description provided by the user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"#### Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"todo adopt dog","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"  [T][ ] adopt dog","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":" Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"### `deadline` - Add a deadline task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"Adds a *Task* of type *Deadline* to the task list, with the task description and due date provided by the user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"#### Format: `deadline \u003ctask description\u003e /by \u003cdue date\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"deadline feed doggo /by dinner time","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"  [D][ ] feed doggo (by: dinner time)","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"### `event` - Add an event task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"Adds a *Task* of type *Event* to the task list, with the task description, start time and end time provided by the user","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"input.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"#### Format: `event \u003ctask description\u003e /from \u003cstart time\u003e /to \u003cend time\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"event play with doggo /from today 4pm /to tomorrow 6am","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"  [E][ ] play with doggo (from: today 4pm to: tomorrow 6am)","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"### `mark` - Mark a task as complete.","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"Marks a task of a specified index as complete.","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"#### Format: `mark \u003ctask index\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"mark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"   [T][X] adopt dog","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"KN-CY"},"content":"### `unmark` - Mark a task as incomplete.","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"KN-CY"},"content":"Marks a task of a specified index as incomplete.","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"KN-CY"},"content":"#### Format: `unmark \u003ctask index\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"KN-CY"},"content":"unmark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"KN-CY"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"KN-CY"},"content":"   [T][ ] adopt dog","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"KN-CY"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"KN-CY"},"content":"Lists all tasks in the task list. Indicates the index of the task, the type of task, the completion status of the task","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"KN-CY"},"content":"and the task description.","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"KN-CY"},"content":"#### Format: `list`","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"KN-CY"},"content":" Here are the tasks in your list:","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"KN-CY"},"content":" 1.[T][X] adopt dog","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"KN-CY"},"content":" 2.[D][ ] feed doggo (by: dinner time)","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"KN-CY"},"content":" 3.[E][ ] play with doggo (from: today 4pm to: tomorrow 6am)","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"KN-CY"},"content":"### `find` - Filters task list","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"KN-CY"},"content":"Filters a list of tasks which task description matches a query provided by the user.","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"KN-CY"},"content":"#### Format: `find \u003cquery\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"KN-CY"},"content":"find doggo","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"KN-CY"},"content":" Here are the matching tasks in your list:","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"KN-CY"},"content":" 1.[D][ ] feed doggo (by: dinner time)","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"KN-CY"},"content":" 2.[E][ ] play with doggo (from: today 4pm to: tomorrow 6am)","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"KN-CY"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"KN-CY"},"content":"Deletes a task of a specified index from the task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"KN-CY"},"content":"#### Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"KN-CY"},"content":"delete 3","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"KN-CY"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"KN-CY"},"content":"   [E][ ] play with doggo","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"KN-CY"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"KN-CY"},"content":"```","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"KN-CY"},"content":"### Save tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"KN-CY"},"content":"The task list is saved automatically into the *savedlist.txt* file in the same folder as the *duke.jar* file. Do ensure","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"KN-CY"},"content":"that you perform a normal exit using the `bye` command to save the file.","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"KN-CY"},"content":"### Load tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"KN-CY"},"content":"Loads the task list from the *savedlist.txt* file in the same folder as the *duke.jar* file if it exists. If such a file","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"KN-CY"},"content":"does not exist or is corrupted, the application will start with an empty task list.","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":195,"author":{"gitId":"KN-CY"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"KN-CY"},"content":"Exits the application and saves the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"KN-CY"},"content":"#### Format: `bye`","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"KN-CY"},"content":"#### Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":204,"author":{"gitId":"KN-CY"},"content":"bye","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"KN-CY"},"content":"File successfully saved to: ./savedlist.txt","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"KN-CY"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"KN-CY"},"content":"____________________________________________________________","lastModifiedDate":"2023-02-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"KN-CY":184,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"public class Duke {","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    private static Storage storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    private static Parser parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    public static final String FILEPATH \u003d \"./savedlist.txt\";","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    public Duke() {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"            taskList \u003d storage.loadTaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"            ui.printValidSave();","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"            ui.printNoValidSave();","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"        } catch (ClassNotFoundException ex) {","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"            ui.printNoValidSaveClassNotFound();","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"    private void run() {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"        ui.greet();","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        String userInput \u003d ui.getInput();","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"            parser.parseResponse(userInput, taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"            userInput \u003d ui.getInput();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        handleExit();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"    private void handleExit() {","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"            storage.saveTaskList(taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"            ui.printSuccessfulSave(FILEPATH);","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"            ui.printFailedToSave();","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"        ui.farewell();","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":" * Deals with making sense of the user\u0027s command","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"public class Parser {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"    private static Ui ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"    public Parser() {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    private static boolean isValidMarkCommand(String response) {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"        return response.length() \u003e\u003d 5 \u0026\u0026 response.substring(0, 5).equalsIgnoreCase(\"mark \");","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    private static boolean isValidUnmarkCommand(String response) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"        return response.length() \u003e\u003d 7 \u0026\u0026 response.substring(0, 7).equalsIgnoreCase(\"unmark \");","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"    private static boolean isValidDeleteCommand(String response) {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"        return response.length() \u003e\u003d 7 \u0026\u0026 response.substring(0, 7).equalsIgnoreCase(\"delete \");","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"    private static boolean isValidFindCommand(String response) {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        return response.length() \u003e\u003d 5 \u0026\u0026 response.substring(0, 5).equalsIgnoreCase(\"find \");","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"    private static int parseIndex(String indexString, ArrayList\u003cTask\u003e tasks) throws InvalidIndexException {","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        indexInt \u003d Integer.parseInt(indexString);","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"        indexInt -\u003d 1; // convert to 0-index","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        if (indexInt \u003e\u003d tasks.size() || indexInt \u003c 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"        return indexInt;","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"    private static void parseAddCommand(String sentence, TaskList taskList) throws InvalidCommandException {","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"        String[] words \u003d sentence.split(\" \", 2); // split sentence only on first occurrence of space","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"        String taskType \u003d words[0].toLowerCase();","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"                taskList.addToDo(words[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"                ui.printTodoEmptyDescription();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"                taskList.addDeadline(words[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"                ui.printInvalidDeadline();","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"                ui.printDeadlineEmptyDescription();","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"        case \"event\":","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"                taskList.addEvent(words[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"                ui.printInvalidEvent();","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"                ui.printEventEmptyDescription();","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":"                return;","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"            break;","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"        default:","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"        ui.printSuccessfulAddMessage(taskList.getLatestTask(), taskList.getNumTasks()); // get latest task in taskList","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"    private static void parseMarkCommand(String indexString, TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString, taskList.getTasks());","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"            Task currTask \u003d taskList.getTasks().get(indexInt);","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"            currTask.setIsComplete(true);","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":"            ui.printSuccessfulMark(currTask);","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":"            ui.printIndexNotNumber();","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"            ui.printInvalidIndex();","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"    private static void parseUnmarkTask(String indexString, TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString, taskList.getTasks());","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"            Task currTask \u003d taskList.getTasks().get(indexInt);","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"            currTask.setIsComplete(false);","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"            ui.printSuccessfulUnmark(currTask);","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":"            ui.printIndexNotNumber();","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"KN-CY"},"content":"            ui.printInvalidIndex();","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"KN-CY"},"content":"    private static void parseDeleteTask(String indexString, TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"KN-CY"},"content":"        int indexInt;","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"KN-CY"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"KN-CY"},"content":"            indexInt \u003d parseIndex(indexString, taskList.getTasks());","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"KN-CY"},"content":"            Task deletedTask \u003d taskList.deleteTask(indexInt);","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"KN-CY"},"content":"            ui.printSuccessfulDelete(deletedTask, taskList.getNumTasks());","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"KN-CY"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"KN-CY"},"content":"            ui.printIndexNotNumber();","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"KN-CY"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"KN-CY"},"content":"            ui.printInvalidIndex();","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"KN-CY"},"content":"    private static void parseFindTasks(String filterString, TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"KN-CY"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d taskList.filterTaskList(filterString);","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"KN-CY"},"content":"        if (filteredList.size() \u003e 0) {","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"KN-CY"},"content":"            ui.printFilteredList(filteredList);","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"KN-CY"},"content":"            return;","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"KN-CY"},"content":"        ui.printFilteredListEmpty();","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"KN-CY"},"content":"     * Checks the user\u0027s input and applies the corresponding command if it is a valid command.","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"KN-CY"},"content":"     * @param userInput The input string supplied by the user through the standard input.","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"KN-CY"},"content":"     * @param taskList  The list of \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eEvent\u003c/code\u003e and \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"KN-CY"},"content":"     *                  \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"KN-CY"},"content":"    public static void parseResponse(String userInput, TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"KN-CY"},"content":"        if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"KN-CY"},"content":"            ui.displayList(taskList.getTasks());","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"KN-CY"},"content":"        } else if (isValidMarkCommand(userInput)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"KN-CY"},"content":"            parseMarkCommand(userInput.substring(5), taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"KN-CY"},"content":"        } else if (isValidUnmarkCommand(userInput)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"KN-CY"},"content":"            parseUnmarkTask(userInput.substring(7), taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"KN-CY"},"content":"        } else if (isValidDeleteCommand(userInput)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"KN-CY"},"content":"            parseDeleteTask(userInput.substring(7), taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"KN-CY"},"content":"        } else if (isValidFindCommand(userInput)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"KN-CY"},"content":"            parseFindTasks(userInput.substring(5), taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"KN-CY"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"KN-CY"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"KN-CY"},"content":"                parseAddCommand(userInput, taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"KN-CY"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"KN-CY"},"content":"                ui.printInvalidCommandException();","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"KN-CY"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"KN-CY"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KN-CY":179}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":" * Deals with loading the TaskList from a file and saving the TaskList to a file","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"public class Storage {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"    private static String filepath;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"     * Uses serialization to save the TaskList object into a file.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"     * @param taskList The object containing the list of tasks to save.","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"     * @throws IOException If there is an error writing the serialized object into the file.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    public static void saveTaskList(TaskList taskList) throws IOException {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"        FileOutputStream file \u003d new FileOutputStream(filepath);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"        ObjectOutputStream out \u003d new ObjectOutputStream(file);","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"        out.writeObject(taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"        out.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"        file.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"     * Returns the TaskList after it has been deserialized from the file.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"     * @return The TaskList after deserialization from the file.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"     * @throws IOException If there is an error loading the TaskList object from the file.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"     * @throws ClassNotFoundException If there is an error loading the TaskList object from the file.","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"    public static TaskList loadTaskList() throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        //deserialization","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"        FileInputStream file \u003d new FileInputStream(filepath);","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        ObjectInputStream in \u003d new ObjectInputStream(file);","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"        TaskList list \u003d (TaskList) in.readObject();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"        in.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"        file.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"        return list;","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KN-CY":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":" * Contains the list of \u003ccode\u003eTask\u003c/code\u003es which consists of \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e and","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":" * \u003ccode\u003eEvent\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":" * Also contains the operations to manage the list of \u003ccode\u003eTask\u003c/code\u003es.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"public class TaskList implements java.io.Serializable {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"    public Task getLatestTask() {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"        return tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"     * Adds a \u003ccode\u003eTodo\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"     * @param taskName The name of the \u003ccode\u003eTodo\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"    public void addToDo(String taskName) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"        tasks.add(new Todo(taskName));","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"     * Adds a \u003ccode\u003eDeadline\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"     * @param taskDetails The details of the \u003ccode\u003eDeadline\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"     * @throws InvalidCommandException If the deadline is of an invalid format.","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"    public void addDeadline(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"        int byIndex \u003d taskDetails.toLowerCase().indexOf(\" /by \");","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, byIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"        String dueDate \u003d taskDetails.substring(byIndex + 5); // rest of string after \" /by \"","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"        tasks.add(new Deadline(taskName, dueDate));","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"     * Adds a \u003ccode\u003eEvent\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"KN-CY"},"content":"     * @param taskDetails The details of the \u003ccode\u003eEvent\u003c/code\u003e \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"     * @throws InvalidCommandException If the event is of an invalid format.","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"    public void addEvent(String taskDetails) throws InvalidCommandException {","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"        int fromIndex \u003d taskDetails.toLowerCase().indexOf(\" /from \");","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"        int toIndex \u003d taskDetails.toLowerCase().indexOf(\" /to \");","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1 || fromIndex \u003e toIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"        String taskName \u003d taskDetails.substring(0, fromIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":"        String startTime \u003d taskDetails.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"        String endTime \u003d taskDetails.substring(toIndex + 5);","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"        tasks.add(new Event(taskName, startTime, endTime));","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e which is to be deleted.","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"KN-CY"},"content":"     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e which is to be deleted.","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"     * @return The deleted \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"        Task deletedTask \u003d tasks.get(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"        return deletedTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":"     * Returns the filtered list of tasks matching the filterString.","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"     * Uses stream to filter the list of \u003ccode\u003eTask\u003c/code\u003es to just the tasks matching the filterString.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"KN-CY"},"content":"     * @param filterString The string to filter the \u003ccode\u003eTask\u003c/code\u003e names by.","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"     * @return The filtered list.","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"    public ArrayList\u003cTask\u003e filterTaskList(String filterString) {","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"KN-CY"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"                .filter(t -\u003e t.getTaskName().contains(filterString))","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"                .collect(toList());","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"        return filteredList;","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":112}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":" * Deals with interactions with the user. Reads the user\u0027s input from standard input and prints the output to the","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":" * standard output. Output consists of expected output and error messages.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"public class Ui {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    public static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"    private static Scanner in;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    public Ui() {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    public static void printSeparator() {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    public static String getInput() {","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"        return input;","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"        printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\");","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"        printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"    public static void farewell() {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"        printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"        printSeparator();","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"     * Displays the list in a readable format with all the necessary information.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"     * Indicates index of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"     * Indicates the type of \u003ccode\u003eTask\u003c/code\u003e, whether it is a \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"     * or \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"     * Indicates if the \u003ccode\u003eTask\u003c/code\u003e is marked as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"     * @param tasks The list of \u003ccode\u003eTask\u003c/code\u003es to display.","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"    public static void displayList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"KN-CY"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\" \" + (i + 1) + \".\");","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"KN-CY"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"KN-CY"},"content":"    public void printSuccessfulAddMessage(Task currTask, int numTasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"  \" + currTask);","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"KN-CY"},"content":"    public static void printValidSave() {","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Valid save file detected.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"KN-CY"},"content":"    public static void printSuccessfulSave(String filepath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"File successfully saved to: \" + filepath);","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"KN-CY"},"content":"    public static void printSuccessfulMark(Task markedTask) {","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"   \" + markedTask.taskTypeBoxFormat() + markedTask.markedBoxFormat() + \" \"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"KN-CY"},"content":"                + markedTask.getTaskName());","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"KN-CY"},"content":"    public static void printSuccessfulUnmark(Task unmarkedTask) {","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"   \" + unmarkedTask.taskTypeBoxFormat() + unmarkedTask.markedBoxFormat() + \" \"","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"KN-CY"},"content":"                + unmarkedTask.getTaskName());","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"KN-CY"},"content":"    public static void printSuccessfulDelete(Task deletedTask, int numTasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"   \" + deletedTask.taskTypeBoxFormat() + deletedTask.markedBoxFormat() +","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"KN-CY"},"content":"                \" \" + deletedTask.getTaskName());","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"KN-CY"},"content":"     * Displays the filtered list in a readable format with all the necessary information.","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"KN-CY"},"content":"     * Indicates index of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"KN-CY"},"content":"     * Indicates the type of \u003ccode\u003eTask\u003c/code\u003e, whether it is a \u003ccode\u003eTodo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"KN-CY"},"content":"     * or \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"KN-CY"},"content":"     * Indicates if the \u003ccode\u003eTask\u003c/code\u003e is marked as done.","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"KN-CY"},"content":"     * @param filteredList The list of \u003ccode\u003eTask\u003c/code\u003es to display.","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"KN-CY"},"content":"    public static void printFilteredList(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"KN-CY"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i +\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"KN-CY"},"content":"            System.out.print(\" \" + (i + 1) + \".\");","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"KN-CY"},"content":"            System.out.println(filteredList.get(i));","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"KN-CY"},"content":"    public static void printFilteredListEmpty() {","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\" There are no matching tasks!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"KN-CY"},"content":"    public static void printInvalidIndex() {","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Given index is invalid!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"KN-CY"},"content":"    public static void printIndexNotNumber() {","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Given index is not a number!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"KN-CY"},"content":"    public static void printNoValidSave() {","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"No valid save file detected. Starting with \" +","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"KN-CY"},"content":"                \"empty list.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"KN-CY"},"content":"    public static void printNoValidSaveClassNotFound() {","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"ClassNotFoundException caught, no valid save file detected. Starting with \" +","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"KN-CY"},"content":"                \"empty list.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"KN-CY"},"content":"    public static void printInvalidCommandException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid command!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"KN-CY"},"content":"    public static void printFailedToSave() {","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"IOException caught, failed to save.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"KN-CY"},"content":"    public static void printTodoEmptyDescription() {","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid todo command! Task description cannot be empty\");","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"KN-CY"},"content":"    public static void printDeadlineEmptyDescription() {","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid deadline command! Task description cannot be empty\");","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"KN-CY"},"content":"    public static void printInvalidDeadline() {","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid deadline command!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"KN-CY"},"content":"    public static void printEventEmptyDescription() {","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid event command! Task description cannot be empty\");","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"KN-CY"},"content":"    public static void printInvalidEvent() {","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"KN-CY"},"content":"        System.out.println(\"Invalid event command!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"KN-CY":163}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":" *  InvalidCommandException is thrown when a user inputs an invalid command, such as a command which does not exist","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":" *  or a command with an invalid format.","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":8}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":" *  InvalidIndexException is thrown when a user inputs an invalid index, such as an index which is less than 1 or","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":" *  when the index is more than the number of elements in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":8}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Deadline extends Task implements java.io.Serializable {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private String dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"        super(taskName);","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"        return taskTypeBoxFormat() + markedBoxFormat() + \" \" + getTaskName() + \" (by: \" + dueDate + \u0027)\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    public String taskTypeBoxFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"        return \"[D]\";","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":21}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Event extends Task implements java.io.Serializable {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"    private String startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    private String endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    public Event(String taskName, String startTime, String endTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"        super(taskName); // invoke superclass constructor","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        return taskTypeBoxFormat() + markedBoxFormat() + \" \" + getTaskName() +","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"                \" (from: \" + startTime + \" to: \" + endTime + \u0027)\u0027;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"    public String taskTypeBoxFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"        return \"[E]\";","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":24}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"public abstract class Task implements java.io.Serializable {","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"    private boolean isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    private String taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    public Task() {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        taskName \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"KN-CY"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"KN-CY"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"KN-CY"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"KN-CY"},"content":"        return taskName;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"KN-CY"},"content":"    public void setIsComplete(boolean isComplete) {","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"KN-CY"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"KN-CY"},"content":"    public boolean getIsComplete() {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"KN-CY"},"content":"        return isComplete;","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"KN-CY"},"content":"    public abstract String taskTypeBoxFormat();","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"KN-CY"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"KN-CY"},"content":"     * Returns the formatted box in \u003ccode\u003eString\u003c/code\u003e format.","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"KN-CY"},"content":"     * Formats the box based on whether the task is already marked as completed.","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"KN-CY"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"KN-CY"},"content":"     * @return The formatted box.","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"KN-CY"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"KN-CY"},"content":"    public String markedBoxFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"KN-CY"},"content":"        if (isComplete) {","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"KN-CY"},"content":"            return \"[X]\";","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"KN-CY"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"KN-CY"},"content":"        return \"[ ]\";","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":53}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"public class Todo extends Task implements java.io.Serializable {","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"        super(taskName);","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"        return taskTypeBoxFormat() + markedBoxFormat() + \" \" + getTaskName();","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"    public String taskTypeBoxFormat() {","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"        return \"[T]\";","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KN-CY"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"KN-CY"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"KN-CY":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KN-CY"},"content":"todo read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"KN-CY"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"KN-CY"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"KN-CY"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"KN-CY"},"content":"todo join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"KN-CY"},"content":"mark 4","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"KN-CY"},"content":"todo borrow book","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"KN-CY"},"content":"hello","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"world","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"KN-CY"},"content":"mark 25","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"KN-CY"},"content":"deadline wrong deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"KN-CY"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"KN-CY"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"KN-CY"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"KN-CY":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"KN-CY"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KN-CY":1,"-":20}}]
